// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.12.4
// source: kanban.proto

package kanban

import (
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	client "github.com/slamy-solutions/openbp/modules/crm/libs/golang/core/client"
	department "github.com/slamy-solutions/openbp/modules/crm/libs/golang/core/department"
	performer "github.com/slamy-solutions/openbp/modules/crm/libs/golang/core/performer"
	project "github.com/slamy-solutions/openbp/modules/crm/libs/golang/core/project"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TicketFeedEntryType int32

const (
	TicketFeedEntryType_commentPerformer TicketFeedEntryType = 0
	TicketFeedEntryType_commentClient    TicketFeedEntryType = 1
	TicketFeedEntryType_callIn           TicketFeedEntryType = 2
	TicketFeedEntryType_callOut          TicketFeedEntryType = 3
)

// Enum value maps for TicketFeedEntryType.
var (
	TicketFeedEntryType_name = map[int32]string{
		0: "commentPerformer",
		1: "commentClient",
		2: "callIn",
		3: "callOut",
	}
	TicketFeedEntryType_value = map[string]int32{
		"commentPerformer": 0,
		"commentClient":    1,
		"callIn":           2,
		"callOut":          3,
	}
)

func (x TicketFeedEntryType) Enum() *TicketFeedEntryType {
	p := new(TicketFeedEntryType)
	*p = x
	return p
}

func (x TicketFeedEntryType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TicketFeedEntryType) Descriptor() protoreflect.EnumDescriptor {
	return file_kanban_proto_enumTypes[0].Descriptor()
}

func (TicketFeedEntryType) Type() protoreflect.EnumType {
	return &file_kanban_proto_enumTypes[0]
}

func (x TicketFeedEntryType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TicketFeedEntryType.Descriptor instead.
func (TicketFeedEntryType) EnumDescriptor() ([]byte, []int) {
	return file_kanban_proto_rawDescGZIP(), []int{0}
}

type TicketStage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace        string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Uuid             string `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Name             string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	DepartmentUUID   string `protobuf:"bytes,4,opt,name=departmentUUID,proto3" json:"departmentUUID,omitempty"`
	ArrangementIndex int64  `protobuf:"varint,5,opt,name=arrangementIndex,proto3" json:"arrangementIndex,omitempty"`
}

func (x *TicketStage) Reset() {
	*x = TicketStage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kanban_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TicketStage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TicketStage) ProtoMessage() {}

func (x *TicketStage) ProtoReflect() protoreflect.Message {
	mi := &file_kanban_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TicketStage.ProtoReflect.Descriptor instead.
func (*TicketStage) Descriptor() ([]byte, []int) {
	return file_kanban_proto_rawDescGZIP(), []int{0}
}

func (x *TicketStage) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *TicketStage) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *TicketStage) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TicketStage) GetDepartmentUUID() string {
	if x != nil {
		return x.DepartmentUUID
	}
	return ""
}

func (x *TicketStage) GetArrangementIndex() int64 {
	if x != nil {
		return x.ArrangementIndex
	}
	return 0
}

type TicketFeedEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type      TicketFeedEntryType  `protobuf:"varint,1,opt,name=type,proto3,enum=kanban.TicketFeedEntryType" json:"type,omitempty"`
	Files     []string             `protobuf:"bytes,2,rep,name=files,proto3" json:"files,omitempty"`
	Timestamp *timestamp.Timestamp `protobuf:"bytes,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *TicketFeedEntry) Reset() {
	*x = TicketFeedEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kanban_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TicketFeedEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TicketFeedEntry) ProtoMessage() {}

func (x *TicketFeedEntry) ProtoReflect() protoreflect.Message {
	mi := &file_kanban_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TicketFeedEntry.ProtoReflect.Descriptor instead.
func (*TicketFeedEntry) Descriptor() ([]byte, []int) {
	return file_kanban_proto_rawDescGZIP(), []int{1}
}

func (x *TicketFeedEntry) GetType() TicketFeedEntryType {
	if x != nil {
		return x.Type
	}
	return TicketFeedEntryType_commentPerformer
}

func (x *TicketFeedEntry) GetFiles() []string {
	if x != nil {
		return x.Files
	}
	return nil
}

func (x *TicketFeedEntry) GetTimestamp() *timestamp.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

type Ticket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace         string                 `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	UUID              string                 `protobuf:"bytes,2,opt,name=UUID,proto3" json:"UUID,omitempty"`
	Name              string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Description       string                 `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	Files             []string               `protobuf:"bytes,5,rep,name=files,proto3" json:"files,omitempty"`
	Priority          int32                  `protobuf:"varint,6,opt,name=priority,proto3" json:"priority,omitempty"`
	ClientUUID        string                 `protobuf:"bytes,7,opt,name=clientUUID,proto3" json:"clientUUID,omitempty"`
	Client            *client.Client         `protobuf:"bytes,8,opt,name=client,proto3,oneof" json:"client,omitempty"`
	ContactPersonUUID string                 `protobuf:"bytes,9,opt,name=contactPersonUUID,proto3" json:"contactPersonUUID,omitempty"`
	ContactPerson     *client.ContactPerson  `protobuf:"bytes,10,opt,name=contactPerson,proto3,oneof" json:"contactPerson,omitempty"`
	DepartmentUUID    string                 `protobuf:"bytes,11,opt,name=departmentUUID,proto3" json:"departmentUUID,omitempty"`
	Department        *department.Department `protobuf:"bytes,12,opt,name=department,proto3,oneof" json:"department,omitempty"`
	PerformerUUID     string                 `protobuf:"bytes,13,opt,name=performerUUID,proto3" json:"performerUUID,omitempty"`
	Performer         *performer.Performer   `protobuf:"bytes,14,opt,name=performer,proto3,oneof" json:"performer,omitempty"`
	ProjectUUID       string                 `protobuf:"bytes,15,opt,name=projectUUID,proto3" json:"projectUUID,omitempty"`
	Project           *project.Project       `protobuf:"bytes,16,opt,name=project,proto3,oneof" json:"project,omitempty"`
	StageUUID         string                 `protobuf:"bytes,17,opt,name=stageUUID,proto3" json:"stageUUID,omitempty"`
	Stage             *TicketStage           `protobuf:"bytes,18,opt,name=stage,proto3,oneof" json:"stage,omitempty"`
	Feed              []*TicketFeedEntry     `protobuf:"bytes,19,rep,name=feed,proto3" json:"feed,omitempty"`
	Planning          *Ticket_Planning       `protobuf:"bytes,20,opt,name=planning,proto3" json:"planning,omitempty"`
	Tracking          *Ticket_Tracking       `protobuf:"bytes,21,opt,name=tracking,proto3" json:"tracking,omitempty"`
	CloseDate         *timestamp.Timestamp   `protobuf:"bytes,22,opt,name=closeDate,proto3,oneof" json:"closeDate,omitempty"`
	Created           *timestamp.Timestamp   `protobuf:"bytes,23,opt,name=created,proto3" json:"created,omitempty"`
	Updated           *timestamp.Timestamp   `protobuf:"bytes,24,opt,name=updated,proto3" json:"updated,omitempty"`
	Version           int32                  `protobuf:"varint,25,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *Ticket) Reset() {
	*x = Ticket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kanban_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ticket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ticket) ProtoMessage() {}

func (x *Ticket) ProtoReflect() protoreflect.Message {
	mi := &file_kanban_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ticket.ProtoReflect.Descriptor instead.
func (*Ticket) Descriptor() ([]byte, []int) {
	return file_kanban_proto_rawDescGZIP(), []int{2}
}

func (x *Ticket) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *Ticket) GetUUID() string {
	if x != nil {
		return x.UUID
	}
	return ""
}

func (x *Ticket) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Ticket) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Ticket) GetFiles() []string {
	if x != nil {
		return x.Files
	}
	return nil
}

func (x *Ticket) GetPriority() int32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

func (x *Ticket) GetClientUUID() string {
	if x != nil {
		return x.ClientUUID
	}
	return ""
}

func (x *Ticket) GetClient() *client.Client {
	if x != nil {
		return x.Client
	}
	return nil
}

func (x *Ticket) GetContactPersonUUID() string {
	if x != nil {
		return x.ContactPersonUUID
	}
	return ""
}

func (x *Ticket) GetContactPerson() *client.ContactPerson {
	if x != nil {
		return x.ContactPerson
	}
	return nil
}

func (x *Ticket) GetDepartmentUUID() string {
	if x != nil {
		return x.DepartmentUUID
	}
	return ""
}

func (x *Ticket) GetDepartment() *department.Department {
	if x != nil {
		return x.Department
	}
	return nil
}

func (x *Ticket) GetPerformerUUID() string {
	if x != nil {
		return x.PerformerUUID
	}
	return ""
}

func (x *Ticket) GetPerformer() *performer.Performer {
	if x != nil {
		return x.Performer
	}
	return nil
}

func (x *Ticket) GetProjectUUID() string {
	if x != nil {
		return x.ProjectUUID
	}
	return ""
}

func (x *Ticket) GetProject() *project.Project {
	if x != nil {
		return x.Project
	}
	return nil
}

func (x *Ticket) GetStageUUID() string {
	if x != nil {
		return x.StageUUID
	}
	return ""
}

func (x *Ticket) GetStage() *TicketStage {
	if x != nil {
		return x.Stage
	}
	return nil
}

func (x *Ticket) GetFeed() []*TicketFeedEntry {
	if x != nil {
		return x.Feed
	}
	return nil
}

func (x *Ticket) GetPlanning() *Ticket_Planning {
	if x != nil {
		return x.Planning
	}
	return nil
}

func (x *Ticket) GetTracking() *Ticket_Tracking {
	if x != nil {
		return x.Tracking
	}
	return nil
}

func (x *Ticket) GetCloseDate() *timestamp.Timestamp {
	if x != nil {
		return x.CloseDate
	}
	return nil
}

func (x *Ticket) GetCreated() *timestamp.Timestamp {
	if x != nil {
		return x.Created
	}
	return nil
}

func (x *Ticket) GetUpdated() *timestamp.Timestamp {
	if x != nil {
		return x.Updated
	}
	return nil
}

func (x *Ticket) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

type CreateStageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace        string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name             string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	DepartmentUUID   string `protobuf:"bytes,3,opt,name=departmentUUID,proto3" json:"departmentUUID,omitempty"`
	ArrangementIndex uint32 `protobuf:"varint,4,opt,name=arrangementIndex,proto3" json:"arrangementIndex,omitempty"`
}

func (x *CreateStageRequest) Reset() {
	*x = CreateStageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kanban_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateStageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateStageRequest) ProtoMessage() {}

func (x *CreateStageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kanban_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateStageRequest.ProtoReflect.Descriptor instead.
func (*CreateStageRequest) Descriptor() ([]byte, []int) {
	return file_kanban_proto_rawDescGZIP(), []int{3}
}

func (x *CreateStageRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *CreateStageRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateStageRequest) GetDepartmentUUID() string {
	if x != nil {
		return x.DepartmentUUID
	}
	return ""
}

func (x *CreateStageRequest) GetArrangementIndex() uint32 {
	if x != nil {
		return x.ArrangementIndex
	}
	return 0
}

type CreateStageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Stage *TicketStage `protobuf:"bytes,1,opt,name=stage,proto3" json:"stage,omitempty"`
}

func (x *CreateStageResponse) Reset() {
	*x = CreateStageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kanban_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateStageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateStageResponse) ProtoMessage() {}

func (x *CreateStageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kanban_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateStageResponse.ProtoReflect.Descriptor instead.
func (*CreateStageResponse) Descriptor() ([]byte, []int) {
	return file_kanban_proto_rawDescGZIP(), []int{4}
}

func (x *CreateStageResponse) GetStage() *TicketStage {
	if x != nil {
		return x.Stage
	}
	return nil
}

type GetStageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	UUID      string `protobuf:"bytes,2,opt,name=UUID,proto3" json:"UUID,omitempty"`
	UseCache  bool   `protobuf:"varint,3,opt,name=useCache,proto3" json:"useCache,omitempty"`
}

func (x *GetStageRequest) Reset() {
	*x = GetStageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kanban_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStageRequest) ProtoMessage() {}

func (x *GetStageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kanban_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStageRequest.ProtoReflect.Descriptor instead.
func (*GetStageRequest) Descriptor() ([]byte, []int) {
	return file_kanban_proto_rawDescGZIP(), []int{5}
}

func (x *GetStageRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *GetStageRequest) GetUUID() string {
	if x != nil {
		return x.UUID
	}
	return ""
}

func (x *GetStageRequest) GetUseCache() bool {
	if x != nil {
		return x.UseCache
	}
	return false
}

type GetStageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Stage *TicketStage `protobuf:"bytes,1,opt,name=stage,proto3" json:"stage,omitempty"`
}

func (x *GetStageResponse) Reset() {
	*x = GetStageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kanban_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStageResponse) ProtoMessage() {}

func (x *GetStageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kanban_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStageResponse.ProtoReflect.Descriptor instead.
func (*GetStageResponse) Descriptor() ([]byte, []int) {
	return file_kanban_proto_rawDescGZIP(), []int{6}
}

func (x *GetStageResponse) GetStage() *TicketStage {
	if x != nil {
		return x.Stage
	}
	return nil
}

type GetStagesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace      string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	DepartmentUUID string `protobuf:"bytes,2,opt,name=departmentUUID,proto3" json:"departmentUUID,omitempty"`
	UseCache       bool   `protobuf:"varint,3,opt,name=useCache,proto3" json:"useCache,omitempty"`
}

func (x *GetStagesRequest) Reset() {
	*x = GetStagesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kanban_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStagesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStagesRequest) ProtoMessage() {}

func (x *GetStagesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kanban_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStagesRequest.ProtoReflect.Descriptor instead.
func (*GetStagesRequest) Descriptor() ([]byte, []int) {
	return file_kanban_proto_rawDescGZIP(), []int{7}
}

func (x *GetStagesRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *GetStagesRequest) GetDepartmentUUID() string {
	if x != nil {
		return x.DepartmentUUID
	}
	return ""
}

func (x *GetStagesRequest) GetUseCache() bool {
	if x != nil {
		return x.UseCache
	}
	return false
}

type GetStagesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Stages []*TicketStage `protobuf:"bytes,1,rep,name=stages,proto3" json:"stages,omitempty"`
}

func (x *GetStagesResponse) Reset() {
	*x = GetStagesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kanban_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStagesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStagesResponse) ProtoMessage() {}

func (x *GetStagesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kanban_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStagesResponse.ProtoReflect.Descriptor instead.
func (*GetStagesResponse) Descriptor() ([]byte, []int) {
	return file_kanban_proto_rawDescGZIP(), []int{8}
}

func (x *GetStagesResponse) GetStages() []*TicketStage {
	if x != nil {
		return x.Stages
	}
	return nil
}

type UpdateStageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	UUID      string `protobuf:"bytes,2,opt,name=UUID,proto3" json:"UUID,omitempty"`
	Name      string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *UpdateStageRequest) Reset() {
	*x = UpdateStageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kanban_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateStageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateStageRequest) ProtoMessage() {}

func (x *UpdateStageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kanban_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateStageRequest.ProtoReflect.Descriptor instead.
func (*UpdateStageRequest) Descriptor() ([]byte, []int) {
	return file_kanban_proto_rawDescGZIP(), []int{9}
}

func (x *UpdateStageRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *UpdateStageRequest) GetUUID() string {
	if x != nil {
		return x.UUID
	}
	return ""
}

func (x *UpdateStageRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type UpdateStageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Stage *TicketStage `protobuf:"bytes,1,opt,name=stage,proto3" json:"stage,omitempty"`
}

func (x *UpdateStageResponse) Reset() {
	*x = UpdateStageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kanban_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateStageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateStageResponse) ProtoMessage() {}

func (x *UpdateStageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kanban_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateStageResponse.ProtoReflect.Descriptor instead.
func (*UpdateStageResponse) Descriptor() ([]byte, []int) {
	return file_kanban_proto_rawDescGZIP(), []int{10}
}

func (x *UpdateStageResponse) GetStage() *TicketStage {
	if x != nil {
		return x.Stage
	}
	return nil
}

type DeleteStageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	UUID      string `protobuf:"bytes,2,opt,name=UUID,proto3" json:"UUID,omitempty"`
}

func (x *DeleteStageRequest) Reset() {
	*x = DeleteStageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kanban_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteStageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteStageRequest) ProtoMessage() {}

func (x *DeleteStageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kanban_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteStageRequest.ProtoReflect.Descriptor instead.
func (*DeleteStageRequest) Descriptor() ([]byte, []int) {
	return file_kanban_proto_rawDescGZIP(), []int{11}
}

func (x *DeleteStageRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *DeleteStageRequest) GetUUID() string {
	if x != nil {
		return x.UUID
	}
	return ""
}

type DeleteStageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteStageResponse) Reset() {
	*x = DeleteStageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kanban_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteStageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteStageResponse) ProtoMessage() {}

func (x *DeleteStageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kanban_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteStageResponse.ProtoReflect.Descriptor instead.
func (*DeleteStageResponse) Descriptor() ([]byte, []int) {
	return file_kanban_proto_rawDescGZIP(), []int{12}
}

type SwapStagesOrderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace  string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	StageUUID1 string `protobuf:"bytes,2,opt,name=stageUUID1,proto3" json:"stageUUID1,omitempty"`
	StageUUID2 string `protobuf:"bytes,3,opt,name=stageUUID2,proto3" json:"stageUUID2,omitempty"`
}

func (x *SwapStagesOrderRequest) Reset() {
	*x = SwapStagesOrderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kanban_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SwapStagesOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SwapStagesOrderRequest) ProtoMessage() {}

func (x *SwapStagesOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kanban_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SwapStagesOrderRequest.ProtoReflect.Descriptor instead.
func (*SwapStagesOrderRequest) Descriptor() ([]byte, []int) {
	return file_kanban_proto_rawDescGZIP(), []int{13}
}

func (x *SwapStagesOrderRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *SwapStagesOrderRequest) GetStageUUID1() string {
	if x != nil {
		return x.StageUUID1
	}
	return ""
}

func (x *SwapStagesOrderRequest) GetStageUUID2() string {
	if x != nil {
		return x.StageUUID2
	}
	return ""
}

type SwapStagesOrderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SwapStagesOrderResponse) Reset() {
	*x = SwapStagesOrderResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kanban_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SwapStagesOrderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SwapStagesOrderResponse) ProtoMessage() {}

func (x *SwapStagesOrderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kanban_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SwapStagesOrderResponse.ProtoReflect.Descriptor instead.
func (*SwapStagesOrderResponse) Descriptor() ([]byte, []int) {
	return file_kanban_proto_rawDescGZIP(), []int{14}
}

type CreateTicketRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace               string   `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name                    string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description             string   `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Files                   []string `protobuf:"bytes,4,rep,name=files,proto3" json:"files,omitempty"`
	Priority                int32    `protobuf:"varint,5,opt,name=priority,proto3" json:"priority,omitempty"`
	ClientUUID              string   `protobuf:"bytes,6,opt,name=clientUUID,proto3" json:"clientUUID,omitempty"`
	ContactPersonUUID       string   `protobuf:"bytes,7,opt,name=contactPersonUUID,proto3" json:"contactPersonUUID,omitempty"`
	DepartmentUUID          string   `protobuf:"bytes,8,opt,name=departmentUUID,proto3" json:"departmentUUID,omitempty"`
	PerformerUUID           string   `protobuf:"bytes,9,opt,name=performerUUID,proto3" json:"performerUUID,omitempty"`
	ProjectUUID             string   `protobuf:"bytes,10,opt,name=projectUUID,proto3" json:"projectUUID,omitempty"`
	TrackingStoryPointsPlan uint32   `protobuf:"varint,11,opt,name=trackingStoryPointsPlan,proto3" json:"trackingStoryPointsPlan,omitempty"`
}

func (x *CreateTicketRequest) Reset() {
	*x = CreateTicketRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kanban_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTicketRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTicketRequest) ProtoMessage() {}

func (x *CreateTicketRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kanban_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTicketRequest.ProtoReflect.Descriptor instead.
func (*CreateTicketRequest) Descriptor() ([]byte, []int) {
	return file_kanban_proto_rawDescGZIP(), []int{15}
}

func (x *CreateTicketRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *CreateTicketRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateTicketRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateTicketRequest) GetFiles() []string {
	if x != nil {
		return x.Files
	}
	return nil
}

func (x *CreateTicketRequest) GetPriority() int32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

func (x *CreateTicketRequest) GetClientUUID() string {
	if x != nil {
		return x.ClientUUID
	}
	return ""
}

func (x *CreateTicketRequest) GetContactPersonUUID() string {
	if x != nil {
		return x.ContactPersonUUID
	}
	return ""
}

func (x *CreateTicketRequest) GetDepartmentUUID() string {
	if x != nil {
		return x.DepartmentUUID
	}
	return ""
}

func (x *CreateTicketRequest) GetPerformerUUID() string {
	if x != nil {
		return x.PerformerUUID
	}
	return ""
}

func (x *CreateTicketRequest) GetProjectUUID() string {
	if x != nil {
		return x.ProjectUUID
	}
	return ""
}

func (x *CreateTicketRequest) GetTrackingStoryPointsPlan() uint32 {
	if x != nil {
		return x.TrackingStoryPointsPlan
	}
	return 0
}

type CreateTicketResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ticket *Ticket `protobuf:"bytes,1,opt,name=ticket,proto3" json:"ticket,omitempty"`
}

func (x *CreateTicketResponse) Reset() {
	*x = CreateTicketResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kanban_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTicketResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTicketResponse) ProtoMessage() {}

func (x *CreateTicketResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kanban_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTicketResponse.ProtoReflect.Descriptor instead.
func (*CreateTicketResponse) Descriptor() ([]byte, []int) {
	return file_kanban_proto_rawDescGZIP(), []int{16}
}

func (x *CreateTicketResponse) GetTicket() *Ticket {
	if x != nil {
		return x.Ticket
	}
	return nil
}

type GetTicketRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	UUID      string `protobuf:"bytes,2,opt,name=UUID,proto3" json:"UUID,omitempty"`
	UseCache  bool   `protobuf:"varint,3,opt,name=useCache,proto3" json:"useCache,omitempty"`
}

func (x *GetTicketRequest) Reset() {
	*x = GetTicketRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kanban_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTicketRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTicketRequest) ProtoMessage() {}

func (x *GetTicketRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kanban_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTicketRequest.ProtoReflect.Descriptor instead.
func (*GetTicketRequest) Descriptor() ([]byte, []int) {
	return file_kanban_proto_rawDescGZIP(), []int{17}
}

func (x *GetTicketRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *GetTicketRequest) GetUUID() string {
	if x != nil {
		return x.UUID
	}
	return ""
}

func (x *GetTicketRequest) GetUseCache() bool {
	if x != nil {
		return x.UseCache
	}
	return false
}

type GetTicketResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ticket *Ticket `protobuf:"bytes,1,opt,name=ticket,proto3" json:"ticket,omitempty"`
}

func (x *GetTicketResponse) Reset() {
	*x = GetTicketResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kanban_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTicketResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTicketResponse) ProtoMessage() {}

func (x *GetTicketResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kanban_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTicketResponse.ProtoReflect.Descriptor instead.
func (*GetTicketResponse) Descriptor() ([]byte, []int) {
	return file_kanban_proto_rawDescGZIP(), []int{18}
}

func (x *GetTicketResponse) GetTicket() *Ticket {
	if x != nil {
		return x.Ticket
	}
	return nil
}

type GetTicketsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace      string  `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	DepartmentUUID *string `protobuf:"bytes,2,opt,name=departmentUUID,proto3,oneof" json:"departmentUUID,omitempty"`
	PerformerUUID  *string `protobuf:"bytes,3,opt,name=performerUUID,proto3,oneof" json:"performerUUID,omitempty"`
	UseCache       bool    `protobuf:"varint,6,opt,name=useCache,proto3" json:"useCache,omitempty"`
}

func (x *GetTicketsRequest) Reset() {
	*x = GetTicketsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kanban_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTicketsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTicketsRequest) ProtoMessage() {}

func (x *GetTicketsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kanban_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTicketsRequest.ProtoReflect.Descriptor instead.
func (*GetTicketsRequest) Descriptor() ([]byte, []int) {
	return file_kanban_proto_rawDescGZIP(), []int{19}
}

func (x *GetTicketsRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *GetTicketsRequest) GetDepartmentUUID() string {
	if x != nil && x.DepartmentUUID != nil {
		return *x.DepartmentUUID
	}
	return ""
}

func (x *GetTicketsRequest) GetPerformerUUID() string {
	if x != nil && x.PerformerUUID != nil {
		return *x.PerformerUUID
	}
	return ""
}

func (x *GetTicketsRequest) GetUseCache() bool {
	if x != nil {
		return x.UseCache
	}
	return false
}

type GetTicketsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tickets []*Ticket `protobuf:"bytes,1,rep,name=tickets,proto3" json:"tickets,omitempty"`
}

func (x *GetTicketsResponse) Reset() {
	*x = GetTicketsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kanban_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTicketsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTicketsResponse) ProtoMessage() {}

func (x *GetTicketsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kanban_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTicketsResponse.ProtoReflect.Descriptor instead.
func (*GetTicketsResponse) Descriptor() ([]byte, []int) {
	return file_kanban_proto_rawDescGZIP(), []int{20}
}

func (x *GetTicketsResponse) GetTickets() []*Ticket {
	if x != nil {
		return x.Tickets
	}
	return nil
}

type UpdateTicketBasicInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace   string   `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	UUID        string   `protobuf:"bytes,2,opt,name=UUID,proto3" json:"UUID,omitempty"`
	Name        string   `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Description string   `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	Files       []string `protobuf:"bytes,5,rep,name=files,proto3" json:"files,omitempty"`
}

func (x *UpdateTicketBasicInfoRequest) Reset() {
	*x = UpdateTicketBasicInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kanban_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTicketBasicInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTicketBasicInfoRequest) ProtoMessage() {}

func (x *UpdateTicketBasicInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kanban_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTicketBasicInfoRequest.ProtoReflect.Descriptor instead.
func (*UpdateTicketBasicInfoRequest) Descriptor() ([]byte, []int) {
	return file_kanban_proto_rawDescGZIP(), []int{21}
}

func (x *UpdateTicketBasicInfoRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *UpdateTicketBasicInfoRequest) GetUUID() string {
	if x != nil {
		return x.UUID
	}
	return ""
}

func (x *UpdateTicketBasicInfoRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateTicketBasicInfoRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *UpdateTicketBasicInfoRequest) GetFiles() []string {
	if x != nil {
		return x.Files
	}
	return nil
}

type UpdateTicketBasicInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ticket *Ticket `protobuf:"bytes,1,opt,name=ticket,proto3" json:"ticket,omitempty"`
}

func (x *UpdateTicketBasicInfoResponse) Reset() {
	*x = UpdateTicketBasicInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kanban_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTicketBasicInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTicketBasicInfoResponse) ProtoMessage() {}

func (x *UpdateTicketBasicInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kanban_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTicketBasicInfoResponse.ProtoReflect.Descriptor instead.
func (*UpdateTicketBasicInfoResponse) Descriptor() ([]byte, []int) {
	return file_kanban_proto_rawDescGZIP(), []int{22}
}

func (x *UpdateTicketBasicInfoResponse) GetTicket() *Ticket {
	if x != nil {
		return x.Ticket
	}
	return nil
}

type DeleteTicketRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	UUID      string `protobuf:"bytes,2,opt,name=UUID,proto3" json:"UUID,omitempty"`
}

func (x *DeleteTicketRequest) Reset() {
	*x = DeleteTicketRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kanban_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteTicketRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTicketRequest) ProtoMessage() {}

func (x *DeleteTicketRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kanban_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTicketRequest.ProtoReflect.Descriptor instead.
func (*DeleteTicketRequest) Descriptor() ([]byte, []int) {
	return file_kanban_proto_rawDescGZIP(), []int{23}
}

func (x *DeleteTicketRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *DeleteTicketRequest) GetUUID() string {
	if x != nil {
		return x.UUID
	}
	return ""
}

type DeleteTicketResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteTicketResponse) Reset() {
	*x = DeleteTicketResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kanban_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteTicketResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTicketResponse) ProtoMessage() {}

func (x *DeleteTicketResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kanban_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTicketResponse.ProtoReflect.Descriptor instead.
func (*DeleteTicketResponse) Descriptor() ([]byte, []int) {
	return file_kanban_proto_rawDescGZIP(), []int{24}
}

type UpdateTicketStageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace       string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	UUID            string `protobuf:"bytes,2,opt,name=UUID,proto3" json:"UUID,omitempty"`
	TicketStageUUID string `protobuf:"bytes,3,opt,name=ticketStageUUID,proto3" json:"ticketStageUUID,omitempty"`
}

func (x *UpdateTicketStageRequest) Reset() {
	*x = UpdateTicketStageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kanban_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTicketStageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTicketStageRequest) ProtoMessage() {}

func (x *UpdateTicketStageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kanban_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTicketStageRequest.ProtoReflect.Descriptor instead.
func (*UpdateTicketStageRequest) Descriptor() ([]byte, []int) {
	return file_kanban_proto_rawDescGZIP(), []int{25}
}

func (x *UpdateTicketStageRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *UpdateTicketStageRequest) GetUUID() string {
	if x != nil {
		return x.UUID
	}
	return ""
}

func (x *UpdateTicketStageRequest) GetTicketStageUUID() string {
	if x != nil {
		return x.TicketStageUUID
	}
	return ""
}

type UpdateTicketStageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ticket *Ticket `protobuf:"bytes,1,opt,name=ticket,proto3" json:"ticket,omitempty"`
}

func (x *UpdateTicketStageResponse) Reset() {
	*x = UpdateTicketStageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kanban_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTicketStageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTicketStageResponse) ProtoMessage() {}

func (x *UpdateTicketStageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kanban_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTicketStageResponse.ProtoReflect.Descriptor instead.
func (*UpdateTicketStageResponse) Descriptor() ([]byte, []int) {
	return file_kanban_proto_rawDescGZIP(), []int{26}
}

func (x *UpdateTicketStageResponse) GetTicket() *Ticket {
	if x != nil {
		return x.Ticket
	}
	return nil
}

type UpdateTicketPriorityRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	UUID      string `protobuf:"bytes,2,opt,name=UUID,proto3" json:"UUID,omitempty"`
	Priority  int32  `protobuf:"varint,3,opt,name=priority,proto3" json:"priority,omitempty"`
}

func (x *UpdateTicketPriorityRequest) Reset() {
	*x = UpdateTicketPriorityRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kanban_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTicketPriorityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTicketPriorityRequest) ProtoMessage() {}

func (x *UpdateTicketPriorityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kanban_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTicketPriorityRequest.ProtoReflect.Descriptor instead.
func (*UpdateTicketPriorityRequest) Descriptor() ([]byte, []int) {
	return file_kanban_proto_rawDescGZIP(), []int{27}
}

func (x *UpdateTicketPriorityRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *UpdateTicketPriorityRequest) GetUUID() string {
	if x != nil {
		return x.UUID
	}
	return ""
}

func (x *UpdateTicketPriorityRequest) GetPriority() int32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

type UpdateTicketPriorityResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ticket *Ticket `protobuf:"bytes,1,opt,name=ticket,proto3" json:"ticket,omitempty"`
}

func (x *UpdateTicketPriorityResponse) Reset() {
	*x = UpdateTicketPriorityResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kanban_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTicketPriorityResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTicketPriorityResponse) ProtoMessage() {}

func (x *UpdateTicketPriorityResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kanban_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTicketPriorityResponse.ProtoReflect.Descriptor instead.
func (*UpdateTicketPriorityResponse) Descriptor() ([]byte, []int) {
	return file_kanban_proto_rawDescGZIP(), []int{28}
}

func (x *UpdateTicketPriorityResponse) GetTicket() *Ticket {
	if x != nil {
		return x.Ticket
	}
	return nil
}

type CloseTicketRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	UUID      string `protobuf:"bytes,2,opt,name=UUID,proto3" json:"UUID,omitempty"`
}

func (x *CloseTicketRequest) Reset() {
	*x = CloseTicketRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kanban_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloseTicketRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseTicketRequest) ProtoMessage() {}

func (x *CloseTicketRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kanban_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseTicketRequest.ProtoReflect.Descriptor instead.
func (*CloseTicketRequest) Descriptor() ([]byte, []int) {
	return file_kanban_proto_rawDescGZIP(), []int{29}
}

func (x *CloseTicketRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *CloseTicketRequest) GetUUID() string {
	if x != nil {
		return x.UUID
	}
	return ""
}

type CloseTicketResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ticket *Ticket `protobuf:"bytes,1,opt,name=ticket,proto3" json:"ticket,omitempty"`
}

func (x *CloseTicketResponse) Reset() {
	*x = CloseTicketResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kanban_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloseTicketResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseTicketResponse) ProtoMessage() {}

func (x *CloseTicketResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kanban_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseTicketResponse.ProtoReflect.Descriptor instead.
func (*CloseTicketResponse) Descriptor() ([]byte, []int) {
	return file_kanban_proto_rawDescGZIP(), []int{30}
}

func (x *CloseTicketResponse) GetTicket() *Ticket {
	if x != nil {
		return x.Ticket
	}
	return nil
}

type Ticket_Planning struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExpectedStartDate *timestamp.Timestamp `protobuf:"bytes,1,opt,name=expectedStartDate,proto3" json:"expectedStartDate,omitempty"`
}

func (x *Ticket_Planning) Reset() {
	*x = Ticket_Planning{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kanban_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ticket_Planning) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ticket_Planning) ProtoMessage() {}

func (x *Ticket_Planning) ProtoReflect() protoreflect.Message {
	mi := &file_kanban_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ticket_Planning.ProtoReflect.Descriptor instead.
func (*Ticket_Planning) Descriptor() ([]byte, []int) {
	return file_kanban_proto_rawDescGZIP(), []int{2, 0}
}

func (x *Ticket_Planning) GetExpectedStartDate() *timestamp.Timestamp {
	if x != nil {
		return x.ExpectedStartDate
	}
	return nil
}

type Ticket_Tracking struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StoryPointsPlan uint32 `protobuf:"varint,1,opt,name=storyPointsPlan,proto3" json:"storyPointsPlan,omitempty"`
	StoryPointsFact uint32 `protobuf:"varint,2,opt,name=storyPointsFact,proto3" json:"storyPointsFact,omitempty"`
	TrackedTime     uint64 `protobuf:"varint,3,opt,name=trackedTime,proto3" json:"trackedTime,omitempty"`
}

func (x *Ticket_Tracking) Reset() {
	*x = Ticket_Tracking{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kanban_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ticket_Tracking) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ticket_Tracking) ProtoMessage() {}

func (x *Ticket_Tracking) ProtoReflect() protoreflect.Message {
	mi := &file_kanban_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ticket_Tracking.ProtoReflect.Descriptor instead.
func (*Ticket_Tracking) Descriptor() ([]byte, []int) {
	return file_kanban_proto_rawDescGZIP(), []int{2, 1}
}

func (x *Ticket_Tracking) GetStoryPointsPlan() uint32 {
	if x != nil {
		return x.StoryPointsPlan
	}
	return 0
}

func (x *Ticket_Tracking) GetStoryPointsFact() uint32 {
	if x != nil {
		return x.StoryPointsFact
	}
	return 0
}

func (x *Ticket_Tracking) GetTrackedTime() uint64 {
	if x != nil {
		return x.TrackedTime
	}
	return 0
}

var File_kanban_proto protoreflect.FileDescriptor

var file_kanban_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x6b, 0x61, 0x6e, 0x62, 0x61, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06,
	0x6b, 0x61, 0x6e, 0x62, 0x61, 0x6e, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x10, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e,
	0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0f, 0x70, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d,
	0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0d, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa7, 0x01, 0x0a, 0x0b, 0x54, 0x69, 0x63, 0x6b,
	0x65, 0x74, 0x53, 0x74, 0x61, 0x67, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a,
	0x0e, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x55, 0x55, 0x49, 0x44, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e,
	0x74, 0x55, 0x55, 0x49, 0x44, 0x12, 0x2a, 0x0a, 0x10, 0x61, 0x72, 0x72, 0x61, 0x6e, 0x67, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x10, 0x61, 0x72, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x22, 0x92, 0x01, 0x0a, 0x0f, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x46, 0x65, 0x65, 0x64,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x2f, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x6b, 0x61, 0x6e, 0x62, 0x61, 0x6e, 0x2e, 0x54, 0x69, 0x63,
	0x6b, 0x65, 0x74, 0x46, 0x65, 0x65, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x12, 0x38, 0x0a, 0x09,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0xeb, 0x0a, 0x0a, 0x06, 0x54, 0x69, 0x63, 0x6b, 0x65,
	0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x55, 0x55, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x55,
	0x55, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x69, 0x6c,
	0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x12,
	0x1a, 0x0a, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x55, 0x55, 0x49, 0x44, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x55, 0x55, 0x49, 0x44, 0x12, 0x2f, 0x0a, 0x06, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63, 0x72,
	0x6d, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x48,
	0x00, 0x52, 0x06, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x2c, 0x0a, 0x11,
	0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x55, 0x55, 0x49,
	0x44, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74,
	0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x55, 0x55, 0x49, 0x44, 0x12, 0x44, 0x0a, 0x0d, 0x63, 0x6f,
	0x6e, 0x74, 0x61, 0x63, 0x74, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x63, 0x72, 0x6d, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x43,
	0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x48, 0x01, 0x52, 0x0d,
	0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x88, 0x01, 0x01,
	0x12, 0x26, 0x0a, 0x0e, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x55, 0x55,
	0x49, 0x44, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74,
	0x6d, 0x65, 0x6e, 0x74, 0x55, 0x55, 0x49, 0x44, 0x12, 0x3f, 0x0a, 0x0a, 0x64, 0x65, 0x70, 0x61,
	0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x63,
	0x72, 0x6d, 0x5f, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x65,
	0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x48, 0x02, 0x52, 0x0a, 0x64, 0x65, 0x70, 0x61,
	0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0d, 0x70, 0x65, 0x72,
	0x66, 0x6f, 0x72, 0x6d, 0x65, 0x72, 0x55, 0x55, 0x49, 0x44, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x70, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x65, 0x72, 0x55, 0x55, 0x49, 0x44, 0x12,
	0x3b, 0x0a, 0x09, 0x70, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x65, 0x72, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x63, 0x72, 0x6d, 0x5f, 0x70, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d,
	0x65, 0x72, 0x2e, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x65, 0x72, 0x48, 0x03, 0x52, 0x09,
	0x70, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x65, 0x72, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x0b,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x55, 0x55, 0x49, 0x44, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x55, 0x55, 0x49, 0x44, 0x12, 0x33,
	0x0a, 0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x63, 0x72, 0x6d, 0x5f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x50, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x48, 0x04, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x88, 0x01, 0x01, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x67, 0x65, 0x55, 0x55, 0x49, 0x44,
	0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x67, 0x65, 0x55, 0x55, 0x49,
	0x44, 0x12, 0x2e, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x67, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x6b, 0x61, 0x6e, 0x62, 0x61, 0x6e, 0x2e, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74,
	0x53, 0x74, 0x61, 0x67, 0x65, 0x48, 0x05, 0x52, 0x05, 0x73, 0x74, 0x61, 0x67, 0x65, 0x88, 0x01,
	0x01, 0x12, 0x2b, 0x0a, 0x04, 0x66, 0x65, 0x65, 0x64, 0x18, 0x13, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x6b, 0x61, 0x6e, 0x62, 0x61, 0x6e, 0x2e, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x46,
	0x65, 0x65, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x66, 0x65, 0x65, 0x64, 0x12, 0x33,
	0x0a, 0x08, 0x70, 0x6c, 0x61, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x6b, 0x61, 0x6e, 0x62, 0x61, 0x6e, 0x2e, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74,
	0x2e, 0x50, 0x6c, 0x61, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x6e, 0x6e,
	0x69, 0x6e, 0x67, 0x12, 0x33, 0x0a, 0x08, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x18,
	0x15, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6b, 0x61, 0x6e, 0x62, 0x61, 0x6e, 0x2e, 0x54,
	0x69, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x08,
	0x74, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x12, 0x3d, 0x0a, 0x09, 0x63, 0x6c, 0x6f, 0x73,
	0x65, 0x44, 0x61, 0x74, 0x65, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x48, 0x06, 0x52, 0x09, 0x63, 0x6c, 0x6f, 0x73, 0x65,
	0x44, 0x61, 0x74, 0x65, 0x88, 0x01, 0x01, 0x12, 0x34, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x18, 0x17, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x34, 0x0a,
	0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x18, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x19,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x1a, 0x54, 0x0a,
	0x08, 0x50, 0x6c, 0x61, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x12, 0x48, 0x0a, 0x11, 0x65, 0x78, 0x70,
	0x65, 0x63, 0x74, 0x65, 0x64, 0x53, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x11, 0x65, 0x78, 0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x53, 0x74, 0x61, 0x72, 0x74, 0x44,
	0x61, 0x74, 0x65, 0x1a, 0x80, 0x01, 0x0a, 0x08, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67,
	0x12, 0x28, 0x0a, 0x0f, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x50,
	0x6c, 0x61, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x73, 0x74, 0x6f, 0x72, 0x79,
	0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x50, 0x6c, 0x61, 0x6e, 0x12, 0x28, 0x0a, 0x0f, 0x73, 0x74,
	0x6f, 0x72, 0x79, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x46, 0x61, 0x63, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0f, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73,
	0x46, 0x61, 0x63, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x64, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x74, 0x72, 0x61, 0x63, 0x6b,
	0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x50, 0x65, 0x72,
	0x73, 0x6f, 0x6e, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65,
	0x6e, 0x74, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x70, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x65, 0x72,
	0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x42, 0x08, 0x0a, 0x06,
	0x5f, 0x73, 0x74, 0x61, 0x67, 0x65, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x63, 0x6c, 0x6f, 0x73, 0x65,
	0x44, 0x61, 0x74, 0x65, 0x22, 0x9a, 0x01, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53,
	0x74, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6e,
	0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a,
	0x0e, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x55, 0x55, 0x49, 0x44, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e,
	0x74, 0x55, 0x55, 0x49, 0x44, 0x12, 0x2a, 0x0a, 0x10, 0x61, 0x72, 0x72, 0x61, 0x6e, 0x67, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x10, 0x61, 0x72, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x22, 0x40, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x67, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x67,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6b, 0x61, 0x6e, 0x62, 0x61, 0x6e,
	0x2e, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x53, 0x74, 0x61, 0x67, 0x65, 0x52, 0x05, 0x73, 0x74,
	0x61, 0x67, 0x65, 0x22, 0x5f, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x67, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x55, 0x55, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x55, 0x55, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x43,
	0x61, 0x63, 0x68, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x75, 0x73, 0x65, 0x43,
	0x61, 0x63, 0x68, 0x65, 0x22, 0x3d, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x67, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x67,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6b, 0x61, 0x6e, 0x62, 0x61, 0x6e,
	0x2e, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x53, 0x74, 0x61, 0x67, 0x65, 0x52, 0x05, 0x73, 0x74,
	0x61, 0x67, 0x65, 0x22, 0x74, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x67, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d,
	0x65, 0x6e, 0x74, 0x55, 0x55, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x64,
	0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x55, 0x55, 0x49, 0x44, 0x12, 0x1a, 0x0a,
	0x08, 0x75, 0x73, 0x65, 0x43, 0x61, 0x63, 0x68, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x08, 0x75, 0x73, 0x65, 0x43, 0x61, 0x63, 0x68, 0x65, 0x22, 0x40, 0x0a, 0x11, 0x47, 0x65, 0x74,
	0x53, 0x74, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x67, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x6b, 0x61, 0x6e, 0x62, 0x61, 0x6e, 0x2e, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x53, 0x74,
	0x61, 0x67, 0x65, 0x52, 0x06, 0x73, 0x74, 0x61, 0x67, 0x65, 0x73, 0x22, 0x5a, 0x0a, 0x12, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x55, 0x55, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x55,
	0x55, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x40, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x53, 0x74, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29,
	0x0a, 0x05, 0x73, 0x74, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x6b, 0x61, 0x6e, 0x62, 0x61, 0x6e, 0x2e, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x53, 0x74, 0x61,
	0x67, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x67, 0x65, 0x22, 0x46, 0x0a, 0x12, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x53, 0x74, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x55, 0x55, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x55, 0x55, 0x49,
	0x44, 0x22, 0x15, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x74, 0x61, 0x67, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x76, 0x0a, 0x16, 0x53, 0x77, 0x61, 0x70,
	0x53, 0x74, 0x61, 0x67, 0x65, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x67, 0x65, 0x55, 0x55, 0x49, 0x44, 0x31, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x67, 0x65, 0x55, 0x55, 0x49, 0x44, 0x31,
	0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x67, 0x65, 0x55, 0x55, 0x49, 0x44, 0x32, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x67, 0x65, 0x55, 0x55, 0x49, 0x44, 0x32,
	0x22, 0x19, 0x0a, 0x17, 0x53, 0x77, 0x61, 0x70, 0x53, 0x74, 0x61, 0x67, 0x65, 0x73, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x93, 0x03, 0x0a, 0x13,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x69, 0x6c, 0x65, 0x73,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x12, 0x1a, 0x0a,
	0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x55, 0x55, 0x49, 0x44, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x55, 0x55, 0x49, 0x44, 0x12, 0x2c, 0x0a, 0x11, 0x63, 0x6f, 0x6e,
	0x74, 0x61, 0x63, 0x74, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x55, 0x55, 0x49, 0x44, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x50, 0x65, 0x72,
	0x73, 0x6f, 0x6e, 0x55, 0x55, 0x49, 0x44, 0x12, 0x26, 0x0a, 0x0e, 0x64, 0x65, 0x70, 0x61, 0x72,
	0x74, 0x6d, 0x65, 0x6e, 0x74, 0x55, 0x55, 0x49, 0x44, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x55, 0x55, 0x49, 0x44, 0x12,
	0x24, 0x0a, 0x0d, 0x70, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x65, 0x72, 0x55, 0x55, 0x49, 0x44,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x65,
	0x72, 0x55, 0x55, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x55, 0x55, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x55, 0x55, 0x49, 0x44, 0x12, 0x38, 0x0a, 0x17, 0x74, 0x72, 0x61, 0x63, 0x6b,
	0x69, 0x6e, 0x67, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x50, 0x6c,
	0x61, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x17, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x69,
	0x6e, 0x67, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x50, 0x6c, 0x61,
	0x6e, 0x22, 0x3e, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x63, 0x6b, 0x65,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x06, 0x74, 0x69, 0x63,
	0x6b, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6b, 0x61, 0x6e, 0x62,
	0x61, 0x6e, 0x2e, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x06, 0x74, 0x69, 0x63, 0x6b, 0x65,
	0x74, 0x22, 0x60, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x55, 0x55, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x55, 0x55, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x43, 0x61,
	0x63, 0x68, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x75, 0x73, 0x65, 0x43, 0x61,
	0x63, 0x68, 0x65, 0x22, 0x3b, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x06, 0x74, 0x69, 0x63, 0x6b,
	0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6b, 0x61, 0x6e, 0x62, 0x61,
	0x6e, 0x2e, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x06, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74,
	0x22, 0xca, 0x01, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x12, 0x2b, 0x0a, 0x0e, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65,
	0x6e, 0x74, 0x55, 0x55, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0e,
	0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x55, 0x55, 0x49, 0x44, 0x88, 0x01,
	0x01, 0x12, 0x29, 0x0a, 0x0d, 0x70, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x65, 0x72, 0x55, 0x55,
	0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x0d, 0x70, 0x65, 0x72, 0x66,
	0x6f, 0x72, 0x6d, 0x65, 0x72, 0x55, 0x55, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x1a, 0x0a, 0x08,
	0x75, 0x73, 0x65, 0x43, 0x61, 0x63, 0x68, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08,
	0x75, 0x73, 0x65, 0x43, 0x61, 0x63, 0x68, 0x65, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x64, 0x65, 0x70,
	0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x55, 0x55, 0x49, 0x44, 0x42, 0x10, 0x0a, 0x0e, 0x5f,
	0x70, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x65, 0x72, 0x55, 0x55, 0x49, 0x44, 0x22, 0x3e, 0x0a,
	0x12, 0x47, 0x65, 0x74, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x07, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6b, 0x61, 0x6e, 0x62, 0x61, 0x6e, 0x2e, 0x54, 0x69,
	0x63, 0x6b, 0x65, 0x74, 0x52, 0x07, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x22, 0x9c, 0x01,
	0x0a, 0x1c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x42, 0x61,
	0x73, 0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c,
	0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x55, 0x55, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x55, 0x55, 0x49, 0x44,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x18,
	0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x22, 0x47, 0x0a, 0x1d,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x42, 0x61, 0x73, 0x69,
	0x63, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a,
	0x06, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e,
	0x6b, 0x61, 0x6e, 0x62, 0x61, 0x6e, 0x2e, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x06, 0x74,
	0x69, 0x63, 0x6b, 0x65, 0x74, 0x22, 0x47, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54,
	0x69, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09,
	0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x55, 0x55,
	0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x55, 0x55, 0x49, 0x44, 0x22, 0x16,
	0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x76, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x53, 0x74, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x55, 0x55, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x55, 0x55, 0x49, 0x44, 0x12, 0x28, 0x0a, 0x0f, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x53, 0x74,
	0x61, 0x67, 0x65, 0x55, 0x55, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x74,
	0x69, 0x63, 0x6b, 0x65, 0x74, 0x53, 0x74, 0x61, 0x67, 0x65, 0x55, 0x55, 0x49, 0x44, 0x22, 0x43,
	0x0a, 0x19, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x53, 0x74,
	0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x06, 0x74,
	0x69, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6b, 0x61,
	0x6e, 0x62, 0x61, 0x6e, 0x2e, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x06, 0x74, 0x69, 0x63,
	0x6b, 0x65, 0x74, 0x22, 0x6b, 0x0a, 0x1b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x63,
	0x6b, 0x65, 0x74, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x55, 0x55, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x55, 0x55, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79,
	0x22, 0x46, 0x0a, 0x1c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74,
	0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x26, 0x0a, 0x06, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0e, 0x2e, 0x6b, 0x61, 0x6e, 0x62, 0x61, 0x6e, 0x2e, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74,
	0x52, 0x06, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x22, 0x46, 0x0a, 0x12, 0x43, 0x6c, 0x6f, 0x73,
	0x65, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c,
	0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x55, 0x55, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x55, 0x55, 0x49, 0x44,
	0x22, 0x3d, 0x0a, 0x13, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x06, 0x74, 0x69, 0x63, 0x6b, 0x65,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6b, 0x61, 0x6e, 0x62, 0x61, 0x6e,
	0x2e, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x06, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x2a,
	0x57, 0x0a, 0x13, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x46, 0x65, 0x65, 0x64, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x10, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x65, 0x72, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d,
	0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x10, 0x01, 0x12,
	0x0a, 0x0a, 0x06, 0x63, 0x61, 0x6c, 0x6c, 0x49, 0x6e, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x63,
	0x61, 0x6c, 0x6c, 0x4f, 0x75, 0x74, 0x10, 0x03, 0x32, 0xe0, 0x08, 0x0a, 0x0d, 0x4b, 0x61, 0x6e,
	0x62, 0x61, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x48, 0x0a, 0x0b, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x2e, 0x6b, 0x61, 0x6e, 0x62,
	0x61, 0x6e, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x67, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x6b, 0x61, 0x6e, 0x62, 0x61, 0x6e, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x3f, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x67, 0x65,
	0x12, 0x17, 0x2e, 0x6b, 0x61, 0x6e, 0x62, 0x61, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61,
	0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x6b, 0x61, 0x6e, 0x62,
	0x61, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x42, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x67,
	0x65, 0x73, 0x12, 0x18, 0x2e, 0x6b, 0x61, 0x6e, 0x62, 0x61, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x53,
	0x74, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x6b,
	0x61, 0x6e, 0x62, 0x61, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x67, 0x65, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x48, 0x0a, 0x0b, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x2e, 0x6b, 0x61, 0x6e, 0x62, 0x61,
	0x6e, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x6b, 0x61, 0x6e, 0x62, 0x61, 0x6e, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x48, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x74, 0x61,
	0x67, 0x65, 0x12, 0x1a, 0x2e, 0x6b, 0x61, 0x6e, 0x62, 0x61, 0x6e, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x53, 0x74, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b,
	0x2e, 0x6b, 0x61, 0x6e, 0x62, 0x61, 0x6e, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x74,
	0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x54, 0x0a,
	0x0f, 0x53, 0x77, 0x61, 0x70, 0x53, 0x74, 0x61, 0x67, 0x65, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x12, 0x1e, 0x2e, 0x6b, 0x61, 0x6e, 0x62, 0x61, 0x6e, 0x2e, 0x53, 0x77, 0x61, 0x70, 0x53, 0x74,
	0x61, 0x67, 0x65, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1f, 0x2e, 0x6b, 0x61, 0x6e, 0x62, 0x61, 0x6e, 0x2e, 0x53, 0x77, 0x61, 0x70, 0x53, 0x74,
	0x61, 0x67, 0x65, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x4b, 0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x63,
	0x6b, 0x65, 0x74, 0x12, 0x1b, 0x2e, 0x6b, 0x61, 0x6e, 0x62, 0x61, 0x6e, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1c, 0x2e, 0x6b, 0x61, 0x6e, 0x62, 0x61, 0x6e, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x42, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x18, 0x2e,
	0x6b, 0x61, 0x6e, 0x62, 0x61, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x6b, 0x61, 0x6e, 0x62, 0x61, 0x6e,
	0x2e, 0x47, 0x65, 0x74, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x45, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x54, 0x69, 0x63, 0x6b, 0x65,
	0x74, 0x73, 0x12, 0x19, 0x2e, 0x6b, 0x61, 0x6e, 0x62, 0x61, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x54,
	0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e,
	0x6b, 0x61, 0x6e, 0x62, 0x61, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x66, 0x0a, 0x15, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x42, 0x61, 0x73, 0x69, 0x63,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x24, 0x2e, 0x6b, 0x61, 0x6e, 0x62, 0x61, 0x6e, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x42, 0x61, 0x73, 0x69, 0x63, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x6b, 0x61, 0x6e,
	0x62, 0x61, 0x6e, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74,
	0x42, 0x61, 0x73, 0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x4b, 0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x69, 0x63,
	0x6b, 0x65, 0x74, 0x12, 0x1b, 0x2e, 0x6b, 0x61, 0x6e, 0x62, 0x61, 0x6e, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1c, 0x2e, 0x6b, 0x61, 0x6e, 0x62, 0x61, 0x6e, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x5a, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74,
	0x53, 0x74, 0x61, 0x67, 0x65, 0x12, 0x20, 0x2e, 0x6b, 0x61, 0x6e, 0x62, 0x61, 0x6e, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x53, 0x74, 0x61, 0x67, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x6b, 0x61, 0x6e, 0x62, 0x61, 0x6e,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x53, 0x74, 0x61,
	0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x63, 0x0a, 0x14,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x50, 0x72, 0x69, 0x6f,
	0x72, 0x69, 0x74, 0x79, 0x12, 0x23, 0x2e, 0x6b, 0x61, 0x6e, 0x62, 0x61, 0x6e, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69,
	0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x6b, 0x61, 0x6e, 0x62,
	0x61, 0x6e, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x50,
	0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x48, 0x0a, 0x0b, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74,
	0x12, 0x1a, 0x2e, 0x6b, 0x61, 0x6e, 0x62, 0x61, 0x6e, 0x2e, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x54,
	0x69, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x6b,
	0x61, 0x6e, 0x62, 0x61, 0x6e, 0x2e, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x54, 0x69, 0x63, 0x6b, 0x65,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x4e, 0x5a, 0x4c, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x6c, 0x61, 0x6d, 0x79, 0x2d,
	0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x6f, 0x70, 0x65, 0x6e, 0x62, 0x70,
	0x2f, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x2f, 0x63, 0x72, 0x6d, 0x2f, 0x6c, 0x69, 0x62,
	0x73, 0x2f, 0x67, 0x6f, 0x6c, 0x61, 0x6e, 0x67, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x6b, 0x61,
	0x6e, 0x62, 0x61, 0x6e, 0x3b, 0x6b, 0x61, 0x6e, 0x62, 0x61, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_kanban_proto_rawDescOnce sync.Once
	file_kanban_proto_rawDescData = file_kanban_proto_rawDesc
)

func file_kanban_proto_rawDescGZIP() []byte {
	file_kanban_proto_rawDescOnce.Do(func() {
		file_kanban_proto_rawDescData = protoimpl.X.CompressGZIP(file_kanban_proto_rawDescData)
	})
	return file_kanban_proto_rawDescData
}

var file_kanban_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_kanban_proto_msgTypes = make([]protoimpl.MessageInfo, 33)
var file_kanban_proto_goTypes = []interface{}{
	(TicketFeedEntryType)(0),              // 0: kanban.TicketFeedEntryType
	(*TicketStage)(nil),                   // 1: kanban.TicketStage
	(*TicketFeedEntry)(nil),               // 2: kanban.TicketFeedEntry
	(*Ticket)(nil),                        // 3: kanban.Ticket
	(*CreateStageRequest)(nil),            // 4: kanban.CreateStageRequest
	(*CreateStageResponse)(nil),           // 5: kanban.CreateStageResponse
	(*GetStageRequest)(nil),               // 6: kanban.GetStageRequest
	(*GetStageResponse)(nil),              // 7: kanban.GetStageResponse
	(*GetStagesRequest)(nil),              // 8: kanban.GetStagesRequest
	(*GetStagesResponse)(nil),             // 9: kanban.GetStagesResponse
	(*UpdateStageRequest)(nil),            // 10: kanban.UpdateStageRequest
	(*UpdateStageResponse)(nil),           // 11: kanban.UpdateStageResponse
	(*DeleteStageRequest)(nil),            // 12: kanban.DeleteStageRequest
	(*DeleteStageResponse)(nil),           // 13: kanban.DeleteStageResponse
	(*SwapStagesOrderRequest)(nil),        // 14: kanban.SwapStagesOrderRequest
	(*SwapStagesOrderResponse)(nil),       // 15: kanban.SwapStagesOrderResponse
	(*CreateTicketRequest)(nil),           // 16: kanban.CreateTicketRequest
	(*CreateTicketResponse)(nil),          // 17: kanban.CreateTicketResponse
	(*GetTicketRequest)(nil),              // 18: kanban.GetTicketRequest
	(*GetTicketResponse)(nil),             // 19: kanban.GetTicketResponse
	(*GetTicketsRequest)(nil),             // 20: kanban.GetTicketsRequest
	(*GetTicketsResponse)(nil),            // 21: kanban.GetTicketsResponse
	(*UpdateTicketBasicInfoRequest)(nil),  // 22: kanban.UpdateTicketBasicInfoRequest
	(*UpdateTicketBasicInfoResponse)(nil), // 23: kanban.UpdateTicketBasicInfoResponse
	(*DeleteTicketRequest)(nil),           // 24: kanban.DeleteTicketRequest
	(*DeleteTicketResponse)(nil),          // 25: kanban.DeleteTicketResponse
	(*UpdateTicketStageRequest)(nil),      // 26: kanban.UpdateTicketStageRequest
	(*UpdateTicketStageResponse)(nil),     // 27: kanban.UpdateTicketStageResponse
	(*UpdateTicketPriorityRequest)(nil),   // 28: kanban.UpdateTicketPriorityRequest
	(*UpdateTicketPriorityResponse)(nil),  // 29: kanban.UpdateTicketPriorityResponse
	(*CloseTicketRequest)(nil),            // 30: kanban.CloseTicketRequest
	(*CloseTicketResponse)(nil),           // 31: kanban.CloseTicketResponse
	(*Ticket_Planning)(nil),               // 32: kanban.Ticket.Planning
	(*Ticket_Tracking)(nil),               // 33: kanban.Ticket.Tracking
	(*timestamp.Timestamp)(nil),           // 34: google.protobuf.Timestamp
	(*client.Client)(nil),                 // 35: crm_client.Client
	(*client.ContactPerson)(nil),          // 36: crm_client.ContactPerson
	(*department.Department)(nil),         // 37: crm_department.Department
	(*performer.Performer)(nil),           // 38: crm_performer.Performer
	(*project.Project)(nil),               // 39: crm_project.Project
}
var file_kanban_proto_depIdxs = []int32{
	0,  // 0: kanban.TicketFeedEntry.type:type_name -> kanban.TicketFeedEntryType
	34, // 1: kanban.TicketFeedEntry.timestamp:type_name -> google.protobuf.Timestamp
	35, // 2: kanban.Ticket.client:type_name -> crm_client.Client
	36, // 3: kanban.Ticket.contactPerson:type_name -> crm_client.ContactPerson
	37, // 4: kanban.Ticket.department:type_name -> crm_department.Department
	38, // 5: kanban.Ticket.performer:type_name -> crm_performer.Performer
	39, // 6: kanban.Ticket.project:type_name -> crm_project.Project
	1,  // 7: kanban.Ticket.stage:type_name -> kanban.TicketStage
	2,  // 8: kanban.Ticket.feed:type_name -> kanban.TicketFeedEntry
	32, // 9: kanban.Ticket.planning:type_name -> kanban.Ticket.Planning
	33, // 10: kanban.Ticket.tracking:type_name -> kanban.Ticket.Tracking
	34, // 11: kanban.Ticket.closeDate:type_name -> google.protobuf.Timestamp
	34, // 12: kanban.Ticket.created:type_name -> google.protobuf.Timestamp
	34, // 13: kanban.Ticket.updated:type_name -> google.protobuf.Timestamp
	1,  // 14: kanban.CreateStageResponse.stage:type_name -> kanban.TicketStage
	1,  // 15: kanban.GetStageResponse.stage:type_name -> kanban.TicketStage
	1,  // 16: kanban.GetStagesResponse.stages:type_name -> kanban.TicketStage
	1,  // 17: kanban.UpdateStageResponse.stage:type_name -> kanban.TicketStage
	3,  // 18: kanban.CreateTicketResponse.ticket:type_name -> kanban.Ticket
	3,  // 19: kanban.GetTicketResponse.ticket:type_name -> kanban.Ticket
	3,  // 20: kanban.GetTicketsResponse.tickets:type_name -> kanban.Ticket
	3,  // 21: kanban.UpdateTicketBasicInfoResponse.ticket:type_name -> kanban.Ticket
	3,  // 22: kanban.UpdateTicketStageResponse.ticket:type_name -> kanban.Ticket
	3,  // 23: kanban.UpdateTicketPriorityResponse.ticket:type_name -> kanban.Ticket
	3,  // 24: kanban.CloseTicketResponse.ticket:type_name -> kanban.Ticket
	34, // 25: kanban.Ticket.Planning.expectedStartDate:type_name -> google.protobuf.Timestamp
	4,  // 26: kanban.KanbanService.CreateStage:input_type -> kanban.CreateStageRequest
	6,  // 27: kanban.KanbanService.GetStage:input_type -> kanban.GetStageRequest
	8,  // 28: kanban.KanbanService.GetStages:input_type -> kanban.GetStagesRequest
	10, // 29: kanban.KanbanService.UpdateStage:input_type -> kanban.UpdateStageRequest
	12, // 30: kanban.KanbanService.DeleteStage:input_type -> kanban.DeleteStageRequest
	14, // 31: kanban.KanbanService.SwapStagesOrder:input_type -> kanban.SwapStagesOrderRequest
	16, // 32: kanban.KanbanService.CreateTicket:input_type -> kanban.CreateTicketRequest
	18, // 33: kanban.KanbanService.GetTicket:input_type -> kanban.GetTicketRequest
	20, // 34: kanban.KanbanService.GetTickets:input_type -> kanban.GetTicketsRequest
	22, // 35: kanban.KanbanService.UpdateTicketBasicInfo:input_type -> kanban.UpdateTicketBasicInfoRequest
	24, // 36: kanban.KanbanService.DeleteTicket:input_type -> kanban.DeleteTicketRequest
	26, // 37: kanban.KanbanService.UpdateTicketStage:input_type -> kanban.UpdateTicketStageRequest
	28, // 38: kanban.KanbanService.UpdateTicketPriority:input_type -> kanban.UpdateTicketPriorityRequest
	30, // 39: kanban.KanbanService.CloseTicket:input_type -> kanban.CloseTicketRequest
	5,  // 40: kanban.KanbanService.CreateStage:output_type -> kanban.CreateStageResponse
	7,  // 41: kanban.KanbanService.GetStage:output_type -> kanban.GetStageResponse
	9,  // 42: kanban.KanbanService.GetStages:output_type -> kanban.GetStagesResponse
	11, // 43: kanban.KanbanService.UpdateStage:output_type -> kanban.UpdateStageResponse
	13, // 44: kanban.KanbanService.DeleteStage:output_type -> kanban.DeleteStageResponse
	15, // 45: kanban.KanbanService.SwapStagesOrder:output_type -> kanban.SwapStagesOrderResponse
	17, // 46: kanban.KanbanService.CreateTicket:output_type -> kanban.CreateTicketResponse
	19, // 47: kanban.KanbanService.GetTicket:output_type -> kanban.GetTicketResponse
	21, // 48: kanban.KanbanService.GetTickets:output_type -> kanban.GetTicketsResponse
	23, // 49: kanban.KanbanService.UpdateTicketBasicInfo:output_type -> kanban.UpdateTicketBasicInfoResponse
	25, // 50: kanban.KanbanService.DeleteTicket:output_type -> kanban.DeleteTicketResponse
	27, // 51: kanban.KanbanService.UpdateTicketStage:output_type -> kanban.UpdateTicketStageResponse
	29, // 52: kanban.KanbanService.UpdateTicketPriority:output_type -> kanban.UpdateTicketPriorityResponse
	31, // 53: kanban.KanbanService.CloseTicket:output_type -> kanban.CloseTicketResponse
	40, // [40:54] is the sub-list for method output_type
	26, // [26:40] is the sub-list for method input_type
	26, // [26:26] is the sub-list for extension type_name
	26, // [26:26] is the sub-list for extension extendee
	0,  // [0:26] is the sub-list for field type_name
}

func init() { file_kanban_proto_init() }
func file_kanban_proto_init() {
	if File_kanban_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_kanban_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TicketStage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kanban_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TicketFeedEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kanban_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ticket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kanban_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateStageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kanban_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateStageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kanban_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kanban_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kanban_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStagesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kanban_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStagesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kanban_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateStageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kanban_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateStageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kanban_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteStageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kanban_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteStageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kanban_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SwapStagesOrderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kanban_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SwapStagesOrderResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kanban_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTicketRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kanban_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTicketResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kanban_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTicketRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kanban_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTicketResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kanban_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTicketsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kanban_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTicketsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kanban_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTicketBasicInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kanban_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTicketBasicInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kanban_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteTicketRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kanban_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteTicketResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kanban_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTicketStageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kanban_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTicketStageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kanban_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTicketPriorityRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kanban_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTicketPriorityResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kanban_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CloseTicketRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kanban_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CloseTicketResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kanban_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ticket_Planning); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kanban_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ticket_Tracking); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_kanban_proto_msgTypes[2].OneofWrappers = []interface{}{}
	file_kanban_proto_msgTypes[19].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_kanban_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   33,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_kanban_proto_goTypes,
		DependencyIndexes: file_kanban_proto_depIdxs,
		EnumInfos:         file_kanban_proto_enumTypes,
		MessageInfos:      file_kanban_proto_msgTypes,
	}.Build()
	File_kanban_proto = out.File
	file_kanban_proto_rawDesc = nil
	file_kanban_proto_goTypes = nil
	file_kanban_proto_depIdxs = nil
}
