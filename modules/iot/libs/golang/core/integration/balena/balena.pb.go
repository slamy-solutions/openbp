// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.12.4
// source: balena.proto

package balena

import (
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SyncLogEntry_Status int32

const (
	// Everything is ok
	SyncLogEntry_OK SyncLogEntry_Status = 0
	// Error occured. Error is related to the user input or malfuncition of the balena server
	SyncLogEntry_ERROR SyncLogEntry_Status = 1
	// Internal OpenBP error occured during the synchronization
	SyncLogEntry_INTERNAL_ERROR SyncLogEntry_Status = 2
)

// Enum value maps for SyncLogEntry_Status.
var (
	SyncLogEntry_Status_name = map[int32]string{
		0: "OK",
		1: "ERROR",
		2: "INTERNAL_ERROR",
	}
	SyncLogEntry_Status_value = map[string]int32{
		"OK":             0,
		"ERROR":          1,
		"INTERNAL_ERROR": 2,
	}
)

func (x SyncLogEntry_Status) Enum() *SyncLogEntry_Status {
	p := new(SyncLogEntry_Status)
	*p = x
	return p
}

func (x SyncLogEntry_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SyncLogEntry_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_balena_proto_enumTypes[0].Descriptor()
}

func (SyncLogEntry_Status) Type() protoreflect.EnumType {
	return &file_balena_proto_enumTypes[0]
}

func (x SyncLogEntry_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SyncLogEntry_Status.Descriptor instead.
func (SyncLogEntry_Status) EnumDescriptor() ([]byte, []int) {
	return file_balena_proto_rawDescGZIP(), []int{3, 0}
}

type VerifyConnectionDataResponse_Status int32

const (
	// Everything is ok
	VerifyConnectionDataResponse_OK VerifyConnectionDataResponse_Status = 0
	// Server URL has bad format
	VerifyConnectionDataResponse_BAD_URL VerifyConnectionDataResponse_Status = 1
	// Cant open connection to the server
	VerifyConnectionDataResponse_SERVER_UNAVAILABLE VerifyConnectionDataResponse_Status = 2
	// Connection with server established, but it returns bad status code
	VerifyConnectionDataResponse_SERVER_BAD_RESPONSE VerifyConnectionDataResponse_Status = 3
)

// Enum value maps for VerifyConnectionDataResponse_Status.
var (
	VerifyConnectionDataResponse_Status_name = map[int32]string{
		0: "OK",
		1: "BAD_URL",
		2: "SERVER_UNAVAILABLE",
		3: "SERVER_BAD_RESPONSE",
	}
	VerifyConnectionDataResponse_Status_value = map[string]int32{
		"OK":                  0,
		"BAD_URL":             1,
		"SERVER_UNAVAILABLE":  2,
		"SERVER_BAD_RESPONSE": 3,
	}
)

func (x VerifyConnectionDataResponse_Status) Enum() *VerifyConnectionDataResponse_Status {
	p := new(VerifyConnectionDataResponse_Status)
	*p = x
	return p
}

func (x VerifyConnectionDataResponse_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (VerifyConnectionDataResponse_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_balena_proto_enumTypes[1].Descriptor()
}

func (VerifyConnectionDataResponse_Status) Type() protoreflect.EnumType {
	return &file_balena_proto_enumTypes[1]
}

func (x VerifyConnectionDataResponse_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use VerifyConnectionDataResponse_Status.Descriptor instead.
func (VerifyConnectionDataResponse_Status) EnumDescriptor() ([]byte, []int) {
	return file_balena_proto_rawDescGZIP(), []int{23, 0}
}

type ListDevicesInNamespaceRequest_BindingFilter int32

const (
	// Return all
	ListDevicesInNamespaceRequest_ALL ListDevicesInNamespaceRequest_BindingFilter = 0
	// Return only binded
	ListDevicesInNamespaceRequest_ONLY_BINDED ListDevicesInNamespaceRequest_BindingFilter = 1
	// Return only not binded
	ListDevicesInNamespaceRequest_ONLY_UNBINDED ListDevicesInNamespaceRequest_BindingFilter = 2
)

// Enum value maps for ListDevicesInNamespaceRequest_BindingFilter.
var (
	ListDevicesInNamespaceRequest_BindingFilter_name = map[int32]string{
		0: "ALL",
		1: "ONLY_BINDED",
		2: "ONLY_UNBINDED",
	}
	ListDevicesInNamespaceRequest_BindingFilter_value = map[string]int32{
		"ALL":           0,
		"ONLY_BINDED":   1,
		"ONLY_UNBINDED": 2,
	}
)

func (x ListDevicesInNamespaceRequest_BindingFilter) Enum() *ListDevicesInNamespaceRequest_BindingFilter {
	p := new(ListDevicesInNamespaceRequest_BindingFilter)
	*p = x
	return p
}

func (x ListDevicesInNamespaceRequest_BindingFilter) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ListDevicesInNamespaceRequest_BindingFilter) Descriptor() protoreflect.EnumDescriptor {
	return file_balena_proto_enumTypes[2].Descriptor()
}

func (ListDevicesInNamespaceRequest_BindingFilter) Type() protoreflect.EnumType {
	return &file_balena_proto_enumTypes[2]
}

func (x ListDevicesInNamespaceRequest_BindingFilter) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ListDevicesInNamespaceRequest_BindingFilter.Descriptor instead.
func (ListDevicesInNamespaceRequest_BindingFilter) EnumDescriptor() ([]byte, []int) {
	return file_balena_proto_rawDescGZIP(), []int{30, 0}
}

type CountDevicesInNamespaceRequest_BindingFilter int32

const (
	// Return all
	CountDevicesInNamespaceRequest_ALL CountDevicesInNamespaceRequest_BindingFilter = 0
	// Return only binded
	CountDevicesInNamespaceRequest_ONLY_BINDED CountDevicesInNamespaceRequest_BindingFilter = 1
	// Return only not binded
	CountDevicesInNamespaceRequest_ONLY_UNBINDED CountDevicesInNamespaceRequest_BindingFilter = 2
)

// Enum value maps for CountDevicesInNamespaceRequest_BindingFilter.
var (
	CountDevicesInNamespaceRequest_BindingFilter_name = map[int32]string{
		0: "ALL",
		1: "ONLY_BINDED",
		2: "ONLY_UNBINDED",
	}
	CountDevicesInNamespaceRequest_BindingFilter_value = map[string]int32{
		"ALL":           0,
		"ONLY_BINDED":   1,
		"ONLY_UNBINDED": 2,
	}
)

func (x CountDevicesInNamespaceRequest_BindingFilter) Enum() *CountDevicesInNamespaceRequest_BindingFilter {
	p := new(CountDevicesInNamespaceRequest_BindingFilter)
	*p = x
	return p
}

func (x CountDevicesInNamespaceRequest_BindingFilter) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CountDevicesInNamespaceRequest_BindingFilter) Descriptor() protoreflect.EnumDescriptor {
	return file_balena_proto_enumTypes[3].Descriptor()
}

func (CountDevicesInNamespaceRequest_BindingFilter) Type() protoreflect.EnumType {
	return &file_balena_proto_enumTypes[3]
}

func (x CountDevicesInNamespaceRequest_BindingFilter) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CountDevicesInNamespaceRequest_BindingFilter.Descriptor instead.
func (CountDevicesInNamespaceRequest_BindingFilter) EnumDescriptor() ([]byte, []int) {
	return file_balena_proto_rawDescGZIP(), []int{32, 0}
}

type BalenaServer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Namespace where the server is located
	Namespace string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	// Unique identifier of the server
	Uuid string `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
	// Unique name of the server
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	// Arbitrary description
	Description string `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	// Base URL where to the server api. (for example 'https://api.balena.com')
	BaseURL string `protobuf:"bytes,5,opt,name=baseURL,proto3" json:"baseURL,omitempty"`
	// Indicates if synchronization is enabled
	Enabled bool `protobuf:"varint,6,opt,name=enabled,proto3" json:"enabled,omitempty"`
	// Time when the information about this balena server was added to the system
	Created *timestamp.Timestamp `protobuf:"bytes,50,opt,name=created,proto3" json:"created,omitempty"`
	// Last time when the information was updated.
	Updated *timestamp.Timestamp `protobuf:"bytes,51,opt,name=updated,proto3" json:"updated,omitempty"`
	// Counter that increases after every update of the information
	Version uint64 `protobuf:"varint,52,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *BalenaServer) Reset() {
	*x = BalenaServer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_balena_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BalenaServer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BalenaServer) ProtoMessage() {}

func (x *BalenaServer) ProtoReflect() protoreflect.Message {
	mi := &file_balena_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BalenaServer.ProtoReflect.Descriptor instead.
func (*BalenaServer) Descriptor() ([]byte, []int) {
	return file_balena_proto_rawDescGZIP(), []int{0}
}

func (x *BalenaServer) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *BalenaServer) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *BalenaServer) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *BalenaServer) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *BalenaServer) GetBaseURL() string {
	if x != nil {
		return x.BaseURL
	}
	return ""
}

func (x *BalenaServer) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *BalenaServer) GetCreated() *timestamp.Timestamp {
	if x != nil {
		return x.Created
	}
	return nil
}

func (x *BalenaServer) GetUpdated() *timestamp.Timestamp {
	if x != nil {
		return x.Updated
	}
	return nil
}

func (x *BalenaServer) GetVersion() uint64 {
	if x != nil {
		return x.Version
	}
	return 0
}

type BalenaData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid                  string               `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Id                    int32                `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	IsOnline              bool                 `protobuf:"varint,3,opt,name=isOnline,proto3" json:"isOnline,omitempty"`
	Status                string               `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`
	DeviceName            string               `protobuf:"bytes,5,opt,name=deviceName,proto3" json:"deviceName,omitempty"`
	Longitude             string               `protobuf:"bytes,6,opt,name=longitude,proto3" json:"longitude,omitempty"`
	Latitude              string               `protobuf:"bytes,7,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Location              string               `protobuf:"bytes,8,opt,name=location,proto3" json:"location,omitempty"`
	LastConnectivityEvent *timestamp.Timestamp `protobuf:"bytes,9,opt,name=lastConnectivityEvent,proto3" json:"lastConnectivityEvent,omitempty"`
	MemoryUsage           uint32               `protobuf:"varint,10,opt,name=memoryUsage,proto3" json:"memoryUsage,omitempty"`
	MemoryTotal           uint32               `protobuf:"varint,11,opt,name=memoryTotal,proto3" json:"memoryTotal,omitempty"`
	StorageUsage          uint32               `protobuf:"varint,12,opt,name=storageUsage,proto3" json:"storageUsage,omitempty"`
	CpuUsage              uint32               `protobuf:"varint,13,opt,name=cpuUsage,proto3" json:"cpuUsage,omitempty"`
	CpuTemp               uint32               `protobuf:"varint,14,opt,name=cpuTemp,proto3" json:"cpuTemp,omitempty"`
	IsUndervolted         bool                 `protobuf:"varint,15,opt,name=isUndervolted,proto3" json:"isUndervolted,omitempty"`
}

func (x *BalenaData) Reset() {
	*x = BalenaData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_balena_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BalenaData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BalenaData) ProtoMessage() {}

func (x *BalenaData) ProtoReflect() protoreflect.Message {
	mi := &file_balena_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BalenaData.ProtoReflect.Descriptor instead.
func (*BalenaData) Descriptor() ([]byte, []int) {
	return file_balena_proto_rawDescGZIP(), []int{1}
}

func (x *BalenaData) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *BalenaData) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *BalenaData) GetIsOnline() bool {
	if x != nil {
		return x.IsOnline
	}
	return false
}

func (x *BalenaData) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *BalenaData) GetDeviceName() string {
	if x != nil {
		return x.DeviceName
	}
	return ""
}

func (x *BalenaData) GetLongitude() string {
	if x != nil {
		return x.Longitude
	}
	return ""
}

func (x *BalenaData) GetLatitude() string {
	if x != nil {
		return x.Latitude
	}
	return ""
}

func (x *BalenaData) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *BalenaData) GetLastConnectivityEvent() *timestamp.Timestamp {
	if x != nil {
		return x.LastConnectivityEvent
	}
	return nil
}

func (x *BalenaData) GetMemoryUsage() uint32 {
	if x != nil {
		return x.MemoryUsage
	}
	return 0
}

func (x *BalenaData) GetMemoryTotal() uint32 {
	if x != nil {
		return x.MemoryTotal
	}
	return 0
}

func (x *BalenaData) GetStorageUsage() uint32 {
	if x != nil {
		return x.StorageUsage
	}
	return 0
}

func (x *BalenaData) GetCpuUsage() uint32 {
	if x != nil {
		return x.CpuUsage
	}
	return 0
}

func (x *BalenaData) GetCpuTemp() uint32 {
	if x != nil {
		return x.CpuTemp
	}
	return 0
}

func (x *BalenaData) GetIsUndervolted() bool {
	if x != nil {
		return x.IsUndervolted
	}
	return false
}

type BalenaDevice struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Unique identifier of the device inside OpenBP
	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	// Namespace of the OpenBP device that is binded to this balena device
	BindedDeviceNamespace string `protobuf:"bytes,2,opt,name=bindedDeviceNamespace,proto3" json:"bindedDeviceNamespace,omitempty"`
	// Unieuqe identifier of the OpenBP device that is binded to this balena device. If its is empty, then balena device is not binded.
	BindedDeviceUUID string `protobuf:"bytes,3,opt,name=bindedDeviceUUID,proto3" json:"bindedDeviceUUID,omitempty"`
	// Namespace of balena server where this devices is located
	BalenaServerNamespace string `protobuf:"bytes,4,opt,name=balenaServerNamespace,proto3" json:"balenaServerNamespace,omitempty"`
	// Unique identifier of the balena server where the device is located
	BalenaServerUUID string `protobuf:"bytes,5,opt,name=balenaServerUUID,proto3" json:"balenaServerUUID,omitempty"`
	// Device information loaded from the balena server. Updates on synchronizations.
	BalenaData *BalenaData `protobuf:"bytes,6,opt,name=balenaData,proto3" json:"balenaData,omitempty"`
	// Time when the information about this balena device was loaded first time
	Created *timestamp.Timestamp `protobuf:"bytes,50,opt,name=created,proto3" json:"created,omitempty"`
	// Last time when the information was updated.
	Updated *timestamp.Timestamp `protobuf:"bytes,51,opt,name=updated,proto3" json:"updated,omitempty"`
	// Counter that increases after every update of the information
	Version uint64 `protobuf:"varint,52,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *BalenaDevice) Reset() {
	*x = BalenaDevice{}
	if protoimpl.UnsafeEnabled {
		mi := &file_balena_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BalenaDevice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BalenaDevice) ProtoMessage() {}

func (x *BalenaDevice) ProtoReflect() protoreflect.Message {
	mi := &file_balena_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BalenaDevice.ProtoReflect.Descriptor instead.
func (*BalenaDevice) Descriptor() ([]byte, []int) {
	return file_balena_proto_rawDescGZIP(), []int{2}
}

func (x *BalenaDevice) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *BalenaDevice) GetBindedDeviceNamespace() string {
	if x != nil {
		return x.BindedDeviceNamespace
	}
	return ""
}

func (x *BalenaDevice) GetBindedDeviceUUID() string {
	if x != nil {
		return x.BindedDeviceUUID
	}
	return ""
}

func (x *BalenaDevice) GetBalenaServerNamespace() string {
	if x != nil {
		return x.BalenaServerNamespace
	}
	return ""
}

func (x *BalenaDevice) GetBalenaServerUUID() string {
	if x != nil {
		return x.BalenaServerUUID
	}
	return ""
}

func (x *BalenaDevice) GetBalenaData() *BalenaData {
	if x != nil {
		return x.BalenaData
	}
	return nil
}

func (x *BalenaDevice) GetCreated() *timestamp.Timestamp {
	if x != nil {
		return x.Created
	}
	return nil
}

func (x *BalenaDevice) GetUpdated() *timestamp.Timestamp {
	if x != nil {
		return x.Updated
	}
	return nil
}

func (x *BalenaDevice) GetVersion() uint64 {
	if x != nil {
		return x.Version
	}
	return 0
}

type SyncLogEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Log entry unique identifier
	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	// Unique identifier of the balena server that was synchronized
	ServerUUID string `protobuf:"bytes,2,opt,name=serverUUID,proto3" json:"serverUUID,omitempty"`
	// Timestamp of the synchronization
	Timestamp *timestamp.Timestamp `protobuf:"bytes,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// Overall status
	Status SyncLogEntry_Status `protobuf:"varint,4,opt,name=status,proto3,enum=iot_core_integration_balena.SyncLogEntry_Status" json:"status,omitempty"`
	// Human-readable error explanation
	Error string `protobuf:"bytes,5,opt,name=error,proto3" json:"error,omitempty"`
	// Statistics
	Stats *SyncLogEntry_Stats `protobuf:"bytes,6,opt,name=stats,proto3" json:"stats,omitempty"`
}

func (x *SyncLogEntry) Reset() {
	*x = SyncLogEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_balena_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncLogEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncLogEntry) ProtoMessage() {}

func (x *SyncLogEntry) ProtoReflect() protoreflect.Message {
	mi := &file_balena_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncLogEntry.ProtoReflect.Descriptor instead.
func (*SyncLogEntry) Descriptor() ([]byte, []int) {
	return file_balena_proto_rawDescGZIP(), []int{3}
}

func (x *SyncLogEntry) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *SyncLogEntry) GetServerUUID() string {
	if x != nil {
		return x.ServerUUID
	}
	return ""
}

func (x *SyncLogEntry) GetTimestamp() *timestamp.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *SyncLogEntry) GetStatus() SyncLogEntry_Status {
	if x != nil {
		return x.Status
	}
	return SyncLogEntry_OK
}

func (x *SyncLogEntry) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *SyncLogEntry) GetStats() *SyncLogEntry_Stats {
	if x != nil {
		return x.Stats
	}
	return nil
}

type CreateServerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Namespace where the server will be located
	Namespace string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	// Unique name of the server
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Arbitrary description
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	// Base URL for API (for example 'https://api.balena.com')
	BaseURL string `protobuf:"bytes,4,opt,name=baseURL,proto3" json:"baseURL,omitempty"`
	// Auth token
	AuthToken string `protobuf:"bytes,5,opt,name=authToken,proto3" json:"authToken,omitempty"`
}

func (x *CreateServerRequest) Reset() {
	*x = CreateServerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_balena_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateServerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateServerRequest) ProtoMessage() {}

func (x *CreateServerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_balena_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateServerRequest.ProtoReflect.Descriptor instead.
func (*CreateServerRequest) Descriptor() ([]byte, []int) {
	return file_balena_proto_rawDescGZIP(), []int{4}
}

func (x *CreateServerRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *CreateServerRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateServerRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateServerRequest) GetBaseURL() string {
	if x != nil {
		return x.BaseURL
	}
	return ""
}

func (x *CreateServerRequest) GetAuthToken() string {
	if x != nil {
		return x.AuthToken
	}
	return ""
}

type CreateServerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Created balena server
	Server *BalenaServer `protobuf:"bytes,1,opt,name=server,proto3" json:"server,omitempty"`
}

func (x *CreateServerResponse) Reset() {
	*x = CreateServerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_balena_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateServerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateServerResponse) ProtoMessage() {}

func (x *CreateServerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_balena_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateServerResponse.ProtoReflect.Descriptor instead.
func (*CreateServerResponse) Descriptor() ([]byte, []int) {
	return file_balena_proto_rawDescGZIP(), []int{5}
}

func (x *CreateServerResponse) GetServer() *BalenaServer {
	if x != nil {
		return x.Server
	}
	return nil
}

type GetServerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Server unique identifier
	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
}

func (x *GetServerRequest) Reset() {
	*x = GetServerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_balena_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetServerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServerRequest) ProtoMessage() {}

func (x *GetServerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_balena_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServerRequest.ProtoReflect.Descriptor instead.
func (*GetServerRequest) Descriptor() ([]byte, []int) {
	return file_balena_proto_rawDescGZIP(), []int{6}
}

func (x *GetServerRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

type GetServerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Founded balena server information
	Server *BalenaServer `protobuf:"bytes,1,opt,name=server,proto3" json:"server,omitempty"`
}

func (x *GetServerResponse) Reset() {
	*x = GetServerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_balena_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetServerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServerResponse) ProtoMessage() {}

func (x *GetServerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_balena_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServerResponse.ProtoReflect.Descriptor instead.
func (*GetServerResponse) Descriptor() ([]byte, []int) {
	return file_balena_proto_rawDescGZIP(), []int{7}
}

func (x *GetServerResponse) GetServer() *BalenaServer {
	if x != nil {
		return x.Server
	}
	return nil
}

type ListServersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Skip first 'skip' entries
	Skip uint64 `protobuf:"varint,1,opt,name=skip,proto3" json:"skip,omitempty"`
	// Limit result to number of entries
	Limit uint64 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *ListServersRequest) Reset() {
	*x = ListServersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_balena_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListServersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListServersRequest) ProtoMessage() {}

func (x *ListServersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_balena_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListServersRequest.ProtoReflect.Descriptor instead.
func (*ListServersRequest) Descriptor() ([]byte, []int) {
	return file_balena_proto_rawDescGZIP(), []int{8}
}

func (x *ListServersRequest) GetSkip() uint64 {
	if x != nil {
		return x.Skip
	}
	return 0
}

func (x *ListServersRequest) GetLimit() uint64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type ListServersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// One of the founded servers
	Server *BalenaServer `protobuf:"bytes,1,opt,name=server,proto3" json:"server,omitempty"`
}

func (x *ListServersResponse) Reset() {
	*x = ListServersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_balena_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListServersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListServersResponse) ProtoMessage() {}

func (x *ListServersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_balena_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListServersResponse.ProtoReflect.Descriptor instead.
func (*ListServersResponse) Descriptor() ([]byte, []int) {
	return file_balena_proto_rawDescGZIP(), []int{9}
}

func (x *ListServersResponse) GetServer() *BalenaServer {
	if x != nil {
		return x.Server
	}
	return nil
}

type CountServersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CountServersRequest) Reset() {
	*x = CountServersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_balena_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountServersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountServersRequest) ProtoMessage() {}

func (x *CountServersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_balena_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountServersRequest.ProtoReflect.Descriptor instead.
func (*CountServersRequest) Descriptor() ([]byte, []int) {
	return file_balena_proto_rawDescGZIP(), []int{10}
}

type CountServersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Total count of servers
	TotalCount uint64 `protobuf:"varint,1,opt,name=totalCount,proto3" json:"totalCount,omitempty"`
}

func (x *CountServersResponse) Reset() {
	*x = CountServersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_balena_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountServersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountServersResponse) ProtoMessage() {}

func (x *CountServersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_balena_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountServersResponse.ProtoReflect.Descriptor instead.
func (*CountServersResponse) Descriptor() ([]byte, []int) {
	return file_balena_proto_rawDescGZIP(), []int{11}
}

func (x *CountServersResponse) GetTotalCount() uint64 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

type ListServersInNamespaceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Namespace where to list servers
	Namespace string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	// Skip first 'skip' entries
	Skip uint64 `protobuf:"varint,2,opt,name=skip,proto3" json:"skip,omitempty"`
	// Limit result to number of entries
	Limit uint64 `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *ListServersInNamespaceRequest) Reset() {
	*x = ListServersInNamespaceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_balena_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListServersInNamespaceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListServersInNamespaceRequest) ProtoMessage() {}

func (x *ListServersInNamespaceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_balena_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListServersInNamespaceRequest.ProtoReflect.Descriptor instead.
func (*ListServersInNamespaceRequest) Descriptor() ([]byte, []int) {
	return file_balena_proto_rawDescGZIP(), []int{12}
}

func (x *ListServersInNamespaceRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *ListServersInNamespaceRequest) GetSkip() uint64 {
	if x != nil {
		return x.Skip
	}
	return 0
}

func (x *ListServersInNamespaceRequest) GetLimit() uint64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type ListServersInNamespaceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// One of the founded servers
	Server *BalenaServer `protobuf:"bytes,1,opt,name=server,proto3" json:"server,omitempty"`
}

func (x *ListServersInNamespaceResponse) Reset() {
	*x = ListServersInNamespaceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_balena_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListServersInNamespaceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListServersInNamespaceResponse) ProtoMessage() {}

func (x *ListServersInNamespaceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_balena_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListServersInNamespaceResponse.ProtoReflect.Descriptor instead.
func (*ListServersInNamespaceResponse) Descriptor() ([]byte, []int) {
	return file_balena_proto_rawDescGZIP(), []int{13}
}

func (x *ListServersInNamespaceResponse) GetServer() *BalenaServer {
	if x != nil {
		return x.Server
	}
	return nil
}

type CountServersInNamespaceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Namespace where to count servers
	Namespace string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
}

func (x *CountServersInNamespaceRequest) Reset() {
	*x = CountServersInNamespaceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_balena_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountServersInNamespaceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountServersInNamespaceRequest) ProtoMessage() {}

func (x *CountServersInNamespaceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_balena_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountServersInNamespaceRequest.ProtoReflect.Descriptor instead.
func (*CountServersInNamespaceRequest) Descriptor() ([]byte, []int) {
	return file_balena_proto_rawDescGZIP(), []int{14}
}

func (x *CountServersInNamespaceRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

type CountServersInNamespaceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Total count of servers in namespace
	TotalCount uint64 `protobuf:"varint,1,opt,name=totalCount,proto3" json:"totalCount,omitempty"`
}

func (x *CountServersInNamespaceResponse) Reset() {
	*x = CountServersInNamespaceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_balena_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountServersInNamespaceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountServersInNamespaceResponse) ProtoMessage() {}

func (x *CountServersInNamespaceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_balena_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountServersInNamespaceResponse.ProtoReflect.Descriptor instead.
func (*CountServersInNamespaceResponse) Descriptor() ([]byte, []int) {
	return file_balena_proto_rawDescGZIP(), []int{15}
}

func (x *CountServersInNamespaceResponse) GetTotalCount() uint64 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

type SetServerEnabledRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Unique identifier of the server to set
	ServerUUID string `protobuf:"bytes,1,opt,name=serverUUID,proto3" json:"serverUUID,omitempty"`
	// Set server enabled or not
	Enabled bool `protobuf:"varint,2,opt,name=enabled,proto3" json:"enabled,omitempty"`
}

func (x *SetServerEnabledRequest) Reset() {
	*x = SetServerEnabledRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_balena_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetServerEnabledRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetServerEnabledRequest) ProtoMessage() {}

func (x *SetServerEnabledRequest) ProtoReflect() protoreflect.Message {
	mi := &file_balena_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetServerEnabledRequest.ProtoReflect.Descriptor instead.
func (*SetServerEnabledRequest) Descriptor() ([]byte, []int) {
	return file_balena_proto_rawDescGZIP(), []int{16}
}

func (x *SetServerEnabledRequest) GetServerUUID() string {
	if x != nil {
		return x.ServerUUID
	}
	return ""
}

func (x *SetServerEnabledRequest) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

type SetServerEnabledResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Updated server information
	Server *BalenaServer `protobuf:"bytes,1,opt,name=server,proto3" json:"server,omitempty"`
}

func (x *SetServerEnabledResponse) Reset() {
	*x = SetServerEnabledResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_balena_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetServerEnabledResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetServerEnabledResponse) ProtoMessage() {}

func (x *SetServerEnabledResponse) ProtoReflect() protoreflect.Message {
	mi := &file_balena_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetServerEnabledResponse.ProtoReflect.Descriptor instead.
func (*SetServerEnabledResponse) Descriptor() ([]byte, []int) {
	return file_balena_proto_rawDescGZIP(), []int{17}
}

func (x *SetServerEnabledResponse) GetServer() *BalenaServer {
	if x != nil {
		return x.Server
	}
	return nil
}

type UpdateServerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Server unique identifier to update
	ServerUUID string `protobuf:"bytes,1,opt,name=serverUUID,proto3" json:"serverUUID,omitempty"`
	// New description
	NewDescription string `protobuf:"bytes,2,opt,name=newDescription,proto3" json:"newDescription,omitempty"`
	// New base server url. Leave empty in order not to update
	NewBaseURL string `protobuf:"bytes,3,opt,name=newBaseURL,proto3" json:"newBaseURL,omitempty"`
	// New auth token. Leave empty in order not to update
	NewAuthToken string `protobuf:"bytes,4,opt,name=newAuthToken,proto3" json:"newAuthToken,omitempty"`
}

func (x *UpdateServerRequest) Reset() {
	*x = UpdateServerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_balena_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateServerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateServerRequest) ProtoMessage() {}

func (x *UpdateServerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_balena_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateServerRequest.ProtoReflect.Descriptor instead.
func (*UpdateServerRequest) Descriptor() ([]byte, []int) {
	return file_balena_proto_rawDescGZIP(), []int{18}
}

func (x *UpdateServerRequest) GetServerUUID() string {
	if x != nil {
		return x.ServerUUID
	}
	return ""
}

func (x *UpdateServerRequest) GetNewDescription() string {
	if x != nil {
		return x.NewDescription
	}
	return ""
}

func (x *UpdateServerRequest) GetNewBaseURL() string {
	if x != nil {
		return x.NewBaseURL
	}
	return ""
}

func (x *UpdateServerRequest) GetNewAuthToken() string {
	if x != nil {
		return x.NewAuthToken
	}
	return ""
}

type UpdateServerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Updated server information
	Server *BalenaServer `protobuf:"bytes,1,opt,name=server,proto3" json:"server,omitempty"`
}

func (x *UpdateServerResponse) Reset() {
	*x = UpdateServerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_balena_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateServerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateServerResponse) ProtoMessage() {}

func (x *UpdateServerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_balena_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateServerResponse.ProtoReflect.Descriptor instead.
func (*UpdateServerResponse) Descriptor() ([]byte, []int) {
	return file_balena_proto_rawDescGZIP(), []int{19}
}

func (x *UpdateServerResponse) GetServer() *BalenaServer {
	if x != nil {
		return x.Server
	}
	return nil
}

type DeleteServerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Server unique identifier to delete
	ServerUUID string `protobuf:"bytes,1,opt,name=serverUUID,proto3" json:"serverUUID,omitempty"`
}

func (x *DeleteServerRequest) Reset() {
	*x = DeleteServerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_balena_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteServerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteServerRequest) ProtoMessage() {}

func (x *DeleteServerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_balena_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteServerRequest.ProtoReflect.Descriptor instead.
func (*DeleteServerRequest) Descriptor() ([]byte, []int) {
	return file_balena_proto_rawDescGZIP(), []int{20}
}

func (x *DeleteServerRequest) GetServerUUID() string {
	if x != nil {
		return x.ServerUUID
	}
	return ""
}

type DeleteServerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Indicates if server existed before this operation
	Existed bool `protobuf:"varint,1,opt,name=existed,proto3" json:"existed,omitempty"`
}

func (x *DeleteServerResponse) Reset() {
	*x = DeleteServerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_balena_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteServerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteServerResponse) ProtoMessage() {}

func (x *DeleteServerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_balena_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteServerResponse.ProtoReflect.Descriptor instead.
func (*DeleteServerResponse) Descriptor() ([]byte, []int) {
	return file_balena_proto_rawDescGZIP(), []int{21}
}

func (x *DeleteServerResponse) GetExisted() bool {
	if x != nil {
		return x.Existed
	}
	return false
}

type VerifyConnectionDataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// URL of the service. For example https://api.balena.com
	Url string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	// Access token
	Token string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *VerifyConnectionDataRequest) Reset() {
	*x = VerifyConnectionDataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_balena_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerifyConnectionDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyConnectionDataRequest) ProtoMessage() {}

func (x *VerifyConnectionDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_balena_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyConnectionDataRequest.ProtoReflect.Descriptor instead.
func (*VerifyConnectionDataRequest) Descriptor() ([]byte, []int) {
	return file_balena_proto_rawDescGZIP(), []int{22}
}

func (x *VerifyConnectionDataRequest) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *VerifyConnectionDataRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type VerifyConnectionDataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Status of the verification
	Status VerifyConnectionDataResponse_Status `protobuf:"varint,1,opt,name=status,proto3,enum=iot_core_integration_balena.VerifyConnectionDataResponse_Status" json:"status,omitempty"`
	// Human-friendly message with status explanation
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *VerifyConnectionDataResponse) Reset() {
	*x = VerifyConnectionDataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_balena_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerifyConnectionDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyConnectionDataResponse) ProtoMessage() {}

func (x *VerifyConnectionDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_balena_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyConnectionDataResponse.ProtoReflect.Descriptor instead.
func (*VerifyConnectionDataResponse) Descriptor() ([]byte, []int) {
	return file_balena_proto_rawDescGZIP(), []int{23}
}

func (x *VerifyConnectionDataResponse) GetStatus() VerifyConnectionDataResponse_Status {
	if x != nil {
		return x.Status
	}
	return VerifyConnectionDataResponse_OK
}

func (x *VerifyConnectionDataResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type GetDeviceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// UUID of the balena device to get
	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
}

func (x *GetDeviceRequest) Reset() {
	*x = GetDeviceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_balena_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDeviceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDeviceRequest) ProtoMessage() {}

func (x *GetDeviceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_balena_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDeviceRequest.ProtoReflect.Descriptor instead.
func (*GetDeviceRequest) Descriptor() ([]byte, []int) {
	return file_balena_proto_rawDescGZIP(), []int{24}
}

func (x *GetDeviceRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

type GetDeviceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Founded device
	Device *BalenaDevice `protobuf:"bytes,1,opt,name=device,proto3" json:"device,omitempty"`
}

func (x *GetDeviceResponse) Reset() {
	*x = GetDeviceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_balena_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDeviceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDeviceResponse) ProtoMessage() {}

func (x *GetDeviceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_balena_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDeviceResponse.ProtoReflect.Descriptor instead.
func (*GetDeviceResponse) Descriptor() ([]byte, []int) {
	return file_balena_proto_rawDescGZIP(), []int{25}
}

func (x *GetDeviceResponse) GetDevice() *BalenaDevice {
	if x != nil {
		return x.Device
	}
	return nil
}

type BindDeviceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Unique identifier of the balena device information stored in the OpenBP
	BalenaDeviceUUID string `protobuf:"bytes,1,opt,name=balenaDeviceUUID,proto3" json:"balenaDeviceUUID,omitempty"`
	// Device namespace in the OpenBP
	DeviceNamespace string `protobuf:"bytes,2,opt,name=deviceNamespace,proto3" json:"deviceNamespace,omitempty"`
	// Device UUID in the OpenBP.
	DeviceUUID string `protobuf:"bytes,3,opt,name=deviceUUID,proto3" json:"deviceUUID,omitempty"`
}

func (x *BindDeviceRequest) Reset() {
	*x = BindDeviceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_balena_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BindDeviceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BindDeviceRequest) ProtoMessage() {}

func (x *BindDeviceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_balena_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BindDeviceRequest.ProtoReflect.Descriptor instead.
func (*BindDeviceRequest) Descriptor() ([]byte, []int) {
	return file_balena_proto_rawDescGZIP(), []int{26}
}

func (x *BindDeviceRequest) GetBalenaDeviceUUID() string {
	if x != nil {
		return x.BalenaDeviceUUID
	}
	return ""
}

func (x *BindDeviceRequest) GetDeviceNamespace() string {
	if x != nil {
		return x.DeviceNamespace
	}
	return ""
}

func (x *BindDeviceRequest) GetDeviceUUID() string {
	if x != nil {
		return x.DeviceUUID
	}
	return ""
}

type BindDeviceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Updated balena device information
	Device *BalenaDevice `protobuf:"bytes,1,opt,name=device,proto3" json:"device,omitempty"`
}

func (x *BindDeviceResponse) Reset() {
	*x = BindDeviceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_balena_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BindDeviceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BindDeviceResponse) ProtoMessage() {}

func (x *BindDeviceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_balena_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BindDeviceResponse.ProtoReflect.Descriptor instead.
func (*BindDeviceResponse) Descriptor() ([]byte, []int) {
	return file_balena_proto_rawDescGZIP(), []int{27}
}

func (x *BindDeviceResponse) GetDevice() *BalenaDevice {
	if x != nil {
		return x.Device
	}
	return nil
}

type UnBindDeviceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Unique identifier of the balena device information stored in the OpenBP
	BalenaDeviceUUID string `protobuf:"bytes,1,opt,name=balenaDeviceUUID,proto3" json:"balenaDeviceUUID,omitempty"`
}

func (x *UnBindDeviceRequest) Reset() {
	*x = UnBindDeviceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_balena_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnBindDeviceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnBindDeviceRequest) ProtoMessage() {}

func (x *UnBindDeviceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_balena_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnBindDeviceRequest.ProtoReflect.Descriptor instead.
func (*UnBindDeviceRequest) Descriptor() ([]byte, []int) {
	return file_balena_proto_rawDescGZIP(), []int{28}
}

func (x *UnBindDeviceRequest) GetBalenaDeviceUUID() string {
	if x != nil {
		return x.BalenaDeviceUUID
	}
	return ""
}

type UnBindDeviceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Updated balena device information
	Device *BalenaDevice `protobuf:"bytes,1,opt,name=device,proto3" json:"device,omitempty"`
}

func (x *UnBindDeviceResponse) Reset() {
	*x = UnBindDeviceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_balena_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnBindDeviceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnBindDeviceResponse) ProtoMessage() {}

func (x *UnBindDeviceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_balena_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnBindDeviceResponse.ProtoReflect.Descriptor instead.
func (*UnBindDeviceResponse) Descriptor() ([]byte, []int) {
	return file_balena_proto_rawDescGZIP(), []int{29}
}

func (x *UnBindDeviceResponse) GetDevice() *BalenaDevice {
	if x != nil {
		return x.Device
	}
	return nil
}

type ListDevicesInNamespaceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Namespace of the balena service integration
	BalenaServersNamespace string                                      `protobuf:"bytes,1,opt,name=balenaServersNamespace,proto3" json:"balenaServersNamespace,omitempty"`
	BindingFilter          ListDevicesInNamespaceRequest_BindingFilter `protobuf:"varint,2,opt,name=bindingFilter,proto3,enum=iot_core_integration_balena.ListDevicesInNamespaceRequest_BindingFilter" json:"bindingFilter,omitempty"`
	// Skip first 'skip' entries
	Skip uint64 `protobuf:"varint,3,opt,name=skip,proto3" json:"skip,omitempty"`
	// Limit result to number of entries
	Limit uint64 `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *ListDevicesInNamespaceRequest) Reset() {
	*x = ListDevicesInNamespaceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_balena_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDevicesInNamespaceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDevicesInNamespaceRequest) ProtoMessage() {}

func (x *ListDevicesInNamespaceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_balena_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDevicesInNamespaceRequest.ProtoReflect.Descriptor instead.
func (*ListDevicesInNamespaceRequest) Descriptor() ([]byte, []int) {
	return file_balena_proto_rawDescGZIP(), []int{30}
}

func (x *ListDevicesInNamespaceRequest) GetBalenaServersNamespace() string {
	if x != nil {
		return x.BalenaServersNamespace
	}
	return ""
}

func (x *ListDevicesInNamespaceRequest) GetBindingFilter() ListDevicesInNamespaceRequest_BindingFilter {
	if x != nil {
		return x.BindingFilter
	}
	return ListDevicesInNamespaceRequest_ALL
}

func (x *ListDevicesInNamespaceRequest) GetSkip() uint64 {
	if x != nil {
		return x.Skip
	}
	return 0
}

func (x *ListDevicesInNamespaceRequest) GetLimit() uint64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type ListDevicesInNamespaceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Device *BalenaDevice `protobuf:"bytes,1,opt,name=device,proto3" json:"device,omitempty"`
}

func (x *ListDevicesInNamespaceResponse) Reset() {
	*x = ListDevicesInNamespaceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_balena_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDevicesInNamespaceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDevicesInNamespaceResponse) ProtoMessage() {}

func (x *ListDevicesInNamespaceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_balena_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDevicesInNamespaceResponse.ProtoReflect.Descriptor instead.
func (*ListDevicesInNamespaceResponse) Descriptor() ([]byte, []int) {
	return file_balena_proto_rawDescGZIP(), []int{31}
}

func (x *ListDevicesInNamespaceResponse) GetDevice() *BalenaDevice {
	if x != nil {
		return x.Device
	}
	return nil
}

type CountDevicesInNamespaceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Namespace of the balena service integration
	BalenaServersNamespace string                                       `protobuf:"bytes,1,opt,name=balenaServersNamespace,proto3" json:"balenaServersNamespace,omitempty"`
	BindingFilter          CountDevicesInNamespaceRequest_BindingFilter `protobuf:"varint,2,opt,name=bindingFilter,proto3,enum=iot_core_integration_balena.CountDevicesInNamespaceRequest_BindingFilter" json:"bindingFilter,omitempty"`
}

func (x *CountDevicesInNamespaceRequest) Reset() {
	*x = CountDevicesInNamespaceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_balena_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountDevicesInNamespaceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountDevicesInNamespaceRequest) ProtoMessage() {}

func (x *CountDevicesInNamespaceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_balena_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountDevicesInNamespaceRequest.ProtoReflect.Descriptor instead.
func (*CountDevicesInNamespaceRequest) Descriptor() ([]byte, []int) {
	return file_balena_proto_rawDescGZIP(), []int{32}
}

func (x *CountDevicesInNamespaceRequest) GetBalenaServersNamespace() string {
	if x != nil {
		return x.BalenaServersNamespace
	}
	return ""
}

func (x *CountDevicesInNamespaceRequest) GetBindingFilter() CountDevicesInNamespaceRequest_BindingFilter {
	if x != nil {
		return x.BindingFilter
	}
	return CountDevicesInNamespaceRequest_ALL
}

type CountDevicesInNamespaceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count uint64 `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *CountDevicesInNamespaceResponse) Reset() {
	*x = CountDevicesInNamespaceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_balena_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountDevicesInNamespaceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountDevicesInNamespaceResponse) ProtoMessage() {}

func (x *CountDevicesInNamespaceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_balena_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountDevicesInNamespaceResponse.ProtoReflect.Descriptor instead.
func (*CountDevicesInNamespaceResponse) Descriptor() ([]byte, []int) {
	return file_balena_proto_rawDescGZIP(), []int{33}
}

func (x *CountDevicesInNamespaceResponse) GetCount() uint64 {
	if x != nil {
		return x.Count
	}
	return 0
}

type SyncNowRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Balena server to synchronize
	BalenaServerUUID string `protobuf:"bytes,1,opt,name=balenaServerUUID,proto3" json:"balenaServerUUID,omitempty"`
}

func (x *SyncNowRequest) Reset() {
	*x = SyncNowRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_balena_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncNowRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncNowRequest) ProtoMessage() {}

func (x *SyncNowRequest) ProtoReflect() protoreflect.Message {
	mi := &file_balena_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncNowRequest.ProtoReflect.Descriptor instead.
func (*SyncNowRequest) Descriptor() ([]byte, []int) {
	return file_balena_proto_rawDescGZIP(), []int{34}
}

func (x *SyncNowRequest) GetBalenaServerUUID() string {
	if x != nil {
		return x.BalenaServerUUID
	}
	return ""
}

type SyncNowResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Synchronization log
	Log *SyncLogEntry `protobuf:"bytes,1,opt,name=log,proto3" json:"log,omitempty"`
}

func (x *SyncNowResponse) Reset() {
	*x = SyncNowResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_balena_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncNowResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncNowResponse) ProtoMessage() {}

func (x *SyncNowResponse) ProtoReflect() protoreflect.Message {
	mi := &file_balena_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncNowResponse.ProtoReflect.Descriptor instead.
func (*SyncNowResponse) Descriptor() ([]byte, []int) {
	return file_balena_proto_rawDescGZIP(), []int{35}
}

func (x *SyncNowResponse) GetLog() *SyncLogEntry {
	if x != nil {
		return x.Log
	}
	return nil
}

type ListSyncLogRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Unique identifier of the balena server for which to list the logs
	ServerUUID string `protobuf:"bytes,1,opt,name=serverUUID,proto3" json:"serverUUID,omitempty"`
	// Skip first 'skip' entries
	Skip uint64 `protobuf:"varint,2,opt,name=skip,proto3" json:"skip,omitempty"`
	// Limit result to number of entries
	Limit uint64 `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *ListSyncLogRequest) Reset() {
	*x = ListSyncLogRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_balena_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSyncLogRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSyncLogRequest) ProtoMessage() {}

func (x *ListSyncLogRequest) ProtoReflect() protoreflect.Message {
	mi := &file_balena_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSyncLogRequest.ProtoReflect.Descriptor instead.
func (*ListSyncLogRequest) Descriptor() ([]byte, []int) {
	return file_balena_proto_rawDescGZIP(), []int{36}
}

func (x *ListSyncLogRequest) GetServerUUID() string {
	if x != nil {
		return x.ServerUUID
	}
	return ""
}

func (x *ListSyncLogRequest) GetSkip() uint64 {
	if x != nil {
		return x.Skip
	}
	return 0
}

func (x *ListSyncLogRequest) GetLimit() uint64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type ListSyncLogResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// One of the log entries
	Log *SyncLogEntry `protobuf:"bytes,1,opt,name=log,proto3" json:"log,omitempty"`
}

func (x *ListSyncLogResponse) Reset() {
	*x = ListSyncLogResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_balena_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSyncLogResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSyncLogResponse) ProtoMessage() {}

func (x *ListSyncLogResponse) ProtoReflect() protoreflect.Message {
	mi := &file_balena_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSyncLogResponse.ProtoReflect.Descriptor instead.
func (*ListSyncLogResponse) Descriptor() ([]byte, []int) {
	return file_balena_proto_rawDescGZIP(), []int{37}
}

func (x *ListSyncLogResponse) GetLog() *SyncLogEntry {
	if x != nil {
		return x.Log
	}
	return nil
}

type CountSyncLogRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Unique identifier of the balena server for which to count the logs
	ServerUUID string `protobuf:"bytes,1,opt,name=serverUUID,proto3" json:"serverUUID,omitempty"`
}

func (x *CountSyncLogRequest) Reset() {
	*x = CountSyncLogRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_balena_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountSyncLogRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountSyncLogRequest) ProtoMessage() {}

func (x *CountSyncLogRequest) ProtoReflect() protoreflect.Message {
	mi := &file_balena_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountSyncLogRequest.ProtoReflect.Descriptor instead.
func (*CountSyncLogRequest) Descriptor() ([]byte, []int) {
	return file_balena_proto_rawDescGZIP(), []int{38}
}

func (x *CountSyncLogRequest) GetServerUUID() string {
	if x != nil {
		return x.ServerUUID
	}
	return ""
}

type CountSyncLogResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Total count of logs for specified balena server
	TotalCount uint64 `protobuf:"varint,1,opt,name=totalCount,proto3" json:"totalCount,omitempty"`
}

func (x *CountSyncLogResponse) Reset() {
	*x = CountSyncLogResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_balena_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountSyncLogResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountSyncLogResponse) ProtoMessage() {}

func (x *CountSyncLogResponse) ProtoReflect() protoreflect.Message {
	mi := &file_balena_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountSyncLogResponse.ProtoReflect.Descriptor instead.
func (*CountSyncLogResponse) Descriptor() ([]byte, []int) {
	return file_balena_proto_rawDescGZIP(), []int{39}
}

func (x *CountSyncLogResponse) GetTotalCount() uint64 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

type GetLastSyncLogRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Unique identifier of the server for which to get log
	ServerUUID string `protobuf:"bytes,1,opt,name=serverUUID,proto3" json:"serverUUID,omitempty"`
}

func (x *GetLastSyncLogRequest) Reset() {
	*x = GetLastSyncLogRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_balena_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLastSyncLogRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLastSyncLogRequest) ProtoMessage() {}

func (x *GetLastSyncLogRequest) ProtoReflect() protoreflect.Message {
	mi := &file_balena_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLastSyncLogRequest.ProtoReflect.Descriptor instead.
func (*GetLastSyncLogRequest) Descriptor() ([]byte, []int) {
	return file_balena_proto_rawDescGZIP(), []int{40}
}

func (x *GetLastSyncLogRequest) GetServerUUID() string {
	if x != nil {
		return x.ServerUUID
	}
	return ""
}

type GetLastSyncLogResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Last synchronization log
	Log *SyncLogEntry `protobuf:"bytes,1,opt,name=log,proto3" json:"log,omitempty"`
}

func (x *GetLastSyncLogResponse) Reset() {
	*x = GetLastSyncLogResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_balena_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLastSyncLogResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLastSyncLogResponse) ProtoMessage() {}

func (x *GetLastSyncLogResponse) ProtoReflect() protoreflect.Message {
	mi := &file_balena_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLastSyncLogResponse.ProtoReflect.Descriptor instead.
func (*GetLastSyncLogResponse) Descriptor() ([]byte, []int) {
	return file_balena_proto_rawDescGZIP(), []int{41}
}

func (x *GetLastSyncLogResponse) GetLog() *SyncLogEntry {
	if x != nil {
		return x.Log
	}
	return nil
}

type SyncLogEntry_Stats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Number of devices founded on the balena server
	FoundedDevicesOnServer int32 `protobuf:"varint,1,opt,name=foundedDevicesOnServer,proto3" json:"foundedDevicesOnServer,omitempty"`
	// Number of founded devices that are active (online)
	FoundedActiveDevices int32 `protobuf:"varint,2,opt,name=foundedActiveDevices,proto3" json:"foundedActiveDevices,omitempty"`
	// Number of the devices for which metrics where updated
	MetricsUpdates int32 `protobuf:"varint,3,opt,name=metricsUpdates,proto3" json:"metricsUpdates,omitempty"`
	// Execution time in milliseconds
	ExecutionTime uint64 `protobuf:"varint,4,opt,name=executionTime,proto3" json:"executionTime,omitempty"`
}

func (x *SyncLogEntry_Stats) Reset() {
	*x = SyncLogEntry_Stats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_balena_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncLogEntry_Stats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncLogEntry_Stats) ProtoMessage() {}

func (x *SyncLogEntry_Stats) ProtoReflect() protoreflect.Message {
	mi := &file_balena_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncLogEntry_Stats.ProtoReflect.Descriptor instead.
func (*SyncLogEntry_Stats) Descriptor() ([]byte, []int) {
	return file_balena_proto_rawDescGZIP(), []int{3, 0}
}

func (x *SyncLogEntry_Stats) GetFoundedDevicesOnServer() int32 {
	if x != nil {
		return x.FoundedDevicesOnServer
	}
	return 0
}

func (x *SyncLogEntry_Stats) GetFoundedActiveDevices() int32 {
	if x != nil {
		return x.FoundedActiveDevices
	}
	return 0
}

func (x *SyncLogEntry_Stats) GetMetricsUpdates() int32 {
	if x != nil {
		return x.MetricsUpdates
	}
	return 0
}

func (x *SyncLogEntry_Stats) GetExecutionTime() uint64 {
	if x != nil {
		return x.ExecutionTime
	}
	return 0
}

var File_balena_proto protoreflect.FileDescriptor

var file_balena_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x62, 0x61, 0x6c, 0x65, 0x6e, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1b,
	0x69, 0x6f, 0x74, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x62, 0x61, 0x6c, 0x65, 0x6e, 0x61, 0x1a, 0x1f, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb0, 0x02, 0x0a,
	0x0c, 0x42, 0x61, 0x6c, 0x65, 0x6e, 0x61, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x1c, 0x0a,
	0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x75,
	0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x61, 0x73, 0x65, 0x55, 0x52, 0x4c,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x61, 0x73, 0x65, 0x55, 0x52, 0x4c, 0x12,
	0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x34, 0x0a, 0x07, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x18, 0x32, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12,
	0x34, 0x0a, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x33, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x34, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22,
	0xf0, 0x03, 0x0a, 0x0a, 0x42, 0x61, 0x6c, 0x65, 0x6e, 0x61, 0x44, 0x61, 0x74, 0x61, 0x12, 0x12,
	0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75,
	0x69, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x73, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74,
	0x75, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69,
	0x74, 0x75, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x50, 0x0a, 0x15,
	0x6c, 0x61, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x15, 0x6c, 0x61, 0x73, 0x74, 0x43, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x20,
	0x0a, 0x0b, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x55, 0x73, 0x61, 0x67, 0x65, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0b, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x55, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x54, 0x6f, 0x74,
	0x61, 0x6c, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x55, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67,
	0x65, 0x55, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x70, 0x75, 0x55, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x63, 0x70, 0x75, 0x55, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x70, 0x75, 0x54, 0x65, 0x6d, 0x70, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x07, 0x63, 0x70, 0x75, 0x54, 0x65, 0x6d, 0x70, 0x12, 0x24, 0x0a, 0x0d,
	0x69, 0x73, 0x55, 0x6e, 0x64, 0x65, 0x72, 0x76, 0x6f, 0x6c, 0x74, 0x65, 0x64, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0d, 0x69, 0x73, 0x55, 0x6e, 0x64, 0x65, 0x72, 0x76, 0x6f, 0x6c, 0x74,
	0x65, 0x64, 0x22, 0xb5, 0x03, 0x0a, 0x0c, 0x42, 0x61, 0x6c, 0x65, 0x6e, 0x61, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x34, 0x0a, 0x15, 0x62, 0x69, 0x6e, 0x64, 0x65,
	0x64, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x62, 0x69, 0x6e, 0x64, 0x65, 0x64, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x2a, 0x0a,
	0x10, 0x62, 0x69, 0x6e, 0x64, 0x65, 0x64, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x55, 0x55, 0x49,
	0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x62, 0x69, 0x6e, 0x64, 0x65, 0x64, 0x44,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x55, 0x55, 0x49, 0x44, 0x12, 0x34, 0x0a, 0x15, 0x62, 0x61, 0x6c,
	0x65, 0x6e, 0x61, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x62, 0x61, 0x6c, 0x65, 0x6e, 0x61,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12,
	0x2a, 0x0a, 0x10, 0x62, 0x61, 0x6c, 0x65, 0x6e, 0x61, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x55,
	0x55, 0x49, 0x44, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x62, 0x61, 0x6c, 0x65, 0x6e,
	0x61, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x55, 0x55, 0x49, 0x44, 0x12, 0x47, 0x0a, 0x0a, 0x62,
	0x61, 0x6c, 0x65, 0x6e, 0x61, 0x44, 0x61, 0x74, 0x61, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x27, 0x2e, 0x69, 0x6f, 0x74, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x67,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x62, 0x61, 0x6c, 0x65, 0x6e, 0x61, 0x2e, 0x42, 0x61,
	0x6c, 0x65, 0x6e, 0x61, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0a, 0x62, 0x61, 0x6c, 0x65, 0x6e, 0x61,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x34, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18,
	0x32, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x34, 0x0a, 0x07, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x33, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x34, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x98, 0x04, 0x0a, 0x0c, 0x53,
	0x79, 0x6e, 0x63, 0x4c, 0x6f, 0x67, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x75,
	0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12,
	0x1e, 0x0a, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x55, 0x55, 0x49, 0x44, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x55, 0x55, 0x49, 0x44, 0x12,
	0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x48, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x30, 0x2e, 0x69, 0x6f, 0x74, 0x5f,
	0x63, 0x6f, 0x72, 0x65, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x62, 0x61, 0x6c, 0x65, 0x6e, 0x61, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x4c, 0x6f, 0x67, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x45, 0x0a, 0x05, 0x73, 0x74, 0x61,
	0x74, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x69, 0x6f, 0x74, 0x5f, 0x63,
	0x6f, 0x72, 0x65, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x62, 0x61, 0x6c, 0x65, 0x6e, 0x61, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x4c, 0x6f, 0x67, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x73,
	0x1a, 0xc1, 0x01, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x36, 0x0a, 0x16, 0x66, 0x6f,
	0x75, 0x6e, 0x64, 0x65, 0x64, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x4f, 0x6e, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x16, 0x66, 0x6f, 0x75, 0x6e,
	0x64, 0x65, 0x64, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x4f, 0x6e, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x12, 0x32, 0x0a, 0x14, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x65, 0x64, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x14, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x65, 0x64, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x44,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63,
	0x73, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e,
	0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x12, 0x24,
	0x0a, 0x0d, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e,
	0x54, 0x69, 0x6d, 0x65, 0x22, 0x2f, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x06,
	0x0a, 0x02, 0x4f, 0x4b, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10,
	0x01, 0x12, 0x12, 0x0a, 0x0e, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x4e, 0x41, 0x4c, 0x5f, 0x45, 0x52,
	0x52, 0x4f, 0x52, 0x10, 0x02, 0x22, 0xa1, 0x01, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a,
	0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x61, 0x73, 0x65, 0x55, 0x52, 0x4c, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x62, 0x61, 0x73, 0x65, 0x55, 0x52, 0x4c, 0x12, 0x1c, 0x0a, 0x09, 0x61,
	0x75, 0x74, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x61, 0x75, 0x74, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x59, 0x0a, 0x14, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x41, 0x0a, 0x06, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x29, 0x2e, 0x69, 0x6f, 0x74, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x69, 0x6e, 0x74,
	0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x62, 0x61, 0x6c, 0x65, 0x6e, 0x61, 0x2e,
	0x42, 0x61, 0x6c, 0x65, 0x6e, 0x61, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x06, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x22, 0x26, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x22, 0x56, 0x0a, 0x11,
	0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x41, 0x0a, 0x06, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x29, 0x2e, 0x69, 0x6f, 0x74, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x69, 0x6e, 0x74,
	0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x62, 0x61, 0x6c, 0x65, 0x6e, 0x61, 0x2e,
	0x42, 0x61, 0x6c, 0x65, 0x6e, 0x61, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x06, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x22, 0x3e, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6b,
	0x69, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x73, 0x6b, 0x69, 0x70, 0x12, 0x14,
	0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x22, 0x58, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x06, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x69, 0x6f,
	0x74, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x62, 0x61, 0x6c, 0x65, 0x6e, 0x61, 0x2e, 0x42, 0x61, 0x6c, 0x65, 0x6e, 0x61,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x06, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x22, 0x15,
	0x0a, 0x13, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x36, 0x0a, 0x14, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a,
	0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x67, 0x0a,
	0x1d, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x49, 0x6e, 0x4e, 0x61,
	0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c,
	0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x73, 0x6b, 0x69, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x73, 0x6b, 0x69, 0x70,
	0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x63, 0x0a, 0x1e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x73, 0x49, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x06, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x69, 0x6f, 0x74, 0x5f, 0x63,
	0x6f, 0x72, 0x65, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x62, 0x61, 0x6c, 0x65, 0x6e, 0x61, 0x2e, 0x42, 0x61, 0x6c, 0x65, 0x6e, 0x61, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x52, 0x06, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x22, 0x3e, 0x0a, 0x1e, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x49, 0x6e, 0x4e, 0x61, 0x6d,
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a,
	0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x22, 0x41, 0x0a, 0x1f, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x49, 0x6e, 0x4e, 0x61, 0x6d,
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e,
	0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x53,
	0x0a, 0x17, 0x53, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x45, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x55, 0x55, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x55, 0x55, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x64, 0x22, 0x5d, 0x0a, 0x18, 0x53, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x41, 0x0a, 0x06, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x29, 0x2e, 0x69, 0x6f, 0x74, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x67,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x62, 0x61, 0x6c, 0x65, 0x6e, 0x61, 0x2e, 0x42, 0x61,
	0x6c, 0x65, 0x6e, 0x61, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x06, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x22, 0xa1, 0x01, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x55, 0x55, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x55, 0x55, 0x49, 0x44, 0x12, 0x26, 0x0a, 0x0e, 0x6e, 0x65,
	0x77, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x6e, 0x65, 0x77, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x6e, 0x65, 0x77, 0x42, 0x61, 0x73, 0x65, 0x55, 0x52, 0x4c,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6e, 0x65, 0x77, 0x42, 0x61, 0x73, 0x65, 0x55,
	0x52, 0x4c, 0x12, 0x22, 0x0a, 0x0c, 0x6e, 0x65, 0x77, 0x41, 0x75, 0x74, 0x68, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6e, 0x65, 0x77, 0x41, 0x75, 0x74,
	0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x59, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41,
	0x0a, 0x06, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29,
	0x2e, 0x69, 0x6f, 0x74, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x62, 0x61, 0x6c, 0x65, 0x6e, 0x61, 0x2e, 0x42, 0x61, 0x6c,
	0x65, 0x6e, 0x61, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x06, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x22, 0x35, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x55, 0x55, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x55, 0x55, 0x49, 0x44, 0x22, 0x30, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x65, 0x78, 0x69, 0x73, 0x74, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x65, 0x78, 0x69, 0x73, 0x74, 0x65, 0x64, 0x22, 0x45, 0x0a, 0x1b, 0x56, 0x65,
	0x72, 0x69, 0x66, 0x79, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x22, 0xe2, 0x01, 0x0a, 0x1c, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x43, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x58, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x40, 0x2e, 0x69, 0x6f, 0x74, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x69, 0x6e,
	0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x62, 0x61, 0x6c, 0x65, 0x6e, 0x61,
	0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x4e, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x06, 0x0a, 0x02, 0x4f, 0x4b, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x42, 0x41, 0x44, 0x5f,
	0x55, 0x52, 0x4c, 0x10, 0x01, 0x12, 0x16, 0x0a, 0x12, 0x53, 0x45, 0x52, 0x56, 0x45, 0x52, 0x5f,
	0x55, 0x4e, 0x41, 0x56, 0x41, 0x49, 0x4c, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x02, 0x12, 0x17, 0x0a,
	0x13, 0x53, 0x45, 0x52, 0x56, 0x45, 0x52, 0x5f, 0x42, 0x41, 0x44, 0x5f, 0x52, 0x45, 0x53, 0x50,
	0x4f, 0x4e, 0x53, 0x45, 0x10, 0x03, 0x22, 0x26, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x22, 0x56,
	0x0a, 0x11, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x69, 0x6f, 0x74, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x69,
	0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x62, 0x61, 0x6c, 0x65, 0x6e,
	0x61, 0x2e, 0x42, 0x61, 0x6c, 0x65, 0x6e, 0x61, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x06,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x22, 0x89, 0x01, 0x0a, 0x11, 0x42, 0x69, 0x6e, 0x64, 0x44,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x10,
	0x62, 0x61, 0x6c, 0x65, 0x6e, 0x61, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x55, 0x55, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x62, 0x61, 0x6c, 0x65, 0x6e, 0x61, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x55, 0x55, 0x49, 0x44, 0x12, 0x28, 0x0a, 0x0f, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x55, 0x55, 0x49, 0x44,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x55, 0x55,
	0x49, 0x44, 0x22, 0x57, 0x0a, 0x12, 0x42, 0x69, 0x6e, 0x64, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x06, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x69, 0x6f, 0x74, 0x5f, 0x63,
	0x6f, 0x72, 0x65, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x62, 0x61, 0x6c, 0x65, 0x6e, 0x61, 0x2e, 0x42, 0x61, 0x6c, 0x65, 0x6e, 0x61, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x52, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x22, 0x41, 0x0a, 0x13, 0x55,
	0x6e, 0x42, 0x69, 0x6e, 0x64, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x2a, 0x0a, 0x10, 0x62, 0x61, 0x6c, 0x65, 0x6e, 0x61, 0x44, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x55, 0x55, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x62, 0x61,
	0x6c, 0x65, 0x6e, 0x61, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x55, 0x55, 0x49, 0x44, 0x22, 0x59,
	0x0a, 0x14, 0x55, 0x6e, 0x42, 0x69, 0x6e, 0x64, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x69, 0x6f, 0x74, 0x5f, 0x63, 0x6f, 0x72,
	0x65, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x62, 0x61,
	0x6c, 0x65, 0x6e, 0x61, 0x2e, 0x42, 0x61, 0x6c, 0x65, 0x6e, 0x61, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x52, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x22, 0xaf, 0x02, 0x0a, 0x1d, 0x4c, 0x69,
	0x73, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x49, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x36, 0x0a, 0x16, 0x62,
	0x61, 0x6c, 0x65, 0x6e, 0x61, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x4e, 0x61, 0x6d, 0x65,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x16, 0x62, 0x61, 0x6c,
	0x65, 0x6e, 0x61, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x12, 0x6e, 0x0a, 0x0d, 0x62, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x48, 0x2e, 0x69, 0x6f, 0x74,
	0x5f, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x62, 0x61, 0x6c, 0x65, 0x6e, 0x61, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x49, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x52, 0x0d, 0x62, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6b, 0x69, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x04, 0x73, 0x6b, 0x69, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x3c, 0x0a,
	0x0d, 0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x07,
	0x0a, 0x03, 0x41, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x4f, 0x4e, 0x4c, 0x59, 0x5f,
	0x42, 0x49, 0x4e, 0x44, 0x45, 0x44, 0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d, 0x4f, 0x4e, 0x4c, 0x59,
	0x5f, 0x55, 0x4e, 0x42, 0x49, 0x4e, 0x44, 0x45, 0x44, 0x10, 0x02, 0x22, 0x63, 0x0a, 0x1e, 0x4c,
	0x69, 0x73, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x49, 0x6e, 0x4e, 0x61, 0x6d, 0x65,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a,
	0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e,
	0x69, 0x6f, 0x74, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x62, 0x61, 0x6c, 0x65, 0x6e, 0x61, 0x2e, 0x42, 0x61, 0x6c, 0x65,
	0x6e, 0x61, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x22, 0x87, 0x02, 0x0a, 0x1e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x49, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x36, 0x0a, 0x16, 0x62, 0x61, 0x6c, 0x65, 0x6e, 0x61, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x16, 0x62, 0x61, 0x6c, 0x65, 0x6e, 0x61, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x6f, 0x0a, 0x0d, 0x62,
	0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x49, 0x2e, 0x69, 0x6f, 0x74, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x69, 0x6e,
	0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x62, 0x61, 0x6c, 0x65, 0x6e, 0x61,
	0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x49, 0x6e, 0x4e,
	0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e,
	0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x0d, 0x62,
	0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x22, 0x3c, 0x0a, 0x0d,
	0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x07, 0x0a,
	0x03, 0x41, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x4f, 0x4e, 0x4c, 0x59, 0x5f, 0x42,
	0x49, 0x4e, 0x44, 0x45, 0x44, 0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d, 0x4f, 0x4e, 0x4c, 0x59, 0x5f,
	0x55, 0x4e, 0x42, 0x49, 0x4e, 0x44, 0x45, 0x44, 0x10, 0x02, 0x22, 0x37, 0x0a, 0x1f, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x49, 0x6e, 0x4e, 0x61, 0x6d, 0x65,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x22, 0x3c, 0x0a, 0x0e, 0x53, 0x79, 0x6e, 0x63, 0x4e, 0x6f, 0x77, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x10, 0x62, 0x61, 0x6c, 0x65, 0x6e, 0x61, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x55, 0x55, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x10, 0x62, 0x61, 0x6c, 0x65, 0x6e, 0x61, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x55, 0x55, 0x49,
	0x44, 0x22, 0x4e, 0x0a, 0x0f, 0x53, 0x79, 0x6e, 0x63, 0x4e, 0x6f, 0x77, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x03, 0x6c, 0x6f, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x29, 0x2e, 0x69, 0x6f, 0x74, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x69, 0x6e, 0x74,
	0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x62, 0x61, 0x6c, 0x65, 0x6e, 0x61, 0x2e,
	0x53, 0x79, 0x6e, 0x63, 0x4c, 0x6f, 0x67, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x03, 0x6c, 0x6f,
	0x67, 0x22, 0x5e, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x79, 0x6e, 0x63, 0x4c, 0x6f, 0x67,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x55, 0x55, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x55, 0x55, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6b, 0x69, 0x70, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x73, 0x6b, 0x69, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x22, 0x52, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x79, 0x6e, 0x63, 0x4c, 0x6f, 0x67,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x03, 0x6c, 0x6f, 0x67, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x69, 0x6f, 0x74, 0x5f, 0x63, 0x6f, 0x72, 0x65,
	0x5f, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x62, 0x61, 0x6c,
	0x65, 0x6e, 0x61, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x4c, 0x6f, 0x67, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x03, 0x6c, 0x6f, 0x67, 0x22, 0x35, 0x0a, 0x13, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x79,
	0x6e, 0x63, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x55, 0x55, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x55, 0x55, 0x49, 0x44, 0x22, 0x36, 0x0a, 0x14,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x79, 0x6e, 0x63, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x22, 0x37, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x73, 0x74, 0x53,
	0x79, 0x6e, 0x63, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a,
	0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x55, 0x55, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x55, 0x55, 0x49, 0x44, 0x22, 0x55, 0x0a,
	0x16, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x73, 0x74, 0x53, 0x79, 0x6e, 0x63, 0x4c, 0x6f, 0x67, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x03, 0x6c, 0x6f, 0x67, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x69, 0x6f, 0x74, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x5f,
	0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x62, 0x61, 0x6c, 0x65,
	0x6e, 0x61, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x4c, 0x6f, 0x67, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x03, 0x6c, 0x6f, 0x67, 0x32, 0xbe, 0x08, 0x0a, 0x14, 0x42, 0x61, 0x6c, 0x65, 0x6e, 0x61, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x6d, 0x0a,
	0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x30, 0x2e, 0x69, 0x6f, 0x74, 0x5f, 0x63, 0x6f,
	0x72, 0x65, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x62,
	0x61, 0x6c, 0x65, 0x6e, 0x61, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x69, 0x6f, 0x74, 0x5f,
	0x63, 0x6f, 0x72, 0x65, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x62, 0x61, 0x6c, 0x65, 0x6e, 0x61, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x64, 0x0a, 0x03,
	0x47, 0x65, 0x74, 0x12, 0x2d, 0x2e, 0x69, 0x6f, 0x74, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x69,
	0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x62, 0x61, 0x6c, 0x65, 0x6e,
	0x61, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x69, 0x6f, 0x74, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x69, 0x6e,
	0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x62, 0x61, 0x6c, 0x65, 0x6e, 0x61,
	0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x6b, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2f, 0x2e, 0x69, 0x6f, 0x74,
	0x5f, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x62, 0x61, 0x6c, 0x65, 0x6e, 0x61, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x69, 0x6f,
	0x74, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x62, 0x61, 0x6c, 0x65, 0x6e, 0x61, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x30, 0x01, 0x12,
	0x6c, 0x0a, 0x05, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x30, 0x2e, 0x69, 0x6f, 0x74, 0x5f, 0x63,
	0x6f, 0x72, 0x65, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x62, 0x61, 0x6c, 0x65, 0x6e, 0x61, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x69, 0x6f, 0x74,
	0x5f, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x62, 0x61, 0x6c, 0x65, 0x6e, 0x61, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x8c, 0x01,
	0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x12, 0x3a, 0x2e, 0x69, 0x6f, 0x74, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x69, 0x6e, 0x74,
	0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x62, 0x61, 0x6c, 0x65, 0x6e, 0x61, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x49, 0x6e, 0x4e, 0x61, 0x6d,
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3b, 0x2e,
	0x69, 0x6f, 0x74, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x62, 0x61, 0x6c, 0x65, 0x6e, 0x61, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x49, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x30, 0x01, 0x12, 0x8d, 0x01, 0x0a,
	0x10, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x12, 0x3b, 0x2e, 0x69, 0x6f, 0x74, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x69, 0x6e, 0x74,
	0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x62, 0x61, 0x6c, 0x65, 0x6e, 0x61, 0x2e,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x49, 0x6e, 0x4e, 0x61,
	0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3c,
	0x2e, 0x69, 0x6f, 0x74, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x62, 0x61, 0x6c, 0x65, 0x6e, 0x61, 0x2e, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x49, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x79, 0x0a, 0x0a,
	0x53, 0x65, 0x74, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x34, 0x2e, 0x69, 0x6f, 0x74,
	0x5f, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x62, 0x61, 0x6c, 0x65, 0x6e, 0x61, 0x2e, 0x53, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x35, 0x2e, 0x69, 0x6f, 0x74, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x69, 0x6e, 0x74, 0x65,
	0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x62, 0x61, 0x6c, 0x65, 0x6e, 0x61, 0x2e, 0x53,
	0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6d, 0x0a, 0x06, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x12, 0x30, 0x2e, 0x69, 0x6f, 0x74, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x69, 0x6e, 0x74,
	0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x62, 0x61, 0x6c, 0x65, 0x6e, 0x61, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x69, 0x6f, 0x74, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x69,
	0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x62, 0x61, 0x6c, 0x65, 0x6e,
	0x61, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6d, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x12, 0x30, 0x2e, 0x69, 0x6f, 0x74, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x69, 0x6e, 0x74, 0x65,
	0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x62, 0x61, 0x6c, 0x65, 0x6e, 0x61, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x31, 0x2e, 0x69, 0x6f, 0x74, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x69, 0x6e,
	0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x62, 0x61, 0x6c, 0x65, 0x6e, 0x61,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0xa2, 0x01, 0x0a, 0x12, 0x42, 0x61, 0x6c, 0x65, 0x6e, 0x61,
	0x54, 0x6f, 0x6f, 0x6c, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x8b, 0x01, 0x0a,
	0x14, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x38, 0x2e, 0x69, 0x6f, 0x74, 0x5f, 0x63, 0x6f, 0x72, 0x65,
	0x5f, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x62, 0x61, 0x6c,
	0x65, 0x6e, 0x61, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x39, 0x2e, 0x69, 0x6f, 0x74, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x67,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x62, 0x61, 0x6c, 0x65, 0x6e, 0x61, 0x2e, 0x56, 0x65,
	0x72, 0x69, 0x66, 0x79, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0xf3, 0x04, 0x0a, 0x14, 0x42,
	0x61, 0x6c, 0x65, 0x6e, 0x61, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x64, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x12, 0x2d, 0x2e, 0x69, 0x6f, 0x74,
	0x5f, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x62, 0x61, 0x6c, 0x65, 0x6e, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x69, 0x6f, 0x74, 0x5f,
	0x63, 0x6f, 0x72, 0x65, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x62, 0x61, 0x6c, 0x65, 0x6e, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x67, 0x0a, 0x04, 0x42, 0x69, 0x6e,
	0x64, 0x12, 0x2e, 0x2e, 0x69, 0x6f, 0x74, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x69, 0x6e, 0x74,
	0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x62, 0x61, 0x6c, 0x65, 0x6e, 0x61, 0x2e,
	0x42, 0x69, 0x6e, 0x64, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2f, 0x2e, 0x69, 0x6f, 0x74, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x69, 0x6e, 0x74,
	0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x62, 0x61, 0x6c, 0x65, 0x6e, 0x61, 0x2e,
	0x42, 0x69, 0x6e, 0x64, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x6d, 0x0a, 0x06, 0x55, 0x6e, 0x42, 0x69, 0x6e, 0x64, 0x12, 0x30, 0x2e, 0x69,
	0x6f, 0x74, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x62, 0x61, 0x6c, 0x65, 0x6e, 0x61, 0x2e, 0x55, 0x6e, 0x42, 0x69, 0x6e,
	0x64, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31,
	0x2e, 0x69, 0x6f, 0x74, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x62, 0x61, 0x6c, 0x65, 0x6e, 0x61, 0x2e, 0x55, 0x6e, 0x42,
	0x69, 0x6e, 0x64, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x8c, 0x01, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x4e, 0x61, 0x6d, 0x65,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x3a, 0x2e, 0x69, 0x6f, 0x74, 0x5f, 0x63, 0x6f, 0x72, 0x65,
	0x5f, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x62, 0x61, 0x6c,
	0x65, 0x6e, 0x61, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x49,
	0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x3b, 0x2e, 0x69, 0x6f, 0x74, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x69, 0x6e, 0x74,
	0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x62, 0x61, 0x6c, 0x65, 0x6e, 0x61, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x49, 0x6e, 0x4e, 0x61, 0x6d,
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x30, 0x01,
	0x12, 0x8d, 0x01, 0x0a, 0x10, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x4e, 0x61, 0x6d, 0x65,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x3b, 0x2e, 0x69, 0x6f, 0x74, 0x5f, 0x63, 0x6f, 0x72, 0x65,
	0x5f, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x62, 0x61, 0x6c,
	0x65, 0x6e, 0x61, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x49, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x3c, 0x2e, 0x69, 0x6f, 0x74, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x69, 0x6e,
	0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x62, 0x61, 0x6c, 0x65, 0x6e, 0x61,
	0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x49, 0x6e, 0x4e,
	0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x32, 0xd5, 0x03, 0x0a, 0x11, 0x42, 0x61, 0x6c, 0x65, 0x6e, 0x61, 0x53, 0x79, 0x6e, 0x63, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x64, 0x0a, 0x07, 0x53, 0x79, 0x6e, 0x63, 0x4e, 0x6f,
	0x77, 0x12, 0x2b, 0x2e, 0x69, 0x6f, 0x74, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x69, 0x6e, 0x74,
	0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x62, 0x61, 0x6c, 0x65, 0x6e, 0x61, 0x2e,
	0x53, 0x79, 0x6e, 0x63, 0x4e, 0x6f, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c,
	0x2e, 0x69, 0x6f, 0x74, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x62, 0x61, 0x6c, 0x65, 0x6e, 0x61, 0x2e, 0x53, 0x79, 0x6e,
	0x63, 0x4e, 0x6f, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6e, 0x0a, 0x07,
	0x4c, 0x69, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x12, 0x2f, 0x2e, 0x69, 0x6f, 0x74, 0x5f, 0x63, 0x6f,
	0x72, 0x65, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x62,
	0x61, 0x6c, 0x65, 0x6e, 0x61, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x79, 0x6e, 0x63, 0x4c, 0x6f,
	0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x69, 0x6f, 0x74, 0x5f, 0x63,
	0x6f, 0x72, 0x65, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x62, 0x61, 0x6c, 0x65, 0x6e, 0x61, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x79, 0x6e, 0x63, 0x4c,
	0x6f, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x30, 0x01, 0x12, 0x6f, 0x0a, 0x08,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x6f, 0x67, 0x12, 0x30, 0x2e, 0x69, 0x6f, 0x74, 0x5f, 0x63,
	0x6f, 0x72, 0x65, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x62, 0x61, 0x6c, 0x65, 0x6e, 0x61, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x79, 0x6e, 0x63,
	0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x69, 0x6f, 0x74,
	0x5f, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x62, 0x61, 0x6c, 0x65, 0x6e, 0x61, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x79,
	0x6e, 0x63, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x79, 0x0a,
	0x0e, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x73, 0x74, 0x53, 0x79, 0x6e, 0x63, 0x4c, 0x6f, 0x67, 0x12,
	0x32, 0x2e, 0x69, 0x6f, 0x74, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x67,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x62, 0x61, 0x6c, 0x65, 0x6e, 0x61, 0x2e, 0x47, 0x65,
	0x74, 0x4c, 0x61, 0x73, 0x74, 0x53, 0x79, 0x6e, 0x63, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e, 0x69, 0x6f, 0x74, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x69,
	0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x62, 0x61, 0x6c, 0x65, 0x6e,
	0x61, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x73, 0x74, 0x53, 0x79, 0x6e, 0x63, 0x4c, 0x6f, 0x67,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x5a, 0x5a, 0x58, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x6c, 0x61, 0x6d, 0x79, 0x2d, 0x73, 0x6f, 0x6c,
	0x75, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x6f, 0x70, 0x65, 0x6e, 0x62, 0x70, 0x2f, 0x6d, 0x6f,
	0x64, 0x75, 0x6c, 0x65, 0x73, 0x2f, 0x69, 0x6f, 0x74, 0x2f, 0x6c, 0x69, 0x62, 0x73, 0x2f, 0x67,
	0x6f, 0x6c, 0x61, 0x6e, 0x67, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x67,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x62, 0x61, 0x6c, 0x65, 0x6e, 0x61, 0x3b, 0x62, 0x61,
	0x6c, 0x65, 0x6e, 0x61, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_balena_proto_rawDescOnce sync.Once
	file_balena_proto_rawDescData = file_balena_proto_rawDesc
)

func file_balena_proto_rawDescGZIP() []byte {
	file_balena_proto_rawDescOnce.Do(func() {
		file_balena_proto_rawDescData = protoimpl.X.CompressGZIP(file_balena_proto_rawDescData)
	})
	return file_balena_proto_rawDescData
}

var file_balena_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_balena_proto_msgTypes = make([]protoimpl.MessageInfo, 43)
var file_balena_proto_goTypes = []interface{}{
	(SyncLogEntry_Status)(0),                          // 0: iot_core_integration_balena.SyncLogEntry.Status
	(VerifyConnectionDataResponse_Status)(0),          // 1: iot_core_integration_balena.VerifyConnectionDataResponse.Status
	(ListDevicesInNamespaceRequest_BindingFilter)(0),  // 2: iot_core_integration_balena.ListDevicesInNamespaceRequest.BindingFilter
	(CountDevicesInNamespaceRequest_BindingFilter)(0), // 3: iot_core_integration_balena.CountDevicesInNamespaceRequest.BindingFilter
	(*BalenaServer)(nil),                              // 4: iot_core_integration_balena.BalenaServer
	(*BalenaData)(nil),                                // 5: iot_core_integration_balena.BalenaData
	(*BalenaDevice)(nil),                              // 6: iot_core_integration_balena.BalenaDevice
	(*SyncLogEntry)(nil),                              // 7: iot_core_integration_balena.SyncLogEntry
	(*CreateServerRequest)(nil),                       // 8: iot_core_integration_balena.CreateServerRequest
	(*CreateServerResponse)(nil),                      // 9: iot_core_integration_balena.CreateServerResponse
	(*GetServerRequest)(nil),                          // 10: iot_core_integration_balena.GetServerRequest
	(*GetServerResponse)(nil),                         // 11: iot_core_integration_balena.GetServerResponse
	(*ListServersRequest)(nil),                        // 12: iot_core_integration_balena.ListServersRequest
	(*ListServersResponse)(nil),                       // 13: iot_core_integration_balena.ListServersResponse
	(*CountServersRequest)(nil),                       // 14: iot_core_integration_balena.CountServersRequest
	(*CountServersResponse)(nil),                      // 15: iot_core_integration_balena.CountServersResponse
	(*ListServersInNamespaceRequest)(nil),             // 16: iot_core_integration_balena.ListServersInNamespaceRequest
	(*ListServersInNamespaceResponse)(nil),            // 17: iot_core_integration_balena.ListServersInNamespaceResponse
	(*CountServersInNamespaceRequest)(nil),            // 18: iot_core_integration_balena.CountServersInNamespaceRequest
	(*CountServersInNamespaceResponse)(nil),           // 19: iot_core_integration_balena.CountServersInNamespaceResponse
	(*SetServerEnabledRequest)(nil),                   // 20: iot_core_integration_balena.SetServerEnabledRequest
	(*SetServerEnabledResponse)(nil),                  // 21: iot_core_integration_balena.SetServerEnabledResponse
	(*UpdateServerRequest)(nil),                       // 22: iot_core_integration_balena.UpdateServerRequest
	(*UpdateServerResponse)(nil),                      // 23: iot_core_integration_balena.UpdateServerResponse
	(*DeleteServerRequest)(nil),                       // 24: iot_core_integration_balena.DeleteServerRequest
	(*DeleteServerResponse)(nil),                      // 25: iot_core_integration_balena.DeleteServerResponse
	(*VerifyConnectionDataRequest)(nil),               // 26: iot_core_integration_balena.VerifyConnectionDataRequest
	(*VerifyConnectionDataResponse)(nil),              // 27: iot_core_integration_balena.VerifyConnectionDataResponse
	(*GetDeviceRequest)(nil),                          // 28: iot_core_integration_balena.GetDeviceRequest
	(*GetDeviceResponse)(nil),                         // 29: iot_core_integration_balena.GetDeviceResponse
	(*BindDeviceRequest)(nil),                         // 30: iot_core_integration_balena.BindDeviceRequest
	(*BindDeviceResponse)(nil),                        // 31: iot_core_integration_balena.BindDeviceResponse
	(*UnBindDeviceRequest)(nil),                       // 32: iot_core_integration_balena.UnBindDeviceRequest
	(*UnBindDeviceResponse)(nil),                      // 33: iot_core_integration_balena.UnBindDeviceResponse
	(*ListDevicesInNamespaceRequest)(nil),             // 34: iot_core_integration_balena.ListDevicesInNamespaceRequest
	(*ListDevicesInNamespaceResponse)(nil),            // 35: iot_core_integration_balena.ListDevicesInNamespaceResponse
	(*CountDevicesInNamespaceRequest)(nil),            // 36: iot_core_integration_balena.CountDevicesInNamespaceRequest
	(*CountDevicesInNamespaceResponse)(nil),           // 37: iot_core_integration_balena.CountDevicesInNamespaceResponse
	(*SyncNowRequest)(nil),                            // 38: iot_core_integration_balena.SyncNowRequest
	(*SyncNowResponse)(nil),                           // 39: iot_core_integration_balena.SyncNowResponse
	(*ListSyncLogRequest)(nil),                        // 40: iot_core_integration_balena.ListSyncLogRequest
	(*ListSyncLogResponse)(nil),                       // 41: iot_core_integration_balena.ListSyncLogResponse
	(*CountSyncLogRequest)(nil),                       // 42: iot_core_integration_balena.CountSyncLogRequest
	(*CountSyncLogResponse)(nil),                      // 43: iot_core_integration_balena.CountSyncLogResponse
	(*GetLastSyncLogRequest)(nil),                     // 44: iot_core_integration_balena.GetLastSyncLogRequest
	(*GetLastSyncLogResponse)(nil),                    // 45: iot_core_integration_balena.GetLastSyncLogResponse
	(*SyncLogEntry_Stats)(nil),                        // 46: iot_core_integration_balena.SyncLogEntry.Stats
	(*timestamp.Timestamp)(nil),                       // 47: google.protobuf.Timestamp
}
var file_balena_proto_depIdxs = []int32{
	47, // 0: iot_core_integration_balena.BalenaServer.created:type_name -> google.protobuf.Timestamp
	47, // 1: iot_core_integration_balena.BalenaServer.updated:type_name -> google.protobuf.Timestamp
	47, // 2: iot_core_integration_balena.BalenaData.lastConnectivityEvent:type_name -> google.protobuf.Timestamp
	5,  // 3: iot_core_integration_balena.BalenaDevice.balenaData:type_name -> iot_core_integration_balena.BalenaData
	47, // 4: iot_core_integration_balena.BalenaDevice.created:type_name -> google.protobuf.Timestamp
	47, // 5: iot_core_integration_balena.BalenaDevice.updated:type_name -> google.protobuf.Timestamp
	47, // 6: iot_core_integration_balena.SyncLogEntry.timestamp:type_name -> google.protobuf.Timestamp
	0,  // 7: iot_core_integration_balena.SyncLogEntry.status:type_name -> iot_core_integration_balena.SyncLogEntry.Status
	46, // 8: iot_core_integration_balena.SyncLogEntry.stats:type_name -> iot_core_integration_balena.SyncLogEntry.Stats
	4,  // 9: iot_core_integration_balena.CreateServerResponse.server:type_name -> iot_core_integration_balena.BalenaServer
	4,  // 10: iot_core_integration_balena.GetServerResponse.server:type_name -> iot_core_integration_balena.BalenaServer
	4,  // 11: iot_core_integration_balena.ListServersResponse.server:type_name -> iot_core_integration_balena.BalenaServer
	4,  // 12: iot_core_integration_balena.ListServersInNamespaceResponse.server:type_name -> iot_core_integration_balena.BalenaServer
	4,  // 13: iot_core_integration_balena.SetServerEnabledResponse.server:type_name -> iot_core_integration_balena.BalenaServer
	4,  // 14: iot_core_integration_balena.UpdateServerResponse.server:type_name -> iot_core_integration_balena.BalenaServer
	1,  // 15: iot_core_integration_balena.VerifyConnectionDataResponse.status:type_name -> iot_core_integration_balena.VerifyConnectionDataResponse.Status
	6,  // 16: iot_core_integration_balena.GetDeviceResponse.device:type_name -> iot_core_integration_balena.BalenaDevice
	6,  // 17: iot_core_integration_balena.BindDeviceResponse.device:type_name -> iot_core_integration_balena.BalenaDevice
	6,  // 18: iot_core_integration_balena.UnBindDeviceResponse.device:type_name -> iot_core_integration_balena.BalenaDevice
	2,  // 19: iot_core_integration_balena.ListDevicesInNamespaceRequest.bindingFilter:type_name -> iot_core_integration_balena.ListDevicesInNamespaceRequest.BindingFilter
	6,  // 20: iot_core_integration_balena.ListDevicesInNamespaceResponse.device:type_name -> iot_core_integration_balena.BalenaDevice
	3,  // 21: iot_core_integration_balena.CountDevicesInNamespaceRequest.bindingFilter:type_name -> iot_core_integration_balena.CountDevicesInNamespaceRequest.BindingFilter
	7,  // 22: iot_core_integration_balena.SyncNowResponse.log:type_name -> iot_core_integration_balena.SyncLogEntry
	7,  // 23: iot_core_integration_balena.ListSyncLogResponse.log:type_name -> iot_core_integration_balena.SyncLogEntry
	7,  // 24: iot_core_integration_balena.GetLastSyncLogResponse.log:type_name -> iot_core_integration_balena.SyncLogEntry
	8,  // 25: iot_core_integration_balena.BalenaServersService.Create:input_type -> iot_core_integration_balena.CreateServerRequest
	10, // 26: iot_core_integration_balena.BalenaServersService.Get:input_type -> iot_core_integration_balena.GetServerRequest
	12, // 27: iot_core_integration_balena.BalenaServersService.List:input_type -> iot_core_integration_balena.ListServersRequest
	14, // 28: iot_core_integration_balena.BalenaServersService.Count:input_type -> iot_core_integration_balena.CountServersRequest
	16, // 29: iot_core_integration_balena.BalenaServersService.ListInNamespace:input_type -> iot_core_integration_balena.ListServersInNamespaceRequest
	18, // 30: iot_core_integration_balena.BalenaServersService.CountInNamespace:input_type -> iot_core_integration_balena.CountServersInNamespaceRequest
	20, // 31: iot_core_integration_balena.BalenaServersService.SetEnabled:input_type -> iot_core_integration_balena.SetServerEnabledRequest
	22, // 32: iot_core_integration_balena.BalenaServersService.Update:input_type -> iot_core_integration_balena.UpdateServerRequest
	24, // 33: iot_core_integration_balena.BalenaServersService.Delete:input_type -> iot_core_integration_balena.DeleteServerRequest
	26, // 34: iot_core_integration_balena.BalenaToolsService.VerifyConnectionData:input_type -> iot_core_integration_balena.VerifyConnectionDataRequest
	28, // 35: iot_core_integration_balena.BalenaDevicesService.Get:input_type -> iot_core_integration_balena.GetDeviceRequest
	30, // 36: iot_core_integration_balena.BalenaDevicesService.Bind:input_type -> iot_core_integration_balena.BindDeviceRequest
	32, // 37: iot_core_integration_balena.BalenaDevicesService.UnBind:input_type -> iot_core_integration_balena.UnBindDeviceRequest
	34, // 38: iot_core_integration_balena.BalenaDevicesService.ListInNamespace:input_type -> iot_core_integration_balena.ListDevicesInNamespaceRequest
	36, // 39: iot_core_integration_balena.BalenaDevicesService.CountInNamespace:input_type -> iot_core_integration_balena.CountDevicesInNamespaceRequest
	38, // 40: iot_core_integration_balena.BalenaSyncService.SyncNow:input_type -> iot_core_integration_balena.SyncNowRequest
	40, // 41: iot_core_integration_balena.BalenaSyncService.ListLog:input_type -> iot_core_integration_balena.ListSyncLogRequest
	42, // 42: iot_core_integration_balena.BalenaSyncService.CountLog:input_type -> iot_core_integration_balena.CountSyncLogRequest
	44, // 43: iot_core_integration_balena.BalenaSyncService.GetLastSyncLog:input_type -> iot_core_integration_balena.GetLastSyncLogRequest
	9,  // 44: iot_core_integration_balena.BalenaServersService.Create:output_type -> iot_core_integration_balena.CreateServerResponse
	11, // 45: iot_core_integration_balena.BalenaServersService.Get:output_type -> iot_core_integration_balena.GetServerResponse
	13, // 46: iot_core_integration_balena.BalenaServersService.List:output_type -> iot_core_integration_balena.ListServersResponse
	15, // 47: iot_core_integration_balena.BalenaServersService.Count:output_type -> iot_core_integration_balena.CountServersResponse
	17, // 48: iot_core_integration_balena.BalenaServersService.ListInNamespace:output_type -> iot_core_integration_balena.ListServersInNamespaceResponse
	19, // 49: iot_core_integration_balena.BalenaServersService.CountInNamespace:output_type -> iot_core_integration_balena.CountServersInNamespaceResponse
	21, // 50: iot_core_integration_balena.BalenaServersService.SetEnabled:output_type -> iot_core_integration_balena.SetServerEnabledResponse
	23, // 51: iot_core_integration_balena.BalenaServersService.Update:output_type -> iot_core_integration_balena.UpdateServerResponse
	25, // 52: iot_core_integration_balena.BalenaServersService.Delete:output_type -> iot_core_integration_balena.DeleteServerResponse
	27, // 53: iot_core_integration_balena.BalenaToolsService.VerifyConnectionData:output_type -> iot_core_integration_balena.VerifyConnectionDataResponse
	29, // 54: iot_core_integration_balena.BalenaDevicesService.Get:output_type -> iot_core_integration_balena.GetDeviceResponse
	31, // 55: iot_core_integration_balena.BalenaDevicesService.Bind:output_type -> iot_core_integration_balena.BindDeviceResponse
	33, // 56: iot_core_integration_balena.BalenaDevicesService.UnBind:output_type -> iot_core_integration_balena.UnBindDeviceResponse
	35, // 57: iot_core_integration_balena.BalenaDevicesService.ListInNamespace:output_type -> iot_core_integration_balena.ListDevicesInNamespaceResponse
	37, // 58: iot_core_integration_balena.BalenaDevicesService.CountInNamespace:output_type -> iot_core_integration_balena.CountDevicesInNamespaceResponse
	39, // 59: iot_core_integration_balena.BalenaSyncService.SyncNow:output_type -> iot_core_integration_balena.SyncNowResponse
	41, // 60: iot_core_integration_balena.BalenaSyncService.ListLog:output_type -> iot_core_integration_balena.ListSyncLogResponse
	43, // 61: iot_core_integration_balena.BalenaSyncService.CountLog:output_type -> iot_core_integration_balena.CountSyncLogResponse
	45, // 62: iot_core_integration_balena.BalenaSyncService.GetLastSyncLog:output_type -> iot_core_integration_balena.GetLastSyncLogResponse
	44, // [44:63] is the sub-list for method output_type
	25, // [25:44] is the sub-list for method input_type
	25, // [25:25] is the sub-list for extension type_name
	25, // [25:25] is the sub-list for extension extendee
	0,  // [0:25] is the sub-list for field type_name
}

func init() { file_balena_proto_init() }
func file_balena_proto_init() {
	if File_balena_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_balena_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BalenaServer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_balena_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BalenaData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_balena_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BalenaDevice); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_balena_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncLogEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_balena_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateServerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_balena_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateServerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_balena_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetServerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_balena_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetServerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_balena_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListServersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_balena_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListServersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_balena_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountServersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_balena_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountServersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_balena_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListServersInNamespaceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_balena_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListServersInNamespaceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_balena_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountServersInNamespaceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_balena_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountServersInNamespaceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_balena_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetServerEnabledRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_balena_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetServerEnabledResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_balena_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateServerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_balena_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateServerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_balena_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteServerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_balena_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteServerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_balena_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VerifyConnectionDataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_balena_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VerifyConnectionDataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_balena_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDeviceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_balena_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDeviceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_balena_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BindDeviceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_balena_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BindDeviceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_balena_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnBindDeviceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_balena_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnBindDeviceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_balena_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDevicesInNamespaceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_balena_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDevicesInNamespaceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_balena_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountDevicesInNamespaceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_balena_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountDevicesInNamespaceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_balena_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncNowRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_balena_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncNowResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_balena_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSyncLogRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_balena_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSyncLogResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_balena_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountSyncLogRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_balena_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountSyncLogResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_balena_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLastSyncLogRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_balena_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLastSyncLogResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_balena_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncLogEntry_Stats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_balena_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   43,
			NumExtensions: 0,
			NumServices:   4,
		},
		GoTypes:           file_balena_proto_goTypes,
		DependencyIndexes: file_balena_proto_depIdxs,
		EnumInfos:         file_balena_proto_enumTypes,
		MessageInfos:      file_balena_proto_msgTypes,
	}.Build()
	File_balena_proto = out.File
	file_balena_proto_rawDesc = nil
	file_balena_proto_goTypes = nil
	file_balena_proto_depIdxs = nil
}
