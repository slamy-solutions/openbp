// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.12.4
// source: identity.proto

package identity

import (
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Empty information to indicate that management for this identity is not defined.
type NotManagedData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *NotManagedData) Reset() {
	*x = NotManagedData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_identity_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotManagedData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotManagedData) ProtoMessage() {}

func (x *NotManagedData) ProtoReflect() protoreflect.Message {
	mi := &file_identity_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotManagedData.ProtoReflect.Descriptor instead.
func (*NotManagedData) Descriptor() ([]byte, []int) {
	return file_identity_proto_rawDescGZIP(), []int{0}
}

// Information about other identity that manages this identity
type IdentityManagedData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Namespace where identity is located
	IdentityNamespace string `protobuf:"bytes,1,opt,name=identityNamespace,proto3" json:"identityNamespace,omitempty"`
	// Identity UUID inside this namespace
	IdentityUUID string `protobuf:"bytes,2,opt,name=identityUUID,proto3" json:"identityUUID,omitempty"`
}

func (x *IdentityManagedData) Reset() {
	*x = IdentityManagedData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_identity_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IdentityManagedData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IdentityManagedData) ProtoMessage() {}

func (x *IdentityManagedData) ProtoReflect() protoreflect.Message {
	mi := &file_identity_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IdentityManagedData.ProtoReflect.Descriptor instead.
func (*IdentityManagedData) Descriptor() ([]byte, []int) {
	return file_identity_proto_rawDescGZIP(), []int{1}
}

func (x *IdentityManagedData) GetIdentityNamespace() string {
	if x != nil {
		return x.IdentityNamespace
	}
	return ""
}

func (x *IdentityManagedData) GetIdentityUUID() string {
	if x != nil {
		return x.IdentityUUID
	}
	return ""
}

// Handles information about the service that manages this identity
type ServiceManagedData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Name of the service
	Service string `protobuf:"bytes,1,opt,name=service,proto3" json:"service,omitempty"`
	// Reason why this service created this identity
	Reason string `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
	// This is an ID that can be defined by managed service to find this identity. Set to empty string if you dont need this. If this is not empty Service+ID combination is unique.
	ManagementId string `protobuf:"bytes,3,opt,name=managementId,proto3" json:"managementId,omitempty"`
}

func (x *ServiceManagedData) Reset() {
	*x = ServiceManagedData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_identity_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceManagedData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceManagedData) ProtoMessage() {}

func (x *ServiceManagedData) ProtoReflect() protoreflect.Message {
	mi := &file_identity_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceManagedData.ProtoReflect.Descriptor instead.
func (*ServiceManagedData) Descriptor() ([]byte, []int) {
	return file_identity_proto_rawDescGZIP(), []int{2}
}

func (x *ServiceManagedData) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

func (x *ServiceManagedData) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *ServiceManagedData) GetManagementId() string {
	if x != nil {
		return x.ManagementId
	}
	return ""
}

type Identity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Namespaces of the identity. Can be empty for global identities.
	Namespace string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	// Unique identity identifier
	Uuid string `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
	// Public identity name
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	// If identity is not active, it will not be able to login and perform any actions.
	Active bool `protobuf:"varint,4,opt,name=active,proto3" json:"active,omitempty"`
	//
	//Indicates if this identity is managed by someone else.
	//
	//This is only a flag to inform everyone that it is managed by third party actor and
	//manual interaction with this identity may result in big problems. In order to interact with the identity,
	//you should ask someone who manages this identity to do something for you.
	//
	//There are several possible managements:
	//NotManaged* - there is no clear actor responsible for this identity
	//Identity* - this identity was created by other identity. This other identity is responsible for it
	//Service* - this identity was create by one of the services. This services now manages this identity.
	//
	// Types that are assignable to Managed:
	//	*Identity_No
	//	*Identity_Identity
	//	*Identity_Service
	Managed isIdentity_Managed `protobuf_oneof:"managed"`
	// Security policies assigned to the identity
	Policies []*Identity_PolicyReference `protobuf:"bytes,5,rep,name=policies,proto3" json:"policies,omitempty"`
	// Security roles assigned to the identity
	Roles []*Identity_RoleReference `protobuf:"bytes,6,rep,name=roles,proto3" json:"roles,omitempty"`
	// When the policy was created
	Created *timestamp.Timestamp `protobuf:"bytes,9,opt,name=created,proto3" json:"created,omitempty"`
	// Last time when the policy information was updated.
	Updated *timestamp.Timestamp `protobuf:"bytes,10,opt,name=updated,proto3" json:"updated,omitempty"`
	// Counter that increases after every update of the policy
	Version uint64 `protobuf:"varint,11,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *Identity) Reset() {
	*x = Identity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_identity_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Identity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Identity) ProtoMessage() {}

func (x *Identity) ProtoReflect() protoreflect.Message {
	mi := &file_identity_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Identity.ProtoReflect.Descriptor instead.
func (*Identity) Descriptor() ([]byte, []int) {
	return file_identity_proto_rawDescGZIP(), []int{3}
}

func (x *Identity) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *Identity) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *Identity) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Identity) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

func (m *Identity) GetManaged() isIdentity_Managed {
	if m != nil {
		return m.Managed
	}
	return nil
}

func (x *Identity) GetNo() *NotManagedData {
	if x, ok := x.GetManaged().(*Identity_No); ok {
		return x.No
	}
	return nil
}

func (x *Identity) GetIdentity() *IdentityManagedData {
	if x, ok := x.GetManaged().(*Identity_Identity); ok {
		return x.Identity
	}
	return nil
}

func (x *Identity) GetService() *ServiceManagedData {
	if x, ok := x.GetManaged().(*Identity_Service); ok {
		return x.Service
	}
	return nil
}

func (x *Identity) GetPolicies() []*Identity_PolicyReference {
	if x != nil {
		return x.Policies
	}
	return nil
}

func (x *Identity) GetRoles() []*Identity_RoleReference {
	if x != nil {
		return x.Roles
	}
	return nil
}

func (x *Identity) GetCreated() *timestamp.Timestamp {
	if x != nil {
		return x.Created
	}
	return nil
}

func (x *Identity) GetUpdated() *timestamp.Timestamp {
	if x != nil {
		return x.Updated
	}
	return nil
}

func (x *Identity) GetVersion() uint64 {
	if x != nil {
		return x.Version
	}
	return 0
}

type isIdentity_Managed interface {
	isIdentity_Managed()
}

type Identity_No struct {
	// Identity is not managed
	No *NotManagedData `protobuf:"bytes,20,opt,name=no,proto3,oneof"`
}

type Identity_Identity struct {
	// Identity is managed by other identity
	Identity *IdentityManagedData `protobuf:"bytes,21,opt,name=identity,proto3,oneof"`
}

type Identity_Service struct {
	// Identity is managed by service
	Service *ServiceManagedData `protobuf:"bytes,22,opt,name=service,proto3,oneof"`
}

func (*Identity_No) isIdentity_Managed() {}

func (*Identity_Identity) isIdentity_Managed() {}

func (*Identity_Service) isIdentity_Managed() {}

type CreateIdentityRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Namespace where to create identity
	Namespace string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	// Public name for newly created identity. It may not be unique - this is just human-readable name.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Should the identity be active on the start or not
	InitiallyActive bool `protobuf:"varint,3,opt,name=initiallyActive,proto3" json:"initiallyActive,omitempty"`
	//
	//Indicates if this identity is managed by someone else.
	//
	//This is only a flag to inform everyone that it is managed by third party actor and
	//manual interaction with this identity may result in big problems. In order to interact with the identity,
	//you should ask someone who manages this identity to do something for you.
	//
	//There are several possible managements:
	//NotManaged* - there is no clear actor responsible for this identity
	//Identity* - this identity was created by other identity. This other identity is responsible for it
	//Service* - this identity was create by one of the services. This services now manages this identity.
	//
	// Types that are assignable to Managed:
	//	*CreateIdentityRequest_No
	//	*CreateIdentityRequest_Identity
	//	*CreateIdentityRequest_Service
	Managed isCreateIdentityRequest_Managed `protobuf_oneof:"managed"`
}

func (x *CreateIdentityRequest) Reset() {
	*x = CreateIdentityRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_identity_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateIdentityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateIdentityRequest) ProtoMessage() {}

func (x *CreateIdentityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_identity_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateIdentityRequest.ProtoReflect.Descriptor instead.
func (*CreateIdentityRequest) Descriptor() ([]byte, []int) {
	return file_identity_proto_rawDescGZIP(), []int{4}
}

func (x *CreateIdentityRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *CreateIdentityRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateIdentityRequest) GetInitiallyActive() bool {
	if x != nil {
		return x.InitiallyActive
	}
	return false
}

func (m *CreateIdentityRequest) GetManaged() isCreateIdentityRequest_Managed {
	if m != nil {
		return m.Managed
	}
	return nil
}

func (x *CreateIdentityRequest) GetNo() *NotManagedData {
	if x, ok := x.GetManaged().(*CreateIdentityRequest_No); ok {
		return x.No
	}
	return nil
}

func (x *CreateIdentityRequest) GetIdentity() *IdentityManagedData {
	if x, ok := x.GetManaged().(*CreateIdentityRequest_Identity); ok {
		return x.Identity
	}
	return nil
}

func (x *CreateIdentityRequest) GetService() *ServiceManagedData {
	if x, ok := x.GetManaged().(*CreateIdentityRequest_Service); ok {
		return x.Service
	}
	return nil
}

type isCreateIdentityRequest_Managed interface {
	isCreateIdentityRequest_Managed()
}

type CreateIdentityRequest_No struct {
	// Identity is not managed
	No *NotManagedData `protobuf:"bytes,20,opt,name=no,proto3,oneof"`
}

type CreateIdentityRequest_Identity struct {
	// Identity is managed by other identity
	Identity *IdentityManagedData `protobuf:"bytes,21,opt,name=identity,proto3,oneof"`
}

type CreateIdentityRequest_Service struct {
	// Identity is managed by service
	Service *ServiceManagedData `protobuf:"bytes,22,opt,name=service,proto3,oneof"`
}

func (*CreateIdentityRequest_No) isCreateIdentityRequest_Managed() {}

func (*CreateIdentityRequest_Identity) isCreateIdentityRequest_Managed() {}

func (*CreateIdentityRequest_Service) isCreateIdentityRequest_Managed() {}

type CreateIdentityResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Created identity
	Identity *Identity `protobuf:"bytes,1,opt,name=identity,proto3" json:"identity,omitempty"`
}

func (x *CreateIdentityResponse) Reset() {
	*x = CreateIdentityResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_identity_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateIdentityResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateIdentityResponse) ProtoMessage() {}

func (x *CreateIdentityResponse) ProtoReflect() protoreflect.Message {
	mi := &file_identity_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateIdentityResponse.ProtoReflect.Descriptor instead.
func (*CreateIdentityResponse) Descriptor() ([]byte, []int) {
	return file_identity_proto_rawDescGZIP(), []int{5}
}

func (x *CreateIdentityResponse) GetIdentity() *Identity {
	if x != nil {
		return x.Identity
	}
	return nil
}

type GetIdentityRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Identity namespace
	Namespace string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	// Identity unique identifier inside namespace
	Uuid string `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
	// Use cache or not. Cache may not be valid under very rare conditions (simultaniour read and writes). Cache automatically clears after short period of time (30 seconds by default).
	UseCache bool `protobuf:"varint,3,opt,name=useCache,proto3" json:"useCache,omitempty"`
}

func (x *GetIdentityRequest) Reset() {
	*x = GetIdentityRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_identity_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetIdentityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetIdentityRequest) ProtoMessage() {}

func (x *GetIdentityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_identity_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetIdentityRequest.ProtoReflect.Descriptor instead.
func (*GetIdentityRequest) Descriptor() ([]byte, []int) {
	return file_identity_proto_rawDescGZIP(), []int{6}
}

func (x *GetIdentityRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *GetIdentityRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *GetIdentityRequest) GetUseCache() bool {
	if x != nil {
		return x.UseCache
	}
	return false
}

type GetIdentityResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Identity information
	Identity *Identity `protobuf:"bytes,1,opt,name=identity,proto3" json:"identity,omitempty"`
}

func (x *GetIdentityResponse) Reset() {
	*x = GetIdentityResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_identity_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetIdentityResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetIdentityResponse) ProtoMessage() {}

func (x *GetIdentityResponse) ProtoReflect() protoreflect.Message {
	mi := &file_identity_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetIdentityResponse.ProtoReflect.Descriptor instead.
func (*GetIdentityResponse) Descriptor() ([]byte, []int) {
	return file_identity_proto_rawDescGZIP(), []int{7}
}

func (x *GetIdentityResponse) GetIdentity() *Identity {
	if x != nil {
		return x.Identity
	}
	return nil
}

type DeleteIdentityRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Identity namespace
	Namespace string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	// Identity unique identifier inside namespace
	Uuid string `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
}

func (x *DeleteIdentityRequest) Reset() {
	*x = DeleteIdentityRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_identity_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteIdentityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteIdentityRequest) ProtoMessage() {}

func (x *DeleteIdentityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_identity_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteIdentityRequest.ProtoReflect.Descriptor instead.
func (*DeleteIdentityRequest) Descriptor() ([]byte, []int) {
	return file_identity_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteIdentityRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *DeleteIdentityRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

type DeleteIdentityResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Indicates if identity existed before request or it was already deleted earlier
	Existed bool `protobuf:"varint,1,opt,name=existed,proto3" json:"existed,omitempty"`
}

func (x *DeleteIdentityResponse) Reset() {
	*x = DeleteIdentityResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_identity_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteIdentityResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteIdentityResponse) ProtoMessage() {}

func (x *DeleteIdentityResponse) ProtoReflect() protoreflect.Message {
	mi := &file_identity_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteIdentityResponse.ProtoReflect.Descriptor instead.
func (*DeleteIdentityResponse) Descriptor() ([]byte, []int) {
	return file_identity_proto_rawDescGZIP(), []int{9}
}

func (x *DeleteIdentityResponse) GetExisted() bool {
	if x != nil {
		return x.Existed
	}
	return false
}

type ExistsIdentityRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Identity namespace
	Namespace string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	// Identity unique identifier inside namespace
	Uuid string `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
	// Use cache or not. Cache may not be valid under very rare conditions (simultaniour read and writes). Cache automatically clears after short period of time (30 seconds by default).
	UseCache bool `protobuf:"varint,3,opt,name=useCache,proto3" json:"useCache,omitempty"`
}

func (x *ExistsIdentityRequest) Reset() {
	*x = ExistsIdentityRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_identity_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExistsIdentityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExistsIdentityRequest) ProtoMessage() {}

func (x *ExistsIdentityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_identity_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExistsIdentityRequest.ProtoReflect.Descriptor instead.
func (*ExistsIdentityRequest) Descriptor() ([]byte, []int) {
	return file_identity_proto_rawDescGZIP(), []int{10}
}

func (x *ExistsIdentityRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *ExistsIdentityRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *ExistsIdentityRequest) GetUseCache() bool {
	if x != nil {
		return x.UseCache
	}
	return false
}

type ExistsIdentityResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// True if identity exists, false if not
	Exists bool `protobuf:"varint,1,opt,name=exists,proto3" json:"exists,omitempty"`
}

func (x *ExistsIdentityResponse) Reset() {
	*x = ExistsIdentityResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_identity_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExistsIdentityResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExistsIdentityResponse) ProtoMessage() {}

func (x *ExistsIdentityResponse) ProtoReflect() protoreflect.Message {
	mi := &file_identity_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExistsIdentityResponse.ProtoReflect.Descriptor instead.
func (*ExistsIdentityResponse) Descriptor() ([]byte, []int) {
	return file_identity_proto_rawDescGZIP(), []int{11}
}

func (x *ExistsIdentityResponse) GetExists() bool {
	if x != nil {
		return x.Exists
	}
	return false
}

type GetServiceManagedIdentityRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Namespace where to search for identity
	Namespace string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	// Service which manages this identity
	Service string `protobuf:"bytes,2,opt,name=service,proto3" json:"service,omitempty"`
	// Special ID for this identity defined by this service
	ManagedId string `protobuf:"bytes,3,opt,name=managedId,proto3" json:"managedId,omitempty"`
	// Use cache or not. Cache may not be valid under very rare conditions (simultaniour read and writes). Cache automatically clears after short period of time (30 seconds by default).
	UseCache bool `protobuf:"varint,4,opt,name=useCache,proto3" json:"useCache,omitempty"`
}

func (x *GetServiceManagedIdentityRequest) Reset() {
	*x = GetServiceManagedIdentityRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_identity_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetServiceManagedIdentityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServiceManagedIdentityRequest) ProtoMessage() {}

func (x *GetServiceManagedIdentityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_identity_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServiceManagedIdentityRequest.ProtoReflect.Descriptor instead.
func (*GetServiceManagedIdentityRequest) Descriptor() ([]byte, []int) {
	return file_identity_proto_rawDescGZIP(), []int{12}
}

func (x *GetServiceManagedIdentityRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *GetServiceManagedIdentityRequest) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

func (x *GetServiceManagedIdentityRequest) GetManagedId() string {
	if x != nil {
		return x.ManagedId
	}
	return ""
}

func (x *GetServiceManagedIdentityRequest) GetUseCache() bool {
	if x != nil {
		return x.UseCache
	}
	return false
}

type GetServiceManagedIdentityResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Founded identity
	Identity *Identity `protobuf:"bytes,1,opt,name=identity,proto3" json:"identity,omitempty"`
}

func (x *GetServiceManagedIdentityResponse) Reset() {
	*x = GetServiceManagedIdentityResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_identity_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetServiceManagedIdentityResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServiceManagedIdentityResponse) ProtoMessage() {}

func (x *GetServiceManagedIdentityResponse) ProtoReflect() protoreflect.Message {
	mi := &file_identity_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServiceManagedIdentityResponse.ProtoReflect.Descriptor instead.
func (*GetServiceManagedIdentityResponse) Descriptor() ([]byte, []int) {
	return file_identity_proto_rawDescGZIP(), []int{13}
}

func (x *GetServiceManagedIdentityResponse) GetIdentity() *Identity {
	if x != nil {
		return x.Identity
	}
	return nil
}

type AddPolicyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Identity namespace
	IdentityNamespace string `protobuf:"bytes,1,opt,name=identityNamespace,proto3" json:"identityNamespace,omitempty"`
	// Identity identifier inside identity namespace
	IdentityUUID string `protobuf:"bytes,2,opt,name=identityUUID,proto3" json:"identityUUID,omitempty"`
	// Policy namespace
	PolicyNamespace string `protobuf:"bytes,3,opt,name=policyNamespace,proto3" json:"policyNamespace,omitempty"`
	// Policy UUID inside policy namespace
	PolicyUUID string `protobuf:"bytes,4,opt,name=policyUUID,proto3" json:"policyUUID,omitempty"`
}

func (x *AddPolicyRequest) Reset() {
	*x = AddPolicyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_identity_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddPolicyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddPolicyRequest) ProtoMessage() {}

func (x *AddPolicyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_identity_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddPolicyRequest.ProtoReflect.Descriptor instead.
func (*AddPolicyRequest) Descriptor() ([]byte, []int) {
	return file_identity_proto_rawDescGZIP(), []int{14}
}

func (x *AddPolicyRequest) GetIdentityNamespace() string {
	if x != nil {
		return x.IdentityNamespace
	}
	return ""
}

func (x *AddPolicyRequest) GetIdentityUUID() string {
	if x != nil {
		return x.IdentityUUID
	}
	return ""
}

func (x *AddPolicyRequest) GetPolicyNamespace() string {
	if x != nil {
		return x.PolicyNamespace
	}
	return ""
}

func (x *AddPolicyRequest) GetPolicyUUID() string {
	if x != nil {
		return x.PolicyUUID
	}
	return ""
}

type AddPolicyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Updated identity (after adding policy)
	Identity *Identity `protobuf:"bytes,1,opt,name=identity,proto3" json:"identity,omitempty"`
}

func (x *AddPolicyResponse) Reset() {
	*x = AddPolicyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_identity_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddPolicyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddPolicyResponse) ProtoMessage() {}

func (x *AddPolicyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_identity_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddPolicyResponse.ProtoReflect.Descriptor instead.
func (*AddPolicyResponse) Descriptor() ([]byte, []int) {
	return file_identity_proto_rawDescGZIP(), []int{15}
}

func (x *AddPolicyResponse) GetIdentity() *Identity {
	if x != nil {
		return x.Identity
	}
	return nil
}

type RemovePolicyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Identity namespace
	IdentityNamespace string `protobuf:"bytes,1,opt,name=identityNamespace,proto3" json:"identityNamespace,omitempty"`
	// Identity unique identifier inside identity namespace
	IdentityUUID string `protobuf:"bytes,2,opt,name=identityUUID,proto3" json:"identityUUID,omitempty"`
	// Policy namespace
	PolicyNamespace string `protobuf:"bytes,3,opt,name=policyNamespace,proto3" json:"policyNamespace,omitempty"`
	// Policy UUID inside policy namespace
	PolicyUUID string `protobuf:"bytes,4,opt,name=policyUUID,proto3" json:"policyUUID,omitempty"`
}

func (x *RemovePolicyRequest) Reset() {
	*x = RemovePolicyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_identity_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemovePolicyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemovePolicyRequest) ProtoMessage() {}

func (x *RemovePolicyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_identity_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemovePolicyRequest.ProtoReflect.Descriptor instead.
func (*RemovePolicyRequest) Descriptor() ([]byte, []int) {
	return file_identity_proto_rawDescGZIP(), []int{16}
}

func (x *RemovePolicyRequest) GetIdentityNamespace() string {
	if x != nil {
		return x.IdentityNamespace
	}
	return ""
}

func (x *RemovePolicyRequest) GetIdentityUUID() string {
	if x != nil {
		return x.IdentityUUID
	}
	return ""
}

func (x *RemovePolicyRequest) GetPolicyNamespace() string {
	if x != nil {
		return x.PolicyNamespace
	}
	return ""
}

func (x *RemovePolicyRequest) GetPolicyUUID() string {
	if x != nil {
		return x.PolicyUUID
	}
	return ""
}

type RemovePolicyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Updated identity (after removing policy)
	Identity *Identity `protobuf:"bytes,1,opt,name=identity,proto3" json:"identity,omitempty"`
}

func (x *RemovePolicyResponse) Reset() {
	*x = RemovePolicyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_identity_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemovePolicyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemovePolicyResponse) ProtoMessage() {}

func (x *RemovePolicyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_identity_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemovePolicyResponse.ProtoReflect.Descriptor instead.
func (*RemovePolicyResponse) Descriptor() ([]byte, []int) {
	return file_identity_proto_rawDescGZIP(), []int{17}
}

func (x *RemovePolicyResponse) GetIdentity() *Identity {
	if x != nil {
		return x.Identity
	}
	return nil
}

type AddRoleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Identity namespace
	IdentityNamespace string `protobuf:"bytes,1,opt,name=identityNamespace,proto3" json:"identityNamespace,omitempty"`
	// Identity identifier inside identity namespace
	IdentityUUID string `protobuf:"bytes,2,opt,name=identityUUID,proto3" json:"identityUUID,omitempty"`
	// Role namespace
	RoleNamespace string `protobuf:"bytes,3,opt,name=roleNamespace,proto3" json:"roleNamespace,omitempty"`
	// Role UUID inside role namespace
	RoleUUID string `protobuf:"bytes,4,opt,name=roleUUID,proto3" json:"roleUUID,omitempty"`
}

func (x *AddRoleRequest) Reset() {
	*x = AddRoleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_identity_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddRoleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddRoleRequest) ProtoMessage() {}

func (x *AddRoleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_identity_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddRoleRequest.ProtoReflect.Descriptor instead.
func (*AddRoleRequest) Descriptor() ([]byte, []int) {
	return file_identity_proto_rawDescGZIP(), []int{18}
}

func (x *AddRoleRequest) GetIdentityNamespace() string {
	if x != nil {
		return x.IdentityNamespace
	}
	return ""
}

func (x *AddRoleRequest) GetIdentityUUID() string {
	if x != nil {
		return x.IdentityUUID
	}
	return ""
}

func (x *AddRoleRequest) GetRoleNamespace() string {
	if x != nil {
		return x.RoleNamespace
	}
	return ""
}

func (x *AddRoleRequest) GetRoleUUID() string {
	if x != nil {
		return x.RoleUUID
	}
	return ""
}

type AddRoleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Updated identity (after adding role)
	Identity *Identity `protobuf:"bytes,1,opt,name=identity,proto3" json:"identity,omitempty"`
}

func (x *AddRoleResponse) Reset() {
	*x = AddRoleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_identity_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddRoleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddRoleResponse) ProtoMessage() {}

func (x *AddRoleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_identity_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddRoleResponse.ProtoReflect.Descriptor instead.
func (*AddRoleResponse) Descriptor() ([]byte, []int) {
	return file_identity_proto_rawDescGZIP(), []int{19}
}

func (x *AddRoleResponse) GetIdentity() *Identity {
	if x != nil {
		return x.Identity
	}
	return nil
}

type RemoveRoleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Identity namespace
	IdentityNamespace string `protobuf:"bytes,1,opt,name=identityNamespace,proto3" json:"identityNamespace,omitempty"`
	// Identity unique identifier inside identity namespace
	IdentityUUID string `protobuf:"bytes,2,opt,name=identityUUID,proto3" json:"identityUUID,omitempty"`
	// Role namespace
	RoleNamespace string `protobuf:"bytes,3,opt,name=roleNamespace,proto3" json:"roleNamespace,omitempty"`
	// Role UUID inside role namespace
	RoleUUID string `protobuf:"bytes,4,opt,name=roleUUID,proto3" json:"roleUUID,omitempty"`
}

func (x *RemoveRoleRequest) Reset() {
	*x = RemoveRoleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_identity_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveRoleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveRoleRequest) ProtoMessage() {}

func (x *RemoveRoleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_identity_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveRoleRequest.ProtoReflect.Descriptor instead.
func (*RemoveRoleRequest) Descriptor() ([]byte, []int) {
	return file_identity_proto_rawDescGZIP(), []int{20}
}

func (x *RemoveRoleRequest) GetIdentityNamespace() string {
	if x != nil {
		return x.IdentityNamespace
	}
	return ""
}

func (x *RemoveRoleRequest) GetIdentityUUID() string {
	if x != nil {
		return x.IdentityUUID
	}
	return ""
}

func (x *RemoveRoleRequest) GetRoleNamespace() string {
	if x != nil {
		return x.RoleNamespace
	}
	return ""
}

func (x *RemoveRoleRequest) GetRoleUUID() string {
	if x != nil {
		return x.RoleUUID
	}
	return ""
}

type RemoveRoleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Updated identity (after removing role)
	Identity *Identity `protobuf:"bytes,1,opt,name=identity,proto3" json:"identity,omitempty"`
}

func (x *RemoveRoleResponse) Reset() {
	*x = RemoveRoleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_identity_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveRoleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveRoleResponse) ProtoMessage() {}

func (x *RemoveRoleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_identity_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveRoleResponse.ProtoReflect.Descriptor instead.
func (*RemoveRoleResponse) Descriptor() ([]byte, []int) {
	return file_identity_proto_rawDescGZIP(), []int{21}
}

func (x *RemoveRoleResponse) GetIdentity() *Identity {
	if x != nil {
		return x.Identity
	}
	return nil
}

type SetIdentityActiveRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Namespace of the identity
	Namespace string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	// Identity unique identifier inside namespace
	Uuid string `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
	// Set active or not
	Active bool `protobuf:"varint,3,opt,name=active,proto3" json:"active,omitempty"`
}

func (x *SetIdentityActiveRequest) Reset() {
	*x = SetIdentityActiveRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_identity_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetIdentityActiveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetIdentityActiveRequest) ProtoMessage() {}

func (x *SetIdentityActiveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_identity_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetIdentityActiveRequest.ProtoReflect.Descriptor instead.
func (*SetIdentityActiveRequest) Descriptor() ([]byte, []int) {
	return file_identity_proto_rawDescGZIP(), []int{22}
}

func (x *SetIdentityActiveRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *SetIdentityActiveRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *SetIdentityActiveRequest) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

type SetIdentityActiveResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Identity after update
	Identity *Identity `protobuf:"bytes,1,opt,name=identity,proto3" json:"identity,omitempty"`
}

func (x *SetIdentityActiveResponse) Reset() {
	*x = SetIdentityActiveResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_identity_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetIdentityActiveResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetIdentityActiveResponse) ProtoMessage() {}

func (x *SetIdentityActiveResponse) ProtoReflect() protoreflect.Message {
	mi := &file_identity_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetIdentityActiveResponse.ProtoReflect.Descriptor instead.
func (*SetIdentityActiveResponse) Descriptor() ([]byte, []int) {
	return file_identity_proto_rawDescGZIP(), []int{23}
}

func (x *SetIdentityActiveResponse) GetIdentity() *Identity {
	if x != nil {
		return x.Identity
	}
	return nil
}

// Holds information about specific policy assigned to the identity
type Identity_PolicyReference struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Policy namespace. Empty for global policy
	Namespace string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	// Policy uuid (unique identifier) inside namespace
	Uuid string `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
}

func (x *Identity_PolicyReference) Reset() {
	*x = Identity_PolicyReference{}
	if protoimpl.UnsafeEnabled {
		mi := &file_identity_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Identity_PolicyReference) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Identity_PolicyReference) ProtoMessage() {}

func (x *Identity_PolicyReference) ProtoReflect() protoreflect.Message {
	mi := &file_identity_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Identity_PolicyReference.ProtoReflect.Descriptor instead.
func (*Identity_PolicyReference) Descriptor() ([]byte, []int) {
	return file_identity_proto_rawDescGZIP(), []int{3, 0}
}

func (x *Identity_PolicyReference) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *Identity_PolicyReference) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

// Holds information about specific role assigned to the indentity
type Identity_RoleReference struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Role namespace. Empty for global role
	Namespace string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	// Role uuid
	Uuid string `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
}

func (x *Identity_RoleReference) Reset() {
	*x = Identity_RoleReference{}
	if protoimpl.UnsafeEnabled {
		mi := &file_identity_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Identity_RoleReference) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Identity_RoleReference) ProtoMessage() {}

func (x *Identity_RoleReference) ProtoReflect() protoreflect.Message {
	mi := &file_identity_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Identity_RoleReference.ProtoReflect.Descriptor instead.
func (*Identity_RoleReference) Descriptor() ([]byte, []int) {
	return file_identity_proto_rawDescGZIP(), []int{3, 1}
}

func (x *Identity_RoleReference) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *Identity_RoleReference) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

var File_identity_proto protoreflect.FileDescriptor

var file_identity_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x13, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x69, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x10, 0x0a, 0x0e, 0x4e, 0x6f, 0x74, 0x4d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x22, 0x67, 0x0a, 0x13, 0x49, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x2c, 0x0a, 0x11, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x69, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x22, 0x0a,
	0x0c, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x55, 0x55, 0x49, 0x44, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x55, 0x55, 0x49,
	0x44, 0x22, 0x6a, 0x0a, 0x12, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0xd3, 0x05,
	0x0a, 0x08, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61,
	0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e,
	0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x35, 0x0a, 0x02, 0x6e, 0x6f, 0x18, 0x14,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x69, 0x61,
	0x6d, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x4e, 0x6f, 0x74, 0x4d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x02, 0x6e, 0x6f, 0x12,
	0x46, 0x0a, 0x08, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x15, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x28, 0x2e, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x69, 0x61, 0x6d, 0x5f, 0x69,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x08, 0x69,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x43, 0x0a, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x6e, 0x61, 0x74, 0x69, 0x76,
	0x65, 0x5f, 0x69, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x44, 0x61, 0x74,
	0x61, 0x48, 0x00, 0x52, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x49, 0x0a, 0x08,
	0x70, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d,
	0x2e, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x69, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x50, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x08, 0x70,
	0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x12, 0x41, 0x0a, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73,
	0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x5f,
	0x69, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x49, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65,
	0x6e, 0x63, 0x65, 0x52, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x12, 0x34, 0x0a, 0x07, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x12, 0x34, 0x0a, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x1a, 0x43, 0x0a, 0x0f, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65,
	0x6e, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x75, 0x75, 0x69, 0x64, 0x1a, 0x41, 0x0a, 0x0d, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x66,
	0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x42, 0x09, 0x0a, 0x07, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x64, 0x22, 0xc2, 0x02, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a,
	0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x28, 0x0a, 0x0f, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x6c, 0x79, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61,
	0x6c, 0x6c, 0x79, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x35, 0x0a, 0x02, 0x6e, 0x6f, 0x18,
	0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x69,
	0x61, 0x6d, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x4e, 0x6f, 0x74, 0x4d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x02, 0x6e, 0x6f,
	0x12, 0x46, 0x0a, 0x08, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x15, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x69, 0x61, 0x6d, 0x5f,
	0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x08,
	0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x43, 0x0a, 0x07, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x6e, 0x61, 0x74, 0x69,
	0x76, 0x65, 0x5f, 0x69, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x44, 0x61,
	0x74, 0x61, 0x48, 0x00, 0x52, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x42, 0x09, 0x0a,
	0x07, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x22, 0x53, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x39, 0x0a, 0x08, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x69, 0x61,
	0x6d, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x52, 0x08, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22, 0x62, 0x0a,
	0x12, 0x47, 0x65, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x43, 0x61, 0x63, 0x68,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x75, 0x73, 0x65, 0x43, 0x61, 0x63, 0x68,
	0x65, 0x22, 0x50, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x08, 0x69, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6e, 0x61, 0x74,
	0x69, 0x76, 0x65, 0x5f, 0x69, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x08, 0x69, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x22, 0x49, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09,
	0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x22, 0x32,
	0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x78, 0x69, 0x73,
	0x74, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x78, 0x69, 0x73, 0x74,
	0x65, 0x64, 0x22, 0x65, 0x0a, 0x15, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x49, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6e,
	0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x75, 0x73, 0x65, 0x43, 0x61, 0x63, 0x68, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x08, 0x75, 0x73, 0x65, 0x43, 0x61, 0x63, 0x68, 0x65, 0x22, 0x30, 0x0a, 0x16, 0x45, 0x78, 0x69,
	0x73, 0x74, 0x73, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x78, 0x69, 0x73, 0x74, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x06, 0x65, 0x78, 0x69, 0x73, 0x74, 0x73, 0x22, 0x94, 0x01, 0x0a, 0x20,
	0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x64, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x64, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x64, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x43, 0x61, 0x63,
	0x68, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x75, 0x73, 0x65, 0x43, 0x61, 0x63,
	0x68, 0x65, 0x22, 0x5e, 0x0a, 0x21, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x08, 0x69, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6e, 0x61, 0x74, 0x69,
	0x76, 0x65, 0x5f, 0x69, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e,
	0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x08, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x22, 0xae, 0x01, 0x0a, 0x10, 0x41, 0x64, 0x64, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x11, 0x69, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x11, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4e, 0x61, 0x6d, 0x65,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x55, 0x55, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x55, 0x55, 0x49, 0x44, 0x12, 0x28, 0x0a, 0x0f, 0x70, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x55, 0x55, 0x49,
	0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x55,
	0x55, 0x49, 0x44, 0x22, 0x4e, 0x0a, 0x11, 0x41, 0x64, 0x64, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x08, 0x69, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6e, 0x61, 0x74,
	0x69, 0x76, 0x65, 0x5f, 0x69, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x08, 0x69, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x22, 0xb1, 0x01, 0x0a, 0x13, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x50, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x11, 0x69,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x69, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x55, 0x55, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x55, 0x55, 0x49, 0x44, 0x12, 0x28, 0x0a,
	0x0f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x4e, 0x61,
	0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x6f, 0x6c, 0x69, 0x63,
	0x79, 0x55, 0x55, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x55, 0x55, 0x49, 0x44, 0x22, 0x51, 0x0a, 0x14, 0x52, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x39, 0x0a, 0x08, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1d, 0x2e, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x69, 0x61, 0x6d, 0x5f, 0x69,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x52, 0x08, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22, 0xa4, 0x01, 0x0a, 0x0e, 0x41,
	0x64, 0x64, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a,
	0x11, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x69,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x55, 0x55, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x55, 0x55, 0x49, 0x44, 0x12,
	0x24, 0x0a, 0x0d, 0x72, 0x6f, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x72, 0x6f, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x55, 0x55, 0x49,
	0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x55, 0x55, 0x49,
	0x44, 0x22, 0x4c, 0x0a, 0x0f, 0x41, 0x64, 0x64, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x08, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x5f,
	0x69, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x49, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x08, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22,
	0xa7, 0x01, 0x0a, 0x11, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x11, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x11, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x55,
	0x55, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x55, 0x55, 0x49, 0x44, 0x12, 0x24, 0x0a, 0x0d, 0x72, 0x6f, 0x6c, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x72, 0x6f, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x72, 0x6f, 0x6c, 0x65, 0x55, 0x55, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x72, 0x6f, 0x6c, 0x65, 0x55, 0x55, 0x49, 0x44, 0x22, 0x4f, 0x0a, 0x12, 0x52, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x39, 0x0a, 0x08, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1d, 0x2e, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x69, 0x61, 0x6d, 0x5f, 0x69,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x52, 0x08, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22, 0x64, 0x0a, 0x18, 0x53, 0x65,
	0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65,
	0x22, 0x56, 0x0a, 0x19, 0x53, 0x65, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a,
	0x08, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1d, 0x2e, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x69, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x08,
	0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x32, 0x86, 0x08, 0x0a, 0x12, 0x49, 0x41, 0x4d,
	0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x61, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x2a, 0x2e, 0x6e, 0x61, 0x74, 0x69,
	0x76, 0x65, 0x5f, 0x69, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x69,
	0x61, 0x6d, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x58, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x12, 0x27, 0x2e, 0x6e, 0x61, 0x74, 0x69,
	0x76, 0x65, 0x5f, 0x69, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e,
	0x47, 0x65, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x28, 0x2e, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x69, 0x61, 0x6d, 0x5f,
	0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x61, 0x0a, 0x06,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x2a, 0x2e, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x5f,
	0x69, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x69, 0x61, 0x6d, 0x5f,
	0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x61, 0x0a, 0x06, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x12, 0x2a, 0x2e, 0x6e, 0x61, 0x74, 0x69,
	0x76, 0x65, 0x5f, 0x69, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e,
	0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x69,
	0x61, 0x6d, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x45, 0x78, 0x69, 0x73,
	0x74, 0x73, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x8a, 0x01, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x12, 0x35, 0x2e, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x69, 0x61, 0x6d, 0x5f, 0x69, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x36, 0x2e, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65,
	0x5f, 0x69, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x47, 0x65,
	0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x49,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x5a, 0x0a, 0x09, 0x41, 0x64, 0x64, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x25, 0x2e, 0x6e,
	0x61, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x69, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x2e, 0x41, 0x64, 0x64, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x69, 0x61, 0x6d,
	0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x41, 0x64, 0x64, 0x50, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x63, 0x0a, 0x0c, 0x52,
	0x65, 0x6d, 0x6f, 0x76, 0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x28, 0x2e, 0x6e, 0x61,
	0x74, 0x69, 0x76, 0x65, 0x5f, 0x69, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x69,
	0x61, 0x6d, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x52, 0x65, 0x6d, 0x6f,
	0x76, 0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x54, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x23, 0x2e, 0x6e, 0x61,
	0x74, 0x69, 0x76, 0x65, 0x5f, 0x69, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x2e, 0x41, 0x64, 0x64, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x24, 0x2e, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x69, 0x61, 0x6d, 0x5f, 0x69, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x41, 0x64, 0x64, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5d, 0x0a, 0x0a, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x52, 0x6f, 0x6c, 0x65, 0x12, 0x26, 0x2e, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x69, 0x61,
	0x6d, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x6e,
	0x61, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x69, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6a, 0x0a, 0x09, 0x53, 0x65, 0x74, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x12, 0x2d, 0x2e, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x69, 0x61, 0x6d, 0x5f,
	0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x53, 0x65, 0x74, 0x49, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2e, 0x2e, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x69, 0x61, 0x6d, 0x5f, 0x69,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x53, 0x65, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x42, 0x2b, 0x5a, 0x29, 0x73, 0x6c, 0x61, 0x6d, 0x79, 0x2f, 0x6f, 0x70, 0x65, 0x6e, 0x42,
	0x50, 0x2f, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x2f, 0x69, 0x61, 0x6d, 0x2f, 0x69, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x3b, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_identity_proto_rawDescOnce sync.Once
	file_identity_proto_rawDescData = file_identity_proto_rawDesc
)

func file_identity_proto_rawDescGZIP() []byte {
	file_identity_proto_rawDescOnce.Do(func() {
		file_identity_proto_rawDescData = protoimpl.X.CompressGZIP(file_identity_proto_rawDescData)
	})
	return file_identity_proto_rawDescData
}

var file_identity_proto_msgTypes = make([]protoimpl.MessageInfo, 26)
var file_identity_proto_goTypes = []interface{}{
	(*NotManagedData)(nil),                    // 0: native_iam_identity.NotManagedData
	(*IdentityManagedData)(nil),               // 1: native_iam_identity.IdentityManagedData
	(*ServiceManagedData)(nil),                // 2: native_iam_identity.ServiceManagedData
	(*Identity)(nil),                          // 3: native_iam_identity.Identity
	(*CreateIdentityRequest)(nil),             // 4: native_iam_identity.CreateIdentityRequest
	(*CreateIdentityResponse)(nil),            // 5: native_iam_identity.CreateIdentityResponse
	(*GetIdentityRequest)(nil),                // 6: native_iam_identity.GetIdentityRequest
	(*GetIdentityResponse)(nil),               // 7: native_iam_identity.GetIdentityResponse
	(*DeleteIdentityRequest)(nil),             // 8: native_iam_identity.DeleteIdentityRequest
	(*DeleteIdentityResponse)(nil),            // 9: native_iam_identity.DeleteIdentityResponse
	(*ExistsIdentityRequest)(nil),             // 10: native_iam_identity.ExistsIdentityRequest
	(*ExistsIdentityResponse)(nil),            // 11: native_iam_identity.ExistsIdentityResponse
	(*GetServiceManagedIdentityRequest)(nil),  // 12: native_iam_identity.GetServiceManagedIdentityRequest
	(*GetServiceManagedIdentityResponse)(nil), // 13: native_iam_identity.GetServiceManagedIdentityResponse
	(*AddPolicyRequest)(nil),                  // 14: native_iam_identity.AddPolicyRequest
	(*AddPolicyResponse)(nil),                 // 15: native_iam_identity.AddPolicyResponse
	(*RemovePolicyRequest)(nil),               // 16: native_iam_identity.RemovePolicyRequest
	(*RemovePolicyResponse)(nil),              // 17: native_iam_identity.RemovePolicyResponse
	(*AddRoleRequest)(nil),                    // 18: native_iam_identity.AddRoleRequest
	(*AddRoleResponse)(nil),                   // 19: native_iam_identity.AddRoleResponse
	(*RemoveRoleRequest)(nil),                 // 20: native_iam_identity.RemoveRoleRequest
	(*RemoveRoleResponse)(nil),                // 21: native_iam_identity.RemoveRoleResponse
	(*SetIdentityActiveRequest)(nil),          // 22: native_iam_identity.SetIdentityActiveRequest
	(*SetIdentityActiveResponse)(nil),         // 23: native_iam_identity.SetIdentityActiveResponse
	(*Identity_PolicyReference)(nil),          // 24: native_iam_identity.Identity.PolicyReference
	(*Identity_RoleReference)(nil),            // 25: native_iam_identity.Identity.RoleReference
	(*timestamp.Timestamp)(nil),               // 26: google.protobuf.Timestamp
}
var file_identity_proto_depIdxs = []int32{
	0,  // 0: native_iam_identity.Identity.no:type_name -> native_iam_identity.NotManagedData
	1,  // 1: native_iam_identity.Identity.identity:type_name -> native_iam_identity.IdentityManagedData
	2,  // 2: native_iam_identity.Identity.service:type_name -> native_iam_identity.ServiceManagedData
	24, // 3: native_iam_identity.Identity.policies:type_name -> native_iam_identity.Identity.PolicyReference
	25, // 4: native_iam_identity.Identity.roles:type_name -> native_iam_identity.Identity.RoleReference
	26, // 5: native_iam_identity.Identity.created:type_name -> google.protobuf.Timestamp
	26, // 6: native_iam_identity.Identity.updated:type_name -> google.protobuf.Timestamp
	0,  // 7: native_iam_identity.CreateIdentityRequest.no:type_name -> native_iam_identity.NotManagedData
	1,  // 8: native_iam_identity.CreateIdentityRequest.identity:type_name -> native_iam_identity.IdentityManagedData
	2,  // 9: native_iam_identity.CreateIdentityRequest.service:type_name -> native_iam_identity.ServiceManagedData
	3,  // 10: native_iam_identity.CreateIdentityResponse.identity:type_name -> native_iam_identity.Identity
	3,  // 11: native_iam_identity.GetIdentityResponse.identity:type_name -> native_iam_identity.Identity
	3,  // 12: native_iam_identity.GetServiceManagedIdentityResponse.identity:type_name -> native_iam_identity.Identity
	3,  // 13: native_iam_identity.AddPolicyResponse.identity:type_name -> native_iam_identity.Identity
	3,  // 14: native_iam_identity.RemovePolicyResponse.identity:type_name -> native_iam_identity.Identity
	3,  // 15: native_iam_identity.AddRoleResponse.identity:type_name -> native_iam_identity.Identity
	3,  // 16: native_iam_identity.RemoveRoleResponse.identity:type_name -> native_iam_identity.Identity
	3,  // 17: native_iam_identity.SetIdentityActiveResponse.identity:type_name -> native_iam_identity.Identity
	4,  // 18: native_iam_identity.IAMIdentityService.Create:input_type -> native_iam_identity.CreateIdentityRequest
	6,  // 19: native_iam_identity.IAMIdentityService.Get:input_type -> native_iam_identity.GetIdentityRequest
	8,  // 20: native_iam_identity.IAMIdentityService.Delete:input_type -> native_iam_identity.DeleteIdentityRequest
	10, // 21: native_iam_identity.IAMIdentityService.Exists:input_type -> native_iam_identity.ExistsIdentityRequest
	12, // 22: native_iam_identity.IAMIdentityService.GetServiceManagedIdentity:input_type -> native_iam_identity.GetServiceManagedIdentityRequest
	14, // 23: native_iam_identity.IAMIdentityService.AddPolicy:input_type -> native_iam_identity.AddPolicyRequest
	16, // 24: native_iam_identity.IAMIdentityService.RemovePolicy:input_type -> native_iam_identity.RemovePolicyRequest
	18, // 25: native_iam_identity.IAMIdentityService.AddRole:input_type -> native_iam_identity.AddRoleRequest
	20, // 26: native_iam_identity.IAMIdentityService.RemoveRole:input_type -> native_iam_identity.RemoveRoleRequest
	22, // 27: native_iam_identity.IAMIdentityService.SetActive:input_type -> native_iam_identity.SetIdentityActiveRequest
	5,  // 28: native_iam_identity.IAMIdentityService.Create:output_type -> native_iam_identity.CreateIdentityResponse
	7,  // 29: native_iam_identity.IAMIdentityService.Get:output_type -> native_iam_identity.GetIdentityResponse
	9,  // 30: native_iam_identity.IAMIdentityService.Delete:output_type -> native_iam_identity.DeleteIdentityResponse
	11, // 31: native_iam_identity.IAMIdentityService.Exists:output_type -> native_iam_identity.ExistsIdentityResponse
	13, // 32: native_iam_identity.IAMIdentityService.GetServiceManagedIdentity:output_type -> native_iam_identity.GetServiceManagedIdentityResponse
	15, // 33: native_iam_identity.IAMIdentityService.AddPolicy:output_type -> native_iam_identity.AddPolicyResponse
	17, // 34: native_iam_identity.IAMIdentityService.RemovePolicy:output_type -> native_iam_identity.RemovePolicyResponse
	19, // 35: native_iam_identity.IAMIdentityService.AddRole:output_type -> native_iam_identity.AddRoleResponse
	21, // 36: native_iam_identity.IAMIdentityService.RemoveRole:output_type -> native_iam_identity.RemoveRoleResponse
	23, // 37: native_iam_identity.IAMIdentityService.SetActive:output_type -> native_iam_identity.SetIdentityActiveResponse
	28, // [28:38] is the sub-list for method output_type
	18, // [18:28] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,  // [0:18] is the sub-list for field type_name
}

func init() { file_identity_proto_init() }
func file_identity_proto_init() {
	if File_identity_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_identity_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotManagedData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_identity_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IdentityManagedData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_identity_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceManagedData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_identity_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Identity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_identity_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateIdentityRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_identity_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateIdentityResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_identity_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetIdentityRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_identity_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetIdentityResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_identity_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteIdentityRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_identity_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteIdentityResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_identity_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExistsIdentityRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_identity_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExistsIdentityResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_identity_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetServiceManagedIdentityRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_identity_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetServiceManagedIdentityResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_identity_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddPolicyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_identity_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddPolicyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_identity_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemovePolicyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_identity_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemovePolicyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_identity_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddRoleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_identity_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddRoleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_identity_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveRoleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_identity_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveRoleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_identity_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetIdentityActiveRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_identity_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetIdentityActiveResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_identity_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Identity_PolicyReference); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_identity_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Identity_RoleReference); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_identity_proto_msgTypes[3].OneofWrappers = []interface{}{
		(*Identity_No)(nil),
		(*Identity_Identity)(nil),
		(*Identity_Service)(nil),
	}
	file_identity_proto_msgTypes[4].OneofWrappers = []interface{}{
		(*CreateIdentityRequest_No)(nil),
		(*CreateIdentityRequest_Identity)(nil),
		(*CreateIdentityRequest_Service)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_identity_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   26,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_identity_proto_goTypes,
		DependencyIndexes: file_identity_proto_depIdxs,
		MessageInfos:      file_identity_proto_msgTypes,
	}.Build()
	File_identity_proto = out.File
	file_identity_proto_rawDesc = nil
	file_identity_proto_goTypes = nil
	file_identity_proto_depIdxs = nil
}
