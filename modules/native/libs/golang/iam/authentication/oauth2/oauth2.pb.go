// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.12.4
// source: oauth2.proto

package oauth2

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ProviderType int32

const (
	ProviderType_GOOGLE    ProviderType = 0
	ProviderType_FACEBOOK  ProviderType = 1
	ProviderType_GITHUB    ProviderType = 2
	ProviderType_MICROSOFT ProviderType = 3
	ProviderType_TWITTER   ProviderType = 4
	ProviderType_APPLE     ProviderType = 5
	ProviderType_GITLAB    ProviderType = 6
	ProviderType_DISCORD   ProviderType = 7
	ProviderType_OIDC      ProviderType = 8
	ProviderType_OIDC2     ProviderType = 9
	ProviderType_OIDC3     ProviderType = 10
	ProviderType_INSTAGRAM ProviderType = 11
)

// Enum value maps for ProviderType.
var (
	ProviderType_name = map[int32]string{
		0:  "GOOGLE",
		1:  "FACEBOOK",
		2:  "GITHUB",
		3:  "MICROSOFT",
		4:  "TWITTER",
		5:  "APPLE",
		6:  "GITLAB",
		7:  "DISCORD",
		8:  "OIDC",
		9:  "OIDC2",
		10: "OIDC3",
		11: "INSTAGRAM",
	}
	ProviderType_value = map[string]int32{
		"GOOGLE":    0,
		"FACEBOOK":  1,
		"GITHUB":    2,
		"MICROSOFT": 3,
		"TWITTER":   4,
		"APPLE":     5,
		"GITLAB":    6,
		"DISCORD":   7,
		"OIDC":      8,
		"OIDC2":     9,
		"OIDC3":     10,
		"INSTAGRAM": 11,
	}
)

func (x ProviderType) Enum() *ProviderType {
	p := new(ProviderType)
	*p = x
	return p
}

func (x ProviderType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProviderType) Descriptor() protoreflect.EnumDescriptor {
	return file_oauth2_proto_enumTypes[0].Descriptor()
}

func (ProviderType) Type() protoreflect.EnumType {
	return &file_oauth2_proto_enumTypes[0]
}

func (x ProviderType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ProviderType.Descriptor instead.
func (ProviderType) EnumDescriptor() ([]byte, []int) {
	return file_oauth2_proto_rawDescGZIP(), []int{0}
}

type AuthenticateResponse_Status int32

const (
	AuthenticateResponse_OK                                AuthenticateResponse_Status = 0
	AuthenticateResponse_PROVIDER_DISABLED                 AuthenticateResponse_Status = 1
	AuthenticateResponse_ERROR_WHILE_RETRIEVING_AUTH_TOKEN AuthenticateResponse_Status = 2
	AuthenticateResponse_ERROR_WHILE_FETCHING_USER_DETAILS AuthenticateResponse_Status = 3
	// Provider is OK, but cant find registered identity
	AuthenticateResponse_UNAUTHENTICATED AuthenticateResponse_Status = 4
)

// Enum value maps for AuthenticateResponse_Status.
var (
	AuthenticateResponse_Status_name = map[int32]string{
		0: "OK",
		1: "PROVIDER_DISABLED",
		2: "ERROR_WHILE_RETRIEVING_AUTH_TOKEN",
		3: "ERROR_WHILE_FETCHING_USER_DETAILS",
		4: "UNAUTHENTICATED",
	}
	AuthenticateResponse_Status_value = map[string]int32{
		"OK":                                0,
		"PROVIDER_DISABLED":                 1,
		"ERROR_WHILE_RETRIEVING_AUTH_TOKEN": 2,
		"ERROR_WHILE_FETCHING_USER_DETAILS": 3,
		"UNAUTHENTICATED":                   4,
	}
)

func (x AuthenticateResponse_Status) Enum() *AuthenticateResponse_Status {
	p := new(AuthenticateResponse_Status)
	*p = x
	return p
}

func (x AuthenticateResponse_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AuthenticateResponse_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_oauth2_proto_enumTypes[1].Descriptor()
}

func (AuthenticateResponse_Status) Type() protoreflect.EnumType {
	return &file_oauth2_proto_enumTypes[1]
}

func (x AuthenticateResponse_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AuthenticateResponse_Status.Descriptor instead.
func (AuthenticateResponse_Status) EnumDescriptor() ([]byte, []int) {
	return file_oauth2_proto_rawDescGZIP(), []int{9, 0}
}

type RegisterProviderForIdentityResponse_Status int32

const (
	RegisterProviderForIdentityResponse_OK                                RegisterProviderForIdentityResponse_Status = 0
	RegisterProviderForIdentityResponse_PROVIDER_DISABLED                 RegisterProviderForIdentityResponse_Status = 1
	RegisterProviderForIdentityResponse_ERROR_WHILE_RETRIEVING_AUTH_TOKEN RegisterProviderForIdentityResponse_Status = 2
	RegisterProviderForIdentityResponse_ERROR_WHILE_FETCHING_USER_DETAILS RegisterProviderForIdentityResponse_Status = 3
	RegisterProviderForIdentityResponse_ALREADY_REGISTERED                RegisterProviderForIdentityResponse_Status = 4
)

// Enum value maps for RegisterProviderForIdentityResponse_Status.
var (
	RegisterProviderForIdentityResponse_Status_name = map[int32]string{
		0: "OK",
		1: "PROVIDER_DISABLED",
		2: "ERROR_WHILE_RETRIEVING_AUTH_TOKEN",
		3: "ERROR_WHILE_FETCHING_USER_DETAILS",
		4: "ALREADY_REGISTERED",
	}
	RegisterProviderForIdentityResponse_Status_value = map[string]int32{
		"OK":                                0,
		"PROVIDER_DISABLED":                 1,
		"ERROR_WHILE_RETRIEVING_AUTH_TOKEN": 2,
		"ERROR_WHILE_FETCHING_USER_DETAILS": 3,
		"ALREADY_REGISTERED":                4,
	}
)

func (x RegisterProviderForIdentityResponse_Status) Enum() *RegisterProviderForIdentityResponse_Status {
	p := new(RegisterProviderForIdentityResponse_Status)
	*p = x
	return p
}

func (x RegisterProviderForIdentityResponse_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RegisterProviderForIdentityResponse_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_oauth2_proto_enumTypes[2].Descriptor()
}

func (RegisterProviderForIdentityResponse_Status) Type() protoreflect.EnumType {
	return &file_oauth2_proto_enumTypes[2]
}

func (x RegisterProviderForIdentityResponse_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RegisterProviderForIdentityResponse_Status.Descriptor instead.
func (RegisterProviderForIdentityResponse_Status) EnumDescriptor() ([]byte, []int) {
	return file_oauth2_proto_rawDescGZIP(), []int{11, 0}
}

type ProviderConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	// The OAuth2 provider type
	Type ProviderType `protobuf:"varint,2,opt,name=type,proto3,enum=native_iam_authentication_oauth2.ProviderType" json:"type,omitempty"`
	// If provider is enabled or not. If provider is disable, then it is not possible to use it for authentication
	Enabled bool `protobuf:"varint,3,opt,name=enabled,proto3" json:"enabled,omitempty"`
	// The OAuth2 client id
	ClientId string `protobuf:"bytes,4,opt,name=clientId,proto3" json:"clientId,omitempty"`
	// The OAuth2 client secret. It is stored as an ecrypted value. The encryption is done by system_vault service.
	ClientSecret string `protobuf:"bytes,5,opt,name=clientSecret,proto3" json:"clientSecret,omitempty"`
	// The OAuth2 authorization url
	AuthUrl string `protobuf:"bytes,6,opt,name=authUrl,proto3" json:"authUrl,omitempty"`
	// The OAuth2 token url
	TokenUrl string `protobuf:"bytes,7,opt,name=tokenUrl,proto3" json:"tokenUrl,omitempty"`
	// The OAuth2 user api url
	UserApiUrl string `protobuf:"bytes,8,opt,name=userApiUrl,proto3" json:"userApiUrl,omitempty"`
}

func (x *ProviderConfig) Reset() {
	*x = ProviderConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oauth2_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProviderConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProviderConfig) ProtoMessage() {}

func (x *ProviderConfig) ProtoReflect() protoreflect.Message {
	mi := &file_oauth2_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProviderConfig.ProtoReflect.Descriptor instead.
func (*ProviderConfig) Descriptor() ([]byte, []int) {
	return file_oauth2_proto_rawDescGZIP(), []int{0}
}

func (x *ProviderConfig) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *ProviderConfig) GetType() ProviderType {
	if x != nil {
		return x.Type
	}
	return ProviderType_GOOGLE
}

func (x *ProviderConfig) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *ProviderConfig) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *ProviderConfig) GetClientSecret() string {
	if x != nil {
		return x.ClientSecret
	}
	return ""
}

func (x *ProviderConfig) GetAuthUrl() string {
	if x != nil {
		return x.AuthUrl
	}
	return ""
}

func (x *ProviderConfig) GetTokenUrl() string {
	if x != nil {
		return x.TokenUrl
	}
	return ""
}

func (x *ProviderConfig) GetUserApiUrl() string {
	if x != nil {
		return x.UserApiUrl
	}
	return ""
}

type UpdateProviderConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Config *ProviderConfig `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"`
}

func (x *UpdateProviderConfigRequest) Reset() {
	*x = UpdateProviderConfigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oauth2_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateProviderConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateProviderConfigRequest) ProtoMessage() {}

func (x *UpdateProviderConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_oauth2_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateProviderConfigRequest.ProtoReflect.Descriptor instead.
func (*UpdateProviderConfigRequest) Descriptor() ([]byte, []int) {
	return file_oauth2_proto_rawDescGZIP(), []int{1}
}

func (x *UpdateProviderConfigRequest) GetConfig() *ProviderConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

type UpdateProviderConfigResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateProviderConfigResponse) Reset() {
	*x = UpdateProviderConfigResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oauth2_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateProviderConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateProviderConfigResponse) ProtoMessage() {}

func (x *UpdateProviderConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_oauth2_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateProviderConfigResponse.ProtoReflect.Descriptor instead.
func (*UpdateProviderConfigResponse) Descriptor() ([]byte, []int) {
	return file_oauth2_proto_rawDescGZIP(), []int{2}
}

type ListProviderConfigsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
}

func (x *ListProviderConfigsRequest) Reset() {
	*x = ListProviderConfigsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oauth2_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListProviderConfigsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListProviderConfigsRequest) ProtoMessage() {}

func (x *ListProviderConfigsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_oauth2_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListProviderConfigsRequest.ProtoReflect.Descriptor instead.
func (*ListProviderConfigsRequest) Descriptor() ([]byte, []int) {
	return file_oauth2_proto_rawDescGZIP(), []int{3}
}

func (x *ListProviderConfigsRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

type ListProviderConfigsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Configs []*ProviderConfig `protobuf:"bytes,1,rep,name=configs,proto3" json:"configs,omitempty"`
}

func (x *ListProviderConfigsResponse) Reset() {
	*x = ListProviderConfigsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oauth2_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListProviderConfigsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListProviderConfigsResponse) ProtoMessage() {}

func (x *ListProviderConfigsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_oauth2_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListProviderConfigsResponse.ProtoReflect.Descriptor instead.
func (*ListProviderConfigsResponse) Descriptor() ([]byte, []int) {
	return file_oauth2_proto_rawDescGZIP(), []int{4}
}

func (x *ListProviderConfigsResponse) GetConfigs() []*ProviderConfig {
	if x != nil {
		return x.Configs
	}
	return nil
}

type GetAvailableProvidersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
}

func (x *GetAvailableProvidersRequest) Reset() {
	*x = GetAvailableProvidersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oauth2_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAvailableProvidersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAvailableProvidersRequest) ProtoMessage() {}

func (x *GetAvailableProvidersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_oauth2_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAvailableProvidersRequest.ProtoReflect.Descriptor instead.
func (*GetAvailableProvidersRequest) Descriptor() ([]byte, []int) {
	return file_oauth2_proto_rawDescGZIP(), []int{5}
}

func (x *GetAvailableProvidersRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

type GetAvailableProvidersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Providers []ProviderType `protobuf:"varint,1,rep,packed,name=providers,proto3,enum=native_iam_authentication_oauth2.ProviderType" json:"providers,omitempty"`
}

func (x *GetAvailableProvidersResponse) Reset() {
	*x = GetAvailableProvidersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oauth2_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAvailableProvidersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAvailableProvidersResponse) ProtoMessage() {}

func (x *GetAvailableProvidersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_oauth2_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAvailableProvidersResponse.ProtoReflect.Descriptor instead.
func (*GetAvailableProvidersResponse) Descriptor() ([]byte, []int) {
	return file_oauth2_proto_rawDescGZIP(), []int{6}
}

func (x *GetAvailableProvidersResponse) GetProviders() []ProviderType {
	if x != nil {
		return x.Providers
	}
	return nil
}

type ProviderUserDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Username  string `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`
	Email     string `protobuf:"bytes,4,opt,name=email,proto3" json:"email,omitempty"`
	AvatarUrl string `protobuf:"bytes,5,opt,name=avatarUrl,proto3" json:"avatarUrl,omitempty"`
}

func (x *ProviderUserDetails) Reset() {
	*x = ProviderUserDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oauth2_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProviderUserDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProviderUserDetails) ProtoMessage() {}

func (x *ProviderUserDetails) ProtoReflect() protoreflect.Message {
	mi := &file_oauth2_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProviderUserDetails.ProtoReflect.Descriptor instead.
func (*ProviderUserDetails) Descriptor() ([]byte, []int) {
	return file_oauth2_proto_rawDescGZIP(), []int{7}
}

func (x *ProviderUserDetails) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ProviderUserDetails) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ProviderUserDetails) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *ProviderUserDetails) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *ProviderUserDetails) GetAvatarUrl() string {
	if x != nil {
		return x.AvatarUrl
	}
	return ""
}

type AuthenticateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace    string       `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Provider     ProviderType `protobuf:"varint,2,opt,name=provider,proto3,enum=native_iam_authentication_oauth2.ProviderType" json:"provider,omitempty"`
	Code         string       `protobuf:"bytes,3,opt,name=code,proto3" json:"code,omitempty"`
	CodeVerifier string       `protobuf:"bytes,4,opt,name=codeVerifier,proto3" json:"codeVerifier,omitempty"`
	RedirectUrl  string       `protobuf:"bytes,5,opt,name=redirectUrl,proto3" json:"redirectUrl,omitempty"`
}

func (x *AuthenticateRequest) Reset() {
	*x = AuthenticateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oauth2_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthenticateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthenticateRequest) ProtoMessage() {}

func (x *AuthenticateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_oauth2_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthenticateRequest.ProtoReflect.Descriptor instead.
func (*AuthenticateRequest) Descriptor() ([]byte, []int) {
	return file_oauth2_proto_rawDescGZIP(), []int{8}
}

func (x *AuthenticateRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *AuthenticateRequest) GetProvider() ProviderType {
	if x != nil {
		return x.Provider
	}
	return ProviderType_GOOGLE
}

func (x *AuthenticateRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *AuthenticateRequest) GetCodeVerifier() string {
	if x != nil {
		return x.CodeVerifier
	}
	return ""
}

func (x *AuthenticateRequest) GetRedirectUrl() string {
	if x != nil {
		return x.RedirectUrl
	}
	return ""
}

type AuthenticateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status      AuthenticateResponse_Status `protobuf:"varint,1,opt,name=status,proto3,enum=native_iam_authentication_oauth2.AuthenticateResponse_Status" json:"status,omitempty"`
	Identity    string                      `protobuf:"bytes,2,opt,name=identity,proto3" json:"identity,omitempty"`
	UserDetails *ProviderUserDetails        `protobuf:"bytes,3,opt,name=userDetails,proto3" json:"userDetails,omitempty"`
}

func (x *AuthenticateResponse) Reset() {
	*x = AuthenticateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oauth2_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthenticateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthenticateResponse) ProtoMessage() {}

func (x *AuthenticateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_oauth2_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthenticateResponse.ProtoReflect.Descriptor instead.
func (*AuthenticateResponse) Descriptor() ([]byte, []int) {
	return file_oauth2_proto_rawDescGZIP(), []int{9}
}

func (x *AuthenticateResponse) GetStatus() AuthenticateResponse_Status {
	if x != nil {
		return x.Status
	}
	return AuthenticateResponse_OK
}

func (x *AuthenticateResponse) GetIdentity() string {
	if x != nil {
		return x.Identity
	}
	return ""
}

func (x *AuthenticateResponse) GetUserDetails() *ProviderUserDetails {
	if x != nil {
		return x.UserDetails
	}
	return nil
}

type RegisterProviderForIdentityRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace    string       `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Identity     string       `protobuf:"bytes,2,opt,name=identity,proto3" json:"identity,omitempty"`
	Provider     ProviderType `protobuf:"varint,3,opt,name=provider,proto3,enum=native_iam_authentication_oauth2.ProviderType" json:"provider,omitempty"`
	Code         string       `protobuf:"bytes,4,opt,name=code,proto3" json:"code,omitempty"`
	CodeVerifier string       `protobuf:"bytes,5,opt,name=codeVerifier,proto3" json:"codeVerifier,omitempty"`
	RedirectUrl  string       `protobuf:"bytes,6,opt,name=redirectUrl,proto3" json:"redirectUrl,omitempty"`
}

func (x *RegisterProviderForIdentityRequest) Reset() {
	*x = RegisterProviderForIdentityRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oauth2_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterProviderForIdentityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterProviderForIdentityRequest) ProtoMessage() {}

func (x *RegisterProviderForIdentityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_oauth2_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterProviderForIdentityRequest.ProtoReflect.Descriptor instead.
func (*RegisterProviderForIdentityRequest) Descriptor() ([]byte, []int) {
	return file_oauth2_proto_rawDescGZIP(), []int{10}
}

func (x *RegisterProviderForIdentityRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *RegisterProviderForIdentityRequest) GetIdentity() string {
	if x != nil {
		return x.Identity
	}
	return ""
}

func (x *RegisterProviderForIdentityRequest) GetProvider() ProviderType {
	if x != nil {
		return x.Provider
	}
	return ProviderType_GOOGLE
}

func (x *RegisterProviderForIdentityRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *RegisterProviderForIdentityRequest) GetCodeVerifier() string {
	if x != nil {
		return x.CodeVerifier
	}
	return ""
}

func (x *RegisterProviderForIdentityRequest) GetRedirectUrl() string {
	if x != nil {
		return x.RedirectUrl
	}
	return ""
}

type RegisterProviderForIdentityResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status      RegisterProviderForIdentityResponse_Status `protobuf:"varint,1,opt,name=status,proto3,enum=native_iam_authentication_oauth2.RegisterProviderForIdentityResponse_Status" json:"status,omitempty"`
	UserDetails *ProviderUserDetails                       `protobuf:"bytes,3,opt,name=userDetails,proto3" json:"userDetails,omitempty"`
}

func (x *RegisterProviderForIdentityResponse) Reset() {
	*x = RegisterProviderForIdentityResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oauth2_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterProviderForIdentityResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterProviderForIdentityResponse) ProtoMessage() {}

func (x *RegisterProviderForIdentityResponse) ProtoReflect() protoreflect.Message {
	mi := &file_oauth2_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterProviderForIdentityResponse.ProtoReflect.Descriptor instead.
func (*RegisterProviderForIdentityResponse) Descriptor() ([]byte, []int) {
	return file_oauth2_proto_rawDescGZIP(), []int{11}
}

func (x *RegisterProviderForIdentityResponse) GetStatus() RegisterProviderForIdentityResponse_Status {
	if x != nil {
		return x.Status
	}
	return RegisterProviderForIdentityResponse_OK
}

func (x *RegisterProviderForIdentityResponse) GetUserDetails() *ProviderUserDetails {
	if x != nil {
		return x.UserDetails
	}
	return nil
}

type ForgetIdentityProviderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace string       `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Identity  string       `protobuf:"bytes,2,opt,name=identity,proto3" json:"identity,omitempty"`
	Provider  ProviderType `protobuf:"varint,3,opt,name=provider,proto3,enum=native_iam_authentication_oauth2.ProviderType" json:"provider,omitempty"`
}

func (x *ForgetIdentityProviderRequest) Reset() {
	*x = ForgetIdentityProviderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oauth2_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ForgetIdentityProviderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ForgetIdentityProviderRequest) ProtoMessage() {}

func (x *ForgetIdentityProviderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_oauth2_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ForgetIdentityProviderRequest.ProtoReflect.Descriptor instead.
func (*ForgetIdentityProviderRequest) Descriptor() ([]byte, []int) {
	return file_oauth2_proto_rawDescGZIP(), []int{12}
}

func (x *ForgetIdentityProviderRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *ForgetIdentityProviderRequest) GetIdentity() string {
	if x != nil {
		return x.Identity
	}
	return ""
}

func (x *ForgetIdentityProviderRequest) GetProvider() ProviderType {
	if x != nil {
		return x.Provider
	}
	return ProviderType_GOOGLE
}

type ForgetIdentityProviderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ForgetIdentityProviderResponse) Reset() {
	*x = ForgetIdentityProviderResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oauth2_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ForgetIdentityProviderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ForgetIdentityProviderResponse) ProtoMessage() {}

func (x *ForgetIdentityProviderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_oauth2_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ForgetIdentityProviderResponse.ProtoReflect.Descriptor instead.
func (*ForgetIdentityProviderResponse) Descriptor() ([]byte, []int) {
	return file_oauth2_proto_rawDescGZIP(), []int{13}
}

type GetRegisteredIdentityProvidersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Identity  string `protobuf:"bytes,2,opt,name=identity,proto3" json:"identity,omitempty"`
}

func (x *GetRegisteredIdentityProvidersRequest) Reset() {
	*x = GetRegisteredIdentityProvidersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oauth2_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRegisteredIdentityProvidersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRegisteredIdentityProvidersRequest) ProtoMessage() {}

func (x *GetRegisteredIdentityProvidersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_oauth2_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRegisteredIdentityProvidersRequest.ProtoReflect.Descriptor instead.
func (*GetRegisteredIdentityProvidersRequest) Descriptor() ([]byte, []int) {
	return file_oauth2_proto_rawDescGZIP(), []int{14}
}

func (x *GetRegisteredIdentityProvidersRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *GetRegisteredIdentityProvidersRequest) GetIdentity() string {
	if x != nil {
		return x.Identity
	}
	return ""
}

type GetRegisteredIdentityProvidersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Providers []*GetRegisteredIdentityProvidersResponse_RegisteredProvider `protobuf:"bytes,1,rep,name=providers,proto3" json:"providers,omitempty"`
}

func (x *GetRegisteredIdentityProvidersResponse) Reset() {
	*x = GetRegisteredIdentityProvidersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oauth2_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRegisteredIdentityProvidersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRegisteredIdentityProvidersResponse) ProtoMessage() {}

func (x *GetRegisteredIdentityProvidersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_oauth2_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRegisteredIdentityProvidersResponse.ProtoReflect.Descriptor instead.
func (*GetRegisteredIdentityProvidersResponse) Descriptor() ([]byte, []int) {
	return file_oauth2_proto_rawDescGZIP(), []int{15}
}

func (x *GetRegisteredIdentityProvidersResponse) GetProviders() []*GetRegisteredIdentityProvidersResponse_RegisteredProvider {
	if x != nil {
		return x.Providers
	}
	return nil
}

type GetRegisteredIdentityProvidersResponse_RegisteredProvider struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Provider    ProviderType         `protobuf:"varint,1,opt,name=provider,proto3,enum=native_iam_authentication_oauth2.ProviderType" json:"provider,omitempty"`
	UserDetails *ProviderUserDetails `protobuf:"bytes,2,opt,name=userDetails,proto3" json:"userDetails,omitempty"`
}

func (x *GetRegisteredIdentityProvidersResponse_RegisteredProvider) Reset() {
	*x = GetRegisteredIdentityProvidersResponse_RegisteredProvider{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oauth2_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRegisteredIdentityProvidersResponse_RegisteredProvider) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRegisteredIdentityProvidersResponse_RegisteredProvider) ProtoMessage() {}

func (x *GetRegisteredIdentityProvidersResponse_RegisteredProvider) ProtoReflect() protoreflect.Message {
	mi := &file_oauth2_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRegisteredIdentityProvidersResponse_RegisteredProvider.ProtoReflect.Descriptor instead.
func (*GetRegisteredIdentityProvidersResponse_RegisteredProvider) Descriptor() ([]byte, []int) {
	return file_oauth2_proto_rawDescGZIP(), []int{15, 0}
}

func (x *GetRegisteredIdentityProvidersResponse_RegisteredProvider) GetProvider() ProviderType {
	if x != nil {
		return x.Provider
	}
	return ProviderType_GOOGLE
}

func (x *GetRegisteredIdentityProvidersResponse_RegisteredProvider) GetUserDetails() *ProviderUserDetails {
	if x != nil {
		return x.UserDetails
	}
	return nil
}

var File_oauth2_proto protoreflect.FileDescriptor

var file_oauth2_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x6f, 0x61, 0x75, 0x74, 0x68, 0x32, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x20,
	0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x69, 0x61, 0x6d, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x65,
	0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6f, 0x61, 0x75, 0x74, 0x68, 0x32,
	0x22, 0xa2, 0x02, 0x0a, 0x0e, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x12, 0x42, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x2e, 0x2e, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x69, 0x61, 0x6d, 0x5f, 0x61, 0x75, 0x74,
	0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6f, 0x61, 0x75, 0x74,
	0x68, 0x32, 0x2e, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12,
	0x18, 0x0a, 0x07, 0x61, 0x75, 0x74, 0x68, 0x55, 0x72, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x61, 0x75, 0x74, 0x68, 0x55, 0x72, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x55, 0x72, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x55, 0x72, 0x6c, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x41, 0x70, 0x69,
	0x55, 0x72, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x41,
	0x70, 0x69, 0x55, 0x72, 0x6c, 0x22, 0x67, 0x0a, 0x1b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x48, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x69, 0x61,
	0x6d, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x6f, 0x61, 0x75, 0x74, 0x68, 0x32, 0x2e, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x1e,
	0x0a, 0x1c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3a,
	0x0a, 0x1a, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09,
	0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x22, 0x69, 0x0a, 0x1b, 0x4c, 0x69,
	0x73, 0x74, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a, 0x07, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x6e, 0x61, 0x74,
	0x69, 0x76, 0x65, 0x5f, 0x69, 0x61, 0x6d, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6f, 0x61, 0x75, 0x74, 0x68, 0x32, 0x2e, 0x50, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x07, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x73, 0x22, 0x3c, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x41, 0x76, 0x61, 0x69,
	0x6c, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x22, 0x6d, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61,
	0x62, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x2e, 0x2e, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65,
	0x5f, 0x69, 0x61, 0x6d, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x6f, 0x61, 0x75, 0x74, 0x68, 0x32, 0x2e, 0x50, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x72, 0x73, 0x22, 0x89, 0x01, 0x0a, 0x13, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x55,
	0x73, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x12, 0x1c, 0x0a, 0x09, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x55, 0x72, 0x6c, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x55, 0x72, 0x6c, 0x22, 0xd9,
	0x01, 0x0a, 0x13, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x12, 0x4a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2e, 0x2e, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x5f,
	0x69, 0x61, 0x6d, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x6f, 0x61, 0x75, 0x74, 0x68, 0x32, 0x2e, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x6f, 0x64, 0x65, 0x56, 0x65, 0x72, 0x69,
	0x66, 0x69, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6f, 0x64, 0x65,
	0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65, 0x64, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x55, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72,
	0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x55, 0x72, 0x6c, 0x22, 0xef, 0x02, 0x0a, 0x14, 0x41,
	0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x55, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x3d, 0x2e, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x69, 0x61, 0x6d,
	0x5f, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x6f, 0x61, 0x75, 0x74, 0x68, 0x32, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x57, 0x0a, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x6e, 0x61,
	0x74, 0x69, 0x76, 0x65, 0x5f, 0x69, 0x61, 0x6d, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6f, 0x61, 0x75, 0x74, 0x68, 0x32, 0x2e, 0x50,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x52, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22,
	0x8a, 0x01, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x06, 0x0a, 0x02, 0x4f, 0x4b,
	0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x50, 0x52, 0x4f, 0x56, 0x49, 0x44, 0x45, 0x52, 0x5f, 0x44,
	0x49, 0x53, 0x41, 0x42, 0x4c, 0x45, 0x44, 0x10, 0x01, 0x12, 0x25, 0x0a, 0x21, 0x45, 0x52, 0x52,
	0x4f, 0x52, 0x5f, 0x57, 0x48, 0x49, 0x4c, 0x45, 0x5f, 0x52, 0x45, 0x54, 0x52, 0x49, 0x45, 0x56,
	0x49, 0x4e, 0x47, 0x5f, 0x41, 0x55, 0x54, 0x48, 0x5f, 0x54, 0x4f, 0x4b, 0x45, 0x4e, 0x10, 0x02,
	0x12, 0x25, 0x0a, 0x21, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x5f, 0x57, 0x48, 0x49, 0x4c, 0x45, 0x5f,
	0x46, 0x45, 0x54, 0x43, 0x48, 0x49, 0x4e, 0x47, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x44, 0x45,
	0x54, 0x41, 0x49, 0x4c, 0x53, 0x10, 0x03, 0x12, 0x13, 0x0a, 0x0f, 0x55, 0x4e, 0x41, 0x55, 0x54,
	0x48, 0x45, 0x4e, 0x54, 0x49, 0x43, 0x41, 0x54, 0x45, 0x44, 0x10, 0x04, 0x22, 0x84, 0x02, 0x0a,
	0x22, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x72, 0x46, 0x6f, 0x72, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x4a, 0x0a,
	0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x2e, 0x2e, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x69, 0x61, 0x6d, 0x5f, 0x61, 0x75, 0x74,
	0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6f, 0x61, 0x75, 0x74,
	0x68, 0x32, 0x2e, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x22, 0x0a,
	0x0c, 0x63, 0x6f, 0x64, 0x65, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6f, 0x64, 0x65, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65,
	0x72, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x55, 0x72, 0x6c,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x55, 0x72, 0x6c, 0x22, 0xf4, 0x02, 0x0a, 0x23, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72,
	0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x46, 0x6f, 0x72, 0x49, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x64, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x4c, 0x2e, 0x6e, 0x61,
	0x74, 0x69, 0x76, 0x65, 0x5f, 0x69, 0x61, 0x6d, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6f, 0x61, 0x75, 0x74, 0x68, 0x32, 0x2e, 0x52,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x46,
	0x6f, 0x72, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x57, 0x0a, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x5f,
	0x69, 0x61, 0x6d, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x6f, 0x61, 0x75, 0x74, 0x68, 0x32, 0x2e, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x0b, 0x75,
	0x73, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x8d, 0x01, 0x0a, 0x06, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x06, 0x0a, 0x02, 0x4f, 0x4b, 0x10, 0x00, 0x12, 0x15, 0x0a,
	0x11, 0x50, 0x52, 0x4f, 0x56, 0x49, 0x44, 0x45, 0x52, 0x5f, 0x44, 0x49, 0x53, 0x41, 0x42, 0x4c,
	0x45, 0x44, 0x10, 0x01, 0x12, 0x25, 0x0a, 0x21, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x5f, 0x57, 0x48,
	0x49, 0x4c, 0x45, 0x5f, 0x52, 0x45, 0x54, 0x52, 0x49, 0x45, 0x56, 0x49, 0x4e, 0x47, 0x5f, 0x41,
	0x55, 0x54, 0x48, 0x5f, 0x54, 0x4f, 0x4b, 0x45, 0x4e, 0x10, 0x02, 0x12, 0x25, 0x0a, 0x21, 0x45,
	0x52, 0x52, 0x4f, 0x52, 0x5f, 0x57, 0x48, 0x49, 0x4c, 0x45, 0x5f, 0x46, 0x45, 0x54, 0x43, 0x48,
	0x49, 0x4e, 0x47, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x44, 0x45, 0x54, 0x41, 0x49, 0x4c, 0x53,
	0x10, 0x03, 0x12, 0x16, 0x0a, 0x12, 0x41, 0x4c, 0x52, 0x45, 0x41, 0x44, 0x59, 0x5f, 0x52, 0x45,
	0x47, 0x49, 0x53, 0x54, 0x45, 0x52, 0x45, 0x44, 0x10, 0x04, 0x22, 0xa5, 0x01, 0x0a, 0x1d, 0x46,
	0x6f, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09,
	0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x4a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2e, 0x2e, 0x6e, 0x61, 0x74, 0x69, 0x76,
	0x65, 0x5f, 0x69, 0x61, 0x6d, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6f, 0x61, 0x75, 0x74, 0x68, 0x32, 0x2e, 0x50, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x22, 0x20, 0x0a, 0x1e, 0x46, 0x6f, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x61, 0x0a, 0x25, 0x47, 0x65, 0x74, 0x52, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x65, 0x72, 0x65, 0x64, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a,
	0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x69,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22, 0xdf, 0x02, 0x0a, 0x26, 0x47, 0x65, 0x74, 0x52,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x79, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x5b, 0x2e, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x69,
	0x61, 0x6d, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x6f, 0x61, 0x75, 0x74, 0x68, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x50, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x1a, 0xb9, 0x01,
	0x0a, 0x12, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x12, 0x4a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2e, 0x2e, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x5f,
	0x69, 0x61, 0x6d, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x6f, 0x61, 0x75, 0x74, 0x68, 0x32, 0x2e, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x12, 0x57, 0x0a, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x69,
	0x61, 0x6d, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x6f, 0x61, 0x75, 0x74, 0x68, 0x32, 0x2e, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x72, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x0b, 0x75, 0x73,
	0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x2a, 0xa3, 0x01, 0x0a, 0x0c, 0x50, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0a, 0x0a, 0x06, 0x47, 0x4f,
	0x4f, 0x47, 0x4c, 0x45, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x46, 0x41, 0x43, 0x45, 0x42, 0x4f,
	0x4f, 0x4b, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x47, 0x49, 0x54, 0x48, 0x55, 0x42, 0x10, 0x02,
	0x12, 0x0d, 0x0a, 0x09, 0x4d, 0x49, 0x43, 0x52, 0x4f, 0x53, 0x4f, 0x46, 0x54, 0x10, 0x03, 0x12,
	0x0b, 0x0a, 0x07, 0x54, 0x57, 0x49, 0x54, 0x54, 0x45, 0x52, 0x10, 0x04, 0x12, 0x09, 0x0a, 0x05,
	0x41, 0x50, 0x50, 0x4c, 0x45, 0x10, 0x05, 0x12, 0x0a, 0x0a, 0x06, 0x47, 0x49, 0x54, 0x4c, 0x41,
	0x42, 0x10, 0x06, 0x12, 0x0b, 0x0a, 0x07, 0x44, 0x49, 0x53, 0x43, 0x4f, 0x52, 0x44, 0x10, 0x07,
	0x12, 0x08, 0x0a, 0x04, 0x4f, 0x49, 0x44, 0x43, 0x10, 0x08, 0x12, 0x09, 0x0a, 0x05, 0x4f, 0x49,
	0x44, 0x43, 0x32, 0x10, 0x09, 0x12, 0x09, 0x0a, 0x05, 0x4f, 0x49, 0x44, 0x43, 0x33, 0x10, 0x0a,
	0x12, 0x0d, 0x0a, 0x09, 0x49, 0x4e, 0x53, 0x54, 0x41, 0x47, 0x52, 0x41, 0x4d, 0x10, 0x0b, 0x32,
	0xf4, 0x03, 0x0a, 0x24, 0x49, 0x41, 0x4d, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x41, 0x75, 0x74, 0x68, 0x32, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x97, 0x01, 0x0a, 0x14, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x12, 0x3d, 0x2e, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x69, 0x61, 0x6d, 0x5f, 0x61,
	0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6f, 0x61,
	0x75, 0x74, 0x68, 0x32, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x3e, 0x2e, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x69, 0x61, 0x6d, 0x5f, 0x61, 0x75,
	0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6f, 0x61, 0x75,
	0x74, 0x68, 0x32, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x94, 0x01, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x12, 0x3c, 0x2e, 0x6e, 0x61, 0x74,
	0x69, 0x76, 0x65, 0x5f, 0x69, 0x61, 0x6d, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6f, 0x61, 0x75, 0x74, 0x68, 0x32, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3d, 0x2e, 0x6e, 0x61, 0x74, 0x69, 0x76,
	0x65, 0x5f, 0x69, 0x61, 0x6d, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6f, 0x61, 0x75, 0x74, 0x68, 0x32, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x9a, 0x01, 0x0a, 0x15, 0x47, 0x65,
	0x74, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x73, 0x12, 0x3e, 0x2e, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x69, 0x61, 0x6d,
	0x5f, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x6f, 0x61, 0x75, 0x74, 0x68, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61,
	0x62, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x3f, 0x2e, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x69, 0x61, 0x6d,
	0x5f, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x6f, 0x61, 0x75, 0x74, 0x68, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61,
	0x62, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x32, 0xa8, 0x05, 0x0a, 0x1e, 0x49, 0x41, 0x4d, 0x41, 0x75,
	0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x41, 0x75, 0x74,
	0x68, 0x32, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x7f, 0x0a, 0x0c, 0x41, 0x75, 0x74,
	0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x65, 0x12, 0x35, 0x2e, 0x6e, 0x61, 0x74, 0x69,
	0x76, 0x65, 0x5f, 0x69, 0x61, 0x6d, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6f, 0x61, 0x75, 0x74, 0x68, 0x32, 0x2e, 0x41, 0x75, 0x74,
	0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x36, 0x2e, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x69, 0x61, 0x6d, 0x5f, 0x61, 0x75,
	0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6f, 0x61, 0x75,
	0x74, 0x68, 0x32, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0xac, 0x01, 0x0a, 0x1b, 0x52,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x46,
	0x6f, 0x72, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x44, 0x2e, 0x6e, 0x61, 0x74,
	0x69, 0x76, 0x65, 0x5f, 0x69, 0x61, 0x6d, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6f, 0x61, 0x75, 0x74, 0x68, 0x32, 0x2e, 0x52, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x46, 0x6f,
	0x72, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x45, 0x2e, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x69, 0x61, 0x6d, 0x5f, 0x61, 0x75,
	0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6f, 0x61, 0x75,
	0x74, 0x68, 0x32, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x46, 0x6f, 0x72, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x9d, 0x01, 0x0a, 0x16, 0x46, 0x6f,
	0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x12, 0x3f, 0x2e, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x69, 0x61,
	0x6d, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x6f, 0x61, 0x75, 0x74, 0x68, 0x32, 0x2e, 0x46, 0x6f, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x40, 0x2e, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x69,
	0x61, 0x6d, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x6f, 0x61, 0x75, 0x74, 0x68, 0x32, 0x2e, 0x46, 0x6f, 0x72, 0x67, 0x65, 0x74, 0x49,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0xb5, 0x01, 0x0a, 0x1e, 0x47, 0x65,
	0x74, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x49, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x12, 0x47, 0x2e, 0x6e,
	0x61, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x69, 0x61, 0x6d, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e,
	0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6f, 0x61, 0x75, 0x74, 0x68, 0x32, 0x2e,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x49, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x48, 0x2e, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x69,
	0x61, 0x6d, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x6f, 0x61, 0x75, 0x74, 0x68, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x50, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x42, 0x36, 0x5a, 0x34, 0x73, 0x6c, 0x61, 0x6d, 0x79, 0x2f, 0x6f, 0x70, 0x65, 0x6e, 0x42,
	0x50, 0x2f, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x2f, 0x69, 0x61, 0x6d, 0x2f, 0x61, 0x75, 0x74,
	0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x6f, 0x61, 0x75, 0x74,
	0x68, 0x32, 0x3b, 0x6f, 0x61, 0x75, 0x74, 0x68, 0x32, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_oauth2_proto_rawDescOnce sync.Once
	file_oauth2_proto_rawDescData = file_oauth2_proto_rawDesc
)

func file_oauth2_proto_rawDescGZIP() []byte {
	file_oauth2_proto_rawDescOnce.Do(func() {
		file_oauth2_proto_rawDescData = protoimpl.X.CompressGZIP(file_oauth2_proto_rawDescData)
	})
	return file_oauth2_proto_rawDescData
}

var file_oauth2_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_oauth2_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_oauth2_proto_goTypes = []interface{}{
	(ProviderType)(0),                                                 // 0: native_iam_authentication_oauth2.ProviderType
	(AuthenticateResponse_Status)(0),                                  // 1: native_iam_authentication_oauth2.AuthenticateResponse.Status
	(RegisterProviderForIdentityResponse_Status)(0),                   // 2: native_iam_authentication_oauth2.RegisterProviderForIdentityResponse.Status
	(*ProviderConfig)(nil),                                            // 3: native_iam_authentication_oauth2.ProviderConfig
	(*UpdateProviderConfigRequest)(nil),                               // 4: native_iam_authentication_oauth2.UpdateProviderConfigRequest
	(*UpdateProviderConfigResponse)(nil),                              // 5: native_iam_authentication_oauth2.UpdateProviderConfigResponse
	(*ListProviderConfigsRequest)(nil),                                // 6: native_iam_authentication_oauth2.ListProviderConfigsRequest
	(*ListProviderConfigsResponse)(nil),                               // 7: native_iam_authentication_oauth2.ListProviderConfigsResponse
	(*GetAvailableProvidersRequest)(nil),                              // 8: native_iam_authentication_oauth2.GetAvailableProvidersRequest
	(*GetAvailableProvidersResponse)(nil),                             // 9: native_iam_authentication_oauth2.GetAvailableProvidersResponse
	(*ProviderUserDetails)(nil),                                       // 10: native_iam_authentication_oauth2.ProviderUserDetails
	(*AuthenticateRequest)(nil),                                       // 11: native_iam_authentication_oauth2.AuthenticateRequest
	(*AuthenticateResponse)(nil),                                      // 12: native_iam_authentication_oauth2.AuthenticateResponse
	(*RegisterProviderForIdentityRequest)(nil),                        // 13: native_iam_authentication_oauth2.RegisterProviderForIdentityRequest
	(*RegisterProviderForIdentityResponse)(nil),                       // 14: native_iam_authentication_oauth2.RegisterProviderForIdentityResponse
	(*ForgetIdentityProviderRequest)(nil),                             // 15: native_iam_authentication_oauth2.ForgetIdentityProviderRequest
	(*ForgetIdentityProviderResponse)(nil),                            // 16: native_iam_authentication_oauth2.ForgetIdentityProviderResponse
	(*GetRegisteredIdentityProvidersRequest)(nil),                     // 17: native_iam_authentication_oauth2.GetRegisteredIdentityProvidersRequest
	(*GetRegisteredIdentityProvidersResponse)(nil),                    // 18: native_iam_authentication_oauth2.GetRegisteredIdentityProvidersResponse
	(*GetRegisteredIdentityProvidersResponse_RegisteredProvider)(nil), // 19: native_iam_authentication_oauth2.GetRegisteredIdentityProvidersResponse.RegisteredProvider
}
var file_oauth2_proto_depIdxs = []int32{
	0,  // 0: native_iam_authentication_oauth2.ProviderConfig.type:type_name -> native_iam_authentication_oauth2.ProviderType
	3,  // 1: native_iam_authentication_oauth2.UpdateProviderConfigRequest.config:type_name -> native_iam_authentication_oauth2.ProviderConfig
	3,  // 2: native_iam_authentication_oauth2.ListProviderConfigsResponse.configs:type_name -> native_iam_authentication_oauth2.ProviderConfig
	0,  // 3: native_iam_authentication_oauth2.GetAvailableProvidersResponse.providers:type_name -> native_iam_authentication_oauth2.ProviderType
	0,  // 4: native_iam_authentication_oauth2.AuthenticateRequest.provider:type_name -> native_iam_authentication_oauth2.ProviderType
	1,  // 5: native_iam_authentication_oauth2.AuthenticateResponse.status:type_name -> native_iam_authentication_oauth2.AuthenticateResponse.Status
	10, // 6: native_iam_authentication_oauth2.AuthenticateResponse.userDetails:type_name -> native_iam_authentication_oauth2.ProviderUserDetails
	0,  // 7: native_iam_authentication_oauth2.RegisterProviderForIdentityRequest.provider:type_name -> native_iam_authentication_oauth2.ProviderType
	2,  // 8: native_iam_authentication_oauth2.RegisterProviderForIdentityResponse.status:type_name -> native_iam_authentication_oauth2.RegisterProviderForIdentityResponse.Status
	10, // 9: native_iam_authentication_oauth2.RegisterProviderForIdentityResponse.userDetails:type_name -> native_iam_authentication_oauth2.ProviderUserDetails
	0,  // 10: native_iam_authentication_oauth2.ForgetIdentityProviderRequest.provider:type_name -> native_iam_authentication_oauth2.ProviderType
	19, // 11: native_iam_authentication_oauth2.GetRegisteredIdentityProvidersResponse.providers:type_name -> native_iam_authentication_oauth2.GetRegisteredIdentityProvidersResponse.RegisteredProvider
	0,  // 12: native_iam_authentication_oauth2.GetRegisteredIdentityProvidersResponse.RegisteredProvider.provider:type_name -> native_iam_authentication_oauth2.ProviderType
	10, // 13: native_iam_authentication_oauth2.GetRegisteredIdentityProvidersResponse.RegisteredProvider.userDetails:type_name -> native_iam_authentication_oauth2.ProviderUserDetails
	4,  // 14: native_iam_authentication_oauth2.IAMAuthenticationOAuth2ConfigService.UpdateProviderConfig:input_type -> native_iam_authentication_oauth2.UpdateProviderConfigRequest
	6,  // 15: native_iam_authentication_oauth2.IAMAuthenticationOAuth2ConfigService.ListProviderConfigs:input_type -> native_iam_authentication_oauth2.ListProviderConfigsRequest
	8,  // 16: native_iam_authentication_oauth2.IAMAuthenticationOAuth2ConfigService.GetAvailableProviders:input_type -> native_iam_authentication_oauth2.GetAvailableProvidersRequest
	11, // 17: native_iam_authentication_oauth2.IAMAuthenticationOAuth2Service.Authenticate:input_type -> native_iam_authentication_oauth2.AuthenticateRequest
	13, // 18: native_iam_authentication_oauth2.IAMAuthenticationOAuth2Service.RegisterProviderForIdentity:input_type -> native_iam_authentication_oauth2.RegisterProviderForIdentityRequest
	15, // 19: native_iam_authentication_oauth2.IAMAuthenticationOAuth2Service.ForgetIdentityProvider:input_type -> native_iam_authentication_oauth2.ForgetIdentityProviderRequest
	17, // 20: native_iam_authentication_oauth2.IAMAuthenticationOAuth2Service.GetRegisteredIdentityProviders:input_type -> native_iam_authentication_oauth2.GetRegisteredIdentityProvidersRequest
	5,  // 21: native_iam_authentication_oauth2.IAMAuthenticationOAuth2ConfigService.UpdateProviderConfig:output_type -> native_iam_authentication_oauth2.UpdateProviderConfigResponse
	7,  // 22: native_iam_authentication_oauth2.IAMAuthenticationOAuth2ConfigService.ListProviderConfigs:output_type -> native_iam_authentication_oauth2.ListProviderConfigsResponse
	9,  // 23: native_iam_authentication_oauth2.IAMAuthenticationOAuth2ConfigService.GetAvailableProviders:output_type -> native_iam_authentication_oauth2.GetAvailableProvidersResponse
	12, // 24: native_iam_authentication_oauth2.IAMAuthenticationOAuth2Service.Authenticate:output_type -> native_iam_authentication_oauth2.AuthenticateResponse
	14, // 25: native_iam_authentication_oauth2.IAMAuthenticationOAuth2Service.RegisterProviderForIdentity:output_type -> native_iam_authentication_oauth2.RegisterProviderForIdentityResponse
	16, // 26: native_iam_authentication_oauth2.IAMAuthenticationOAuth2Service.ForgetIdentityProvider:output_type -> native_iam_authentication_oauth2.ForgetIdentityProviderResponse
	18, // 27: native_iam_authentication_oauth2.IAMAuthenticationOAuth2Service.GetRegisteredIdentityProviders:output_type -> native_iam_authentication_oauth2.GetRegisteredIdentityProvidersResponse
	21, // [21:28] is the sub-list for method output_type
	14, // [14:21] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_oauth2_proto_init() }
func file_oauth2_proto_init() {
	if File_oauth2_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_oauth2_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProviderConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oauth2_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateProviderConfigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oauth2_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateProviderConfigResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oauth2_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListProviderConfigsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oauth2_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListProviderConfigsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oauth2_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAvailableProvidersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oauth2_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAvailableProvidersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oauth2_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProviderUserDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oauth2_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthenticateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oauth2_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthenticateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oauth2_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterProviderForIdentityRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oauth2_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterProviderForIdentityResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oauth2_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ForgetIdentityProviderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oauth2_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ForgetIdentityProviderResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oauth2_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRegisteredIdentityProvidersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oauth2_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRegisteredIdentityProvidersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oauth2_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRegisteredIdentityProvidersResponse_RegisteredProvider); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_oauth2_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_oauth2_proto_goTypes,
		DependencyIndexes: file_oauth2_proto_depIdxs,
		EnumInfos:         file_oauth2_proto_enumTypes,
		MessageInfos:      file_oauth2_proto_msgTypes,
	}.Build()
	File_oauth2_proto = out.File
	file_oauth2_proto_rawDesc = nil
	file_oauth2_proto_goTypes = nil
	file_oauth2_proto_depIdxs = nil
}
