syntax = "proto3";

package native_user;

option go_package = "slamy/openERP/native/user;native_user_grpc";

message User {
    // Unique identifier
    string uuid = 1;
    // Login unique identifies user (like UUID) but user defined and can be changed.
    string login = 2;
    // Nnative_iam_identity UUID
    string identity = 3;

    // User-defined name that will be displayed instead of login
    string fullName = 4;
    // Link to the user avatar image
    string avatar = 5;
    // Email address
    string email = 6;
}

message CreateRequest {
    // User-defined unique identifier
    string login = 1;

    // User-defined name that will be displayed instead of login
    string fullName = 2;
    // Link to the user avatar image
    string avatar = 3;
    // Email address
    string email = 4;
}
message CreateResponse {
    // Created user
    User user = 1;
}

message GetRequest {
    // User unique identifier to get
    string uuid = 1;
    // Use cache for this request or not. Cache has a very small chance to be invalid. Invalid cache deletes after small period of time (60 seconds by default)
    bool useCache = 2;
}
message GetResponse {
    // User with specified UUID
    User user = 2;
}

message GetByLoginRequest {
    // Search for user that has this login
    string login = 1;
    // Use cache for this request or not. Cache has a very small chance to be invalid. Invalid cache deletes after small period of time (60 seconds by default)
    bool useCache = 2;
}
message GetByLoginResponse {
    // User with specified login
    User user = 1;
}

message GetByIdentityRequest {
    // Search for user which has this identity uuid assigned to it
    string identity = 1;
    // Use cache for this request or not. Cache has a very small chance to be invalid. Invalid cache deletes after small period of time (60 seconds by default)
    bool useCache = 2;
}
message GetByIdentityResponse {
    // User wich has specified identity
    User user = 1;
}

message UpdateRequest {
    // Unique identifier of user, that will be updated
    string uuid = 1;
    // User-defined unique identifier
    string login = 2;
    // User-defined name that will be displayed instead of login
    string fullName = 3;
    // Link to the user avatar image
    string avatar = 4;
    // Email address
    string email = 5;
}
message UpdateResponse {
    // User after update
    User user = 1;
}

message DeleteRequest {
    // Unique identifier of user to delete
    string uuid = 1;
}
message DeleteResponse {}

service UserService {
    // Create new user and assign identity to it.
    rpc Create(CreateRequest) returns (CreateResponse);
    // Get user by its unique identifier
    rpc Get(GetRequest) returns (GetResponse);
    // Get user by its login
    rpc GetByLogin(GetByLoginRequest) returns (GetByLoginResponse);
    // Get user by the identity uuid that was assigned to it
    rpc GetByIdentity(GetByIdentityRequest) returns (GetByIdentityResponse);
    // Update user information
    rpc Update(UpdateRequest) returns (UpdateResponse);
    // Delete user
    rpc Delete(DeleteRequest) returns (DeleteResponse);
}