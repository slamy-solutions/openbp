syntax = "proto3";

package native_iam_identity;

option go_package = "slamy/openCRM/native/iam/identity;native_iam_identity_grpc";

message Identity {
    message PolicyReference {
        // Policy namespace. Empty for global policy
        string namespace = 1;
        // Policy uuid (unique identifier) inside namespace
        string uuid = 2;
    }

    // Namespaces of the identity. Can be empty for global identities.
    string namespace = 1;
    // Unique identity identifier
    string uuid = 2;
    // Public identity name
    string name = 3;
    // If identity is not active, it will not be able to login and perform any actions.
    bool active = 4;

    // Security policies assigned to the identity
    repeated PolicyReference policies = 5;
}

message CreateIdentityRequest {
    // Namespace where to create identity
    string namespace = 1;
    // Public name for newly created identity. It may not be unique - this is just human-readable name.
    string name = 2;
    // Should the identity be active on the start or not
    bool initiallyActive = 3;
}
message CreateIdentityResponse {
    // Created identity
    Identity identity = 1;
}

message GetIdentityRequest {
    // Identity namespace
    string namespace = 1;
    // Identity unique identifier inside namespace
    string uuid = 2;
    // Use cache or not. Cache may not be valid under very rare conditions (simultaniour read and writes). Cache automatically clears after short period of time (30 seconds by default).
    bool useCache = 3;
}
message GetIdentityResponse {
    // Identity information
    Identity identity = 1;
}

message AddPolicyRequest {
    // Identity namespace
    string identityNamespace = 1;
    // Identity identifier inside identity namespace
    string identityUUID = 2;
    // Policy namespace
    string policyNamespace = 3;
    // Policy UUID inside policy namespace
    string policyUUID = 4;
}
message AddPolicyResponse {
    // Updated identity (after adding policy)
    Identity identity = 1;
}

message RemovePolicyRequest {
    // Identity namespace
    string identityNamespace = 1;
    // Identity unique identifier inside identity namespace
    string identityUUID = 2;
    // Policy namespace
    string policyNamespace = 3;
    // Policy UUID inside policy namespace
    string policyUUID = 4;
}
message RemovePolicyResponse {
    // Updated identity (after removing policy)
    Identity identity = 1;
}

message SetIdentityActiveRequest {
    // Namespace of the identity
    string namespace = 1;
    // Identity unique identifier inside namespace
    string uuid = 2;
    // Set active or not
    bool active = 3;
}
message SetIdentityActiveResponse {
    // Identity after update
    Identity identity = 1;
}

// Provides API to manage IAM identities 
service IAMIdentityService {
    // Create new identity
    rpc Create(CreateIdentityRequest) returns (CreateIdentityResponse);
    // Get identity 
    rpc Get(GetIdentityRequest) returns (GetIdentityResponse);

    // Add policy to the identity. If policy was already added - does nothing.
    rpc AddPolicy(AddPolicyRequest) returns (AddPolicyResponse);
    // Removes policy from the identity. If policy was already removed - does nothing.
    rpc RemovePolicy(RemovePolicyRequest) returns (RemovePolicyResponse);

    // Set identity active or not.
    rpc SetActive(SetIdentityActiveRequest) returns (SetIdentityActiveResponse);
}