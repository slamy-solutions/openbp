version: "3.4"
services:
  native_namespace:
    container_name: native_namespace
    restart: always
    build:
      context: .
      dockerfile: modules/native/services/namespace/Dockerfile
    environment:
      SYSTEM_MONGODB_URL: mongodb://root:example@system_db
      SYSTEM_REDIS_CACHE_CONNECTION_URL: redis://system_cache
      OTEL_EXPORTER_OTLP_ENDPOINT: "system_telemetry:55680"
      OTEL_SERVICE_NAME: "native_namespace"
    depends_on:
      - system_db
      - system_cache
      - system_telemetry
      - system_rabbitmq

  native_lambda_manager:
    container_name: native_lambda_manager
    restart: always
    build:
      context: .
      dockerfile: modules/native/services/lambda/manager/Dockerfile
    environment:
      SYSTEM_MONGODB_URL: mongodb://root:example@system_db
      OTEL_EXPORTER_OTLP_ENDPOINT: "system_telemetry:55680"
      OTEL_SERVICE_NAME: "native_lambda_manager"
    depends_on:
      - system_db
      - system_cache
      - system_telemetry
      - system_rabbitmq

  native_lambda_entrypoint:
    container_name: native_lambda_entrypoint
    restart: always
    build:
      context: .
      dockerfile: modules/native/services/lambda/entrypoint/Dockerfile
    environment:
      OTEL_EXPORTER_OTLP_ENDPOINT: "system_telemetry:55680"
      OTEL_SERVICE_NAME: "native_lambda_entrypoint"
    depends_on:
      - system_telemetry
      - system_rabbitmq
      - native_lambda_manager
  
  native_file:
    container_name: native_file
    restart: always
    build:
      context: .
      dockerfile: modules/native/services/file/Dockerfile
    environment:
      SYSTEM_MONGODB_URL: mongodb://root:example@system_db
      SYSTEM_REDIS_CACHE_CONNECTION_URL: redis://system_cache
      OTEL_EXPORTER_OTLP_ENDPOINT: "system_telemetry:55680"
      OTEL_SERVICE_NAME: "native_file"
    depends_on:
      - system_db
      - system_cache
      - system_telemetry
      - system_rabbitmq
      - native_namespace