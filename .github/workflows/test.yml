name: Run all tests
on:
  push:
    branches:
      - '**' #ignore tags, because tags will be tested using workflow_call during the release workflow
    paths-ignore:
      - "site/**"
      - "scripts/**"
  workflow_call:

jobs:
  test-native:
    name: "Test native module using developers docker-compose files"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Prebuild one of the containers
        run: docker-compose -f docker-compose.yml -f modules/system/docker-compose.yml -f modules/native/docker-compose.yml build native_iam
      - name: Build the stack
        run: docker-compose -f docker-compose.yml -f modules/system/docker-compose.yml -f modules/native/docker-compose.yml build --parallel
      - name: Run the stack
        run: docker-compose -f docker-compose.yml -f modules/system/docker-compose.yml -f modules/native/docker-compose.yml up -d
      - name: Setup Go
        uses: actions/setup-go@v4
      - name: Install test reporting tool
        run: go install github.com/jstemmer/go-junit-report/v2@latest
      - name: Run smoke tests
        run: env $(cat ./modules/.test.env) go test -v 2>&1 ./modules/native/testing/smoke/... | tee smoke.txt && cat smoke.txt | go-junit-report -set-exit-code > TestResults-smoke.xml
      - name: Run unit (whitebox) tests
        run: env $(cat ./modules/.test.env) go test -v 2>&1 ./modules/native/testing/unit/...  | tee unit.txt && cat unit.txt | go-junit-report -set-exit-code > TestResults-unit.xml
      - name: Run integration tests
        run: env $(cat ./modules/.test.env) go test -v 2>&1 ./modules/native/testing/integration/... ./modules/system/testing/integration/... | tee integration.txt && cat integration.txt | go-junit-report -set-exit-code > TestResults-integration.xml
      - name: Upload test summary
        uses: test-summary/action@v2
        with:
          paths: "TestResults-*.xml"
        if: always()
