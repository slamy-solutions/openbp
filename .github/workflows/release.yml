name: "Release new version"

on:
  push:
    tags:
      - '*'

jobs:
  setup:
    name: Extract tag name
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Extract tag name
        shell: bash
        run: echo "##[set-output name=tag;]$(echo ${GITHUB_REF#refs/tags/})"
        id: extract_tag
    outputs:
      tag: ${{ steps.extract_tag.outputs.tag }}

  tests:
    uses: ./.github/workflows/test.yml
  
  # Native
  publish-native-namespace:
    needs: [tests,setup]
    name: Publish native_namespace docker image
    uses: ./.github/workflows/publish-service.yml
    with:
      dockerfile: modules/native/namespace/Dockerfile
      tags: |
        openbp/obp-native-namespace:latest
        openbp/obp-native-namespace:${{ needs.setup.outputs.tag }}
    secrets: inherit
  publish-native-keyvaluestorage:
    needs: [tests,setup]
    name: Publish native_keyvaluestorage docker image
    uses: ./.github/workflows/publish-service.yml
    with:
      dockerfile: modules/native/keyvaluestorage/Dockerfile
      tags: |
        openbp/obp-native-keyvaluestorage:latest
        openbp/obp-native-keyvaluestorage:${{ needs.setup.outputs.tag }}
    secrets: inherit
  publish-native-iam-policy:
    needs: [tests,setup]
    name: Publish native_iam_policy docker image
    uses: ./.github/workflows/publish-service.yml
    with:
      dockerfile: modules/native/iam/policy/Dockerfile
      tags: |
        openbp/obp-native-iam-policy:latest
        openbp/obp-native-iam-policy:${{ needs.setup.outputs.tag }}
    secrets: inherit
  publish-native-iam-token:
    needs: [tests,setup]
    name: Publish native_iam_token docker image
    uses: ./.github/workflows/publish-service.yml
    with:
      dockerfile: modules/native/iam/token/Dockerfile
      tags: |
        openbp/obp-native-iam-token:latest
        openbp/obp-native-iam-token:${{ needs.setup.outputs.tag }}
    secrets: inherit
  publish-native-iam-oauth:
    needs: [tests,setup]
    name: Publish native_iam_oauth docker image
    uses: ./.github/workflows/publish-service.yml
    with:
      dockerfile: modules/native/iam/oauth/Dockerfile
      tags: |
        openbp/obp-native-iam-oauth:latest
        openbp/obp-native-iam-oauth:${{ needs.setup.outputs.tag }}
    secrets: inherit
  publish-native-iam-identity:
    needs: [tests,setup]
    name: Publish native_iam_identity docker image
    uses: ./.github/workflows/publish-service.yml
    with:
      dockerfile: modules/native/iam/identity/Dockerfile
      tags: |
        openbp/obp-native-iam-identity:latest
        openbp/obp-native-iam-identity:${{ needs.setup.outputs.tag }}
    secrets: inherit
  publish-native-iam-authentication-password:
    needs: [tests,setup]
    name: Publish native_iam_authentication_password docker image
    uses: ./.github/workflows/publish-service.yml
    with:
      dockerfile: modules/native/iam/authentication/password/Dockerfile
      tags: |
        openbp/obp-native-iam-authentication-password:latest
        openbp/obp-native-iam-authentication-password:${{ needs.setup.outputs.tag }}
    secrets: inherit
  publish-native-actor-user:
    needs: [tests,setup]
    name: Publish native_actor_user docker image
    uses: ./.github/workflows/publish-service.yml
    with:
      dockerfile: modules/native/actor/user/Dockerfile
      tags: |
        openbp/obp-native-actor-user:latest
        openbp/obp-native-actor-user:${{ needs.setup.outputs.tag }}
    secrets: inherit

  github-release:
    needs:
      - publish-native-namespace
      - publish-native-keyvaluestorage
      - publish-native-iam-policy
      - publish-native-iam-token
      - publish-native-iam-oauth
      - publish-native-iam-identity
      - publish-native-iam-authentication-password
      - publish-native-actor-user
    name: Create github release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}